/*
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.permify.api;

import org.permify.model.ItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntities;
import org.permify.model.SchemaListResponse;
import org.permify.model.SchemaPartialWriteResponse;
import org.permify.model.SchemaReadResponse;
import org.permify.model.SchemaWriteResponse;
import org.permify.model.SchemasListRequest;
import org.permify.model.SchemasReadRequest;
import org.permify.model.SchemasWriteRequest;
import org.permify.model.Status;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for SchemaApi
 */
@Disabled
public class SchemaApiTest {

    private final SchemaApi api = new SchemaApi();

    
    /**
     * list schema
     *
     * 
     */
    @Test
    public void schemasListTest()  {
        // uncomment below to test the function
        //String tenantId = null;
        //SchemasListRequest body = null;
        //SchemaListResponse response = api.schemasList(tenantId, body).block();

        // TODO: test validations
    }
    
    /**
     * partially update your authorization model
     *
     * 
     */
    @Test
    public void schemasPartialWriteTest()  {
        // uncomment below to test the function
        //String tenantId = null;
        //ItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntities body = null;
        //SchemaPartialWriteResponse response = api.schemasPartialWrite(tenantId, body).block();

        // TODO: test validations
    }
    
    /**
     * read schema
     *
     * 
     */
    @Test
    public void schemasReadTest()  {
        // uncomment below to test the function
        //String tenantId = null;
        //SchemasReadRequest body = null;
        //SchemaReadResponse response = api.schemasRead(tenantId, body).block();

        // TODO: test validations
    }
    
    /**
     * write schema
     *
     * 
     */
    @Test
    public void schemasWriteTest()  {
        // uncomment below to test the function
        //String tenantId = null;
        //SchemasWriteRequest body = null;
        //SchemaWriteResponse response = api.schemasWrite(tenantId, body).block();

        // TODO: test validations
    }
    
}
