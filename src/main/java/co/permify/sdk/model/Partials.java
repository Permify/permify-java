/*
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v1.0.3
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package co.permify.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import co.permify.sdk.client.ApiClient;
/**
 * Partials
 */
@JsonPropertyOrder({
  Partials.JSON_PROPERTY_WRITE,
  Partials.JSON_PROPERTY_DELETE,
  Partials.JSON_PROPERTY_UPDATE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class Partials {
  public static final String JSON_PROPERTY_WRITE = "write";
  @jakarta.annotation.Nullable
  private List<String> write = new ArrayList<>();

  public static final String JSON_PROPERTY_DELETE = "delete";
  @jakarta.annotation.Nullable
  private List<String> delete = new ArrayList<>();

  public static final String JSON_PROPERTY_UPDATE = "update";
  @jakarta.annotation.Nullable
  private List<String> update = new ArrayList<>();

  public Partials() { 
  }

  public Partials write(@jakarta.annotation.Nullable List<String> write) {
    this.write = write;
    return this;
  }

  public Partials addWriteItem(String writeItem) {
    if (this.write == null) {
      this.write = new ArrayList<>();
    }
    this.write.add(writeItem);
    return this;
  }

  /**
   * Get write
   * @return write
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WRITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getWrite() {
    return write;
  }


  @JsonProperty(JSON_PROPERTY_WRITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWrite(@jakarta.annotation.Nullable List<String> write) {
    this.write = write;
  }


  public Partials delete(@jakarta.annotation.Nullable List<String> delete) {
    this.delete = delete;
    return this;
  }

  public Partials addDeleteItem(String deleteItem) {
    if (this.delete == null) {
      this.delete = new ArrayList<>();
    }
    this.delete.add(deleteItem);
    return this;
  }

  /**
   * Get delete
   * @return delete
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getDelete() {
    return delete;
  }


  @JsonProperty(JSON_PROPERTY_DELETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDelete(@jakarta.annotation.Nullable List<String> delete) {
    this.delete = delete;
  }


  public Partials update(@jakarta.annotation.Nullable List<String> update) {
    this.update = update;
    return this;
  }

  public Partials addUpdateItem(String updateItem) {
    if (this.update == null) {
      this.update = new ArrayList<>();
    }
    this.update.add(updateItem);
    return this;
  }

  /**
   * Get update
   * @return update
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getUpdate() {
    return update;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdate(@jakarta.annotation.Nullable List<String> update) {
    this.update = update;
  }


  /**
   * Return true if this Partials object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Partials partials = (Partials) o;
    return Objects.equals(this.write, partials.write) &&
        Objects.equals(this.delete, partials.delete) &&
        Objects.equals(this.update, partials.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(write, delete, update);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Partials {\n");
    sb.append("    write: ").append(toIndentedString(write)).append("\n");
    sb.append("    delete: ").append(toIndentedString(delete)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `write` to the URL query string
    if (getWrite() != null) {
      for (int i = 0; i < getWrite().size(); i++) {
        joiner.add(String.format("%swrite%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getWrite().get(i)))));
      }
    }

    // add `delete` to the URL query string
    if (getDelete() != null) {
      for (int i = 0; i < getDelete().size(); i++) {
        joiner.add(String.format("%sdelete%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getDelete().get(i)))));
      }
    }

    // add `update` to the URL query string
    if (getUpdate() != null) {
      for (int i = 0; i < getUpdate().size(); i++) {
        joiner.add(String.format("%supdate%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getUpdate().get(i)))));
      }
    }

    return joiner.toString();
  }
}

