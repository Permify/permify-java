/*
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v1.0.3
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package co.permify.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import co.permify.sdk.model.AbstractType;
import co.permify.sdk.model.FunctionType;
import co.permify.sdk.model.ListType;
import co.permify.sdk.model.MapType;
import co.permify.sdk.model.PrimitiveType;
import co.permify.sdk.model.WellKnownType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import co.permify.sdk.client.ApiClient;
/**
 * Represents a CEL type.
 */
@JsonPropertyOrder({
  V1alpha1Type.JSON_PROPERTY_DYN,
  V1alpha1Type.JSON_PROPERTY_NULL,
  V1alpha1Type.JSON_PROPERTY_PRIMITIVE,
  V1alpha1Type.JSON_PROPERTY_WRAPPER,
  V1alpha1Type.JSON_PROPERTY_WELL_KNOWN,
  V1alpha1Type.JSON_PROPERTY_LIST_TYPE,
  V1alpha1Type.JSON_PROPERTY_MAP_TYPE,
  V1alpha1Type.JSON_PROPERTY_FUNCTION,
  V1alpha1Type.JSON_PROPERTY_MESSAGE_TYPE,
  V1alpha1Type.JSON_PROPERTY_TYPE_PARAM,
  V1alpha1Type.JSON_PROPERTY_TYPE,
  V1alpha1Type.JSON_PROPERTY_ERROR,
  V1alpha1Type.JSON_PROPERTY_ABSTRACT_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class V1alpha1Type {
  public static final String JSON_PROPERTY_DYN = "dyn";
  @jakarta.annotation.Nullable
  private Object dyn;

  public static final String JSON_PROPERTY_NULL = "null";
  @jakarta.annotation.Nullable
  private String _null;

  public static final String JSON_PROPERTY_PRIMITIVE = "primitive";
  @jakarta.annotation.Nullable
  private PrimitiveType primitive = PrimitiveType.PRIMITIVE_TYPE_UNSPECIFIED;

  public static final String JSON_PROPERTY_WRAPPER = "wrapper";
  @jakarta.annotation.Nullable
  private PrimitiveType wrapper = PrimitiveType.PRIMITIVE_TYPE_UNSPECIFIED;

  public static final String JSON_PROPERTY_WELL_KNOWN = "wellKnown";
  @jakarta.annotation.Nullable
  private WellKnownType wellKnown = WellKnownType.WELL_KNOWN_TYPE_UNSPECIFIED;

  public static final String JSON_PROPERTY_LIST_TYPE = "listType";
  @jakarta.annotation.Nullable
  private ListType listType;

  public static final String JSON_PROPERTY_MAP_TYPE = "mapType";
  @jakarta.annotation.Nullable
  private MapType mapType;

  public static final String JSON_PROPERTY_FUNCTION = "function";
  @jakarta.annotation.Nullable
  private FunctionType function;

  public static final String JSON_PROPERTY_MESSAGE_TYPE = "messageType";
  @jakarta.annotation.Nullable
  private String messageType;

  public static final String JSON_PROPERTY_TYPE_PARAM = "typeParam";
  @jakarta.annotation.Nullable
  private String typeParam;

  public static final String JSON_PROPERTY_TYPE = "type";
  @jakarta.annotation.Nullable
  private V1alpha1Type type;

  public static final String JSON_PROPERTY_ERROR = "error";
  @jakarta.annotation.Nullable
  private Object error;

  public static final String JSON_PROPERTY_ABSTRACT_TYPE = "abstractType";
  @jakarta.annotation.Nullable
  private AbstractType abstractType;

  public V1alpha1Type() { 
  }

  public V1alpha1Type dyn(@jakarta.annotation.Nullable Object dyn) {
    this.dyn = dyn;
    return this;
  }

  /**
   * Dynamic type.
   * @return dyn
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DYN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Object getDyn() {
    return dyn;
  }


  @JsonProperty(JSON_PROPERTY_DYN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDyn(@jakarta.annotation.Nullable Object dyn) {
    this.dyn = dyn;
  }


  public V1alpha1Type _null(@jakarta.annotation.Nullable String _null) {
    this._null = _null;
    return this;
  }

  /**
   * Null value.
   * @return _null
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NULL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getNull() {
    return _null;
  }


  @JsonProperty(JSON_PROPERTY_NULL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNull(@jakarta.annotation.Nullable String _null) {
    this._null = _null;
  }


  public V1alpha1Type primitive(@jakarta.annotation.Nullable PrimitiveType primitive) {
    this.primitive = primitive;
    return this;
  }

  /**
   * Get primitive
   * @return primitive
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIMITIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PrimitiveType getPrimitive() {
    return primitive;
  }


  @JsonProperty(JSON_PROPERTY_PRIMITIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrimitive(@jakarta.annotation.Nullable PrimitiveType primitive) {
    this.primitive = primitive;
  }


  public V1alpha1Type wrapper(@jakarta.annotation.Nullable PrimitiveType wrapper) {
    this.wrapper = wrapper;
    return this;
  }

  /**
   * Get wrapper
   * @return wrapper
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WRAPPER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PrimitiveType getWrapper() {
    return wrapper;
  }


  @JsonProperty(JSON_PROPERTY_WRAPPER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWrapper(@jakarta.annotation.Nullable PrimitiveType wrapper) {
    this.wrapper = wrapper;
  }


  public V1alpha1Type wellKnown(@jakarta.annotation.Nullable WellKnownType wellKnown) {
    this.wellKnown = wellKnown;
    return this;
  }

  /**
   * Get wellKnown
   * @return wellKnown
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WELL_KNOWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public WellKnownType getWellKnown() {
    return wellKnown;
  }


  @JsonProperty(JSON_PROPERTY_WELL_KNOWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWellKnown(@jakarta.annotation.Nullable WellKnownType wellKnown) {
    this.wellKnown = wellKnown;
  }


  public V1alpha1Type listType(@jakarta.annotation.Nullable ListType listType) {
    this.listType = listType;
    return this;
  }

  /**
   * Get listType
   * @return listType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIST_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ListType getListType() {
    return listType;
  }


  @JsonProperty(JSON_PROPERTY_LIST_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setListType(@jakarta.annotation.Nullable ListType listType) {
    this.listType = listType;
  }


  public V1alpha1Type mapType(@jakarta.annotation.Nullable MapType mapType) {
    this.mapType = mapType;
    return this;
  }

  /**
   * Get mapType
   * @return mapType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public MapType getMapType() {
    return mapType;
  }


  @JsonProperty(JSON_PROPERTY_MAP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMapType(@jakarta.annotation.Nullable MapType mapType) {
    this.mapType = mapType;
  }


  public V1alpha1Type function(@jakarta.annotation.Nullable FunctionType function) {
    this.function = function;
    return this;
  }

  /**
   * Get function
   * @return function
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public FunctionType getFunction() {
    return function;
  }


  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFunction(@jakarta.annotation.Nullable FunctionType function) {
    this.function = function;
  }


  public V1alpha1Type messageType(@jakarta.annotation.Nullable String messageType) {
    this.messageType = messageType;
    return this;
  }

  /**
   * Protocol buffer message type.  The &#x60;message_type&#x60; string specifies the qualified message type name. For example, &#x60;google.plus.Profile&#x60;.
   * @return messageType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMessageType() {
    return messageType;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageType(@jakarta.annotation.Nullable String messageType) {
    this.messageType = messageType;
  }


  public V1alpha1Type typeParam(@jakarta.annotation.Nullable String typeParam) {
    this.typeParam = typeParam;
    return this;
  }

  /**
   * Type param type.  The &#x60;type_param&#x60; string specifies the type parameter name, e.g. &#x60;list&lt;E&gt;&#x60; would be a &#x60;list_type&#x60; whose element type was a &#x60;type_param&#x60; type named &#x60;E&#x60;.
   * @return typeParam
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE_PARAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getTypeParam() {
    return typeParam;
  }


  @JsonProperty(JSON_PROPERTY_TYPE_PARAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeParam(@jakarta.annotation.Nullable String typeParam) {
    this.typeParam = typeParam;
  }


  public V1alpha1Type type(@jakarta.annotation.Nullable V1alpha1Type type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public V1alpha1Type getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(@jakarta.annotation.Nullable V1alpha1Type type) {
    this.type = type;
  }


  public V1alpha1Type error(@jakarta.annotation.Nullable Object error) {
    this.error = error;
    return this;
  }

  /**
   * Error type.  During type-checking if an expression is an error, its type is propagated as the &#x60;ERROR&#x60; type. This permits the type-checker to discover other errors present in the expression.
   * @return error
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Object getError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(@jakarta.annotation.Nullable Object error) {
    this.error = error;
  }


  public V1alpha1Type abstractType(@jakarta.annotation.Nullable AbstractType abstractType) {
    this.abstractType = abstractType;
    return this;
  }

  /**
   * Get abstractType
   * @return abstractType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ABSTRACT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public AbstractType getAbstractType() {
    return abstractType;
  }


  @JsonProperty(JSON_PROPERTY_ABSTRACT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAbstractType(@jakarta.annotation.Nullable AbstractType abstractType) {
    this.abstractType = abstractType;
  }


  /**
   * Return true if this v1alpha1.Type object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1Type v1alpha1Type = (V1alpha1Type) o;
    return Objects.equals(this.dyn, v1alpha1Type.dyn) &&
        Objects.equals(this._null, v1alpha1Type._null) &&
        Objects.equals(this.primitive, v1alpha1Type.primitive) &&
        Objects.equals(this.wrapper, v1alpha1Type.wrapper) &&
        Objects.equals(this.wellKnown, v1alpha1Type.wellKnown) &&
        Objects.equals(this.listType, v1alpha1Type.listType) &&
        Objects.equals(this.mapType, v1alpha1Type.mapType) &&
        Objects.equals(this.function, v1alpha1Type.function) &&
        Objects.equals(this.messageType, v1alpha1Type.messageType) &&
        Objects.equals(this.typeParam, v1alpha1Type.typeParam) &&
        Objects.equals(this.type, v1alpha1Type.type) &&
        Objects.equals(this.error, v1alpha1Type.error) &&
        Objects.equals(this.abstractType, v1alpha1Type.abstractType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dyn, _null, primitive, wrapper, wellKnown, listType, mapType, function, messageType, typeParam, type, error, abstractType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1Type {\n");
    sb.append("    dyn: ").append(toIndentedString(dyn)).append("\n");
    sb.append("    _null: ").append(toIndentedString(_null)).append("\n");
    sb.append("    primitive: ").append(toIndentedString(primitive)).append("\n");
    sb.append("    wrapper: ").append(toIndentedString(wrapper)).append("\n");
    sb.append("    wellKnown: ").append(toIndentedString(wellKnown)).append("\n");
    sb.append("    listType: ").append(toIndentedString(listType)).append("\n");
    sb.append("    mapType: ").append(toIndentedString(mapType)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    messageType: ").append(toIndentedString(messageType)).append("\n");
    sb.append("    typeParam: ").append(toIndentedString(typeParam)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    abstractType: ").append(toIndentedString(abstractType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `dyn` to the URL query string
    if (getDyn() != null) {
      joiner.add(String.format("%sdyn%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDyn()))));
    }

    // add `null` to the URL query string
    if (getNull() != null) {
      joiner.add(String.format("%snull%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getNull()))));
    }

    // add `primitive` to the URL query string
    if (getPrimitive() != null) {
      joiner.add(String.format("%sprimitive%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPrimitive()))));
    }

    // add `wrapper` to the URL query string
    if (getWrapper() != null) {
      joiner.add(String.format("%swrapper%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getWrapper()))));
    }

    // add `wellKnown` to the URL query string
    if (getWellKnown() != null) {
      joiner.add(String.format("%swellKnown%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getWellKnown()))));
    }

    // add `listType` to the URL query string
    if (getListType() != null) {
      joiner.add(getListType().toUrlQueryString(prefix + "listType" + suffix));
    }

    // add `mapType` to the URL query string
    if (getMapType() != null) {
      joiner.add(getMapType().toUrlQueryString(prefix + "mapType" + suffix));
    }

    // add `function` to the URL query string
    if (getFunction() != null) {
      joiner.add(getFunction().toUrlQueryString(prefix + "function" + suffix));
    }

    // add `messageType` to the URL query string
    if (getMessageType() != null) {
      joiner.add(String.format("%smessageType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMessageType()))));
    }

    // add `typeParam` to the URL query string
    if (getTypeParam() != null) {
      joiner.add(String.format("%stypeParam%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTypeParam()))));
    }

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(getType().toUrlQueryString(prefix + "type" + suffix));
    }

    // add `error` to the URL query string
    if (getError() != null) {
      joiner.add(String.format("%serror%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getError()))));
    }

    // add `abstractType` to the URL query string
    if (getAbstractType() != null) {
      joiner.add(getAbstractType().toUrlQueryString(prefix + "abstractType" + suffix));
    }

    return joiner.toString();
  }
}

