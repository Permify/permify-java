/*
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v1.4.2
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package co.permify.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import co.permify.sdk.model.V1alpha1Type;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * List type with typed elements, e.g. &#x60;list&lt;example.proto.MyMessage&gt;&#x60;.
 */
@JsonPropertyOrder({
  ListType.JSON_PROPERTY_ELEM_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ListType {
  public static final String JSON_PROPERTY_ELEM_TYPE = "elemType";
  private V1alpha1Type elemType;

  public ListType() { 
  }

  public ListType elemType(V1alpha1Type elemType) {
    this.elemType = elemType;
    return this;
  }

   /**
   * Get elemType
   * @return elemType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELEM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V1alpha1Type getElemType() {
    return elemType;
  }


  @JsonProperty(JSON_PROPERTY_ELEM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElemType(V1alpha1Type elemType) {
    this.elemType = elemType;
  }


  /**
   * Return true if this ListType object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListType listType = (ListType) o;
    return Objects.equals(this.elemType, listType.elemType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(elemType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListType {\n");
    sb.append("    elemType: ").append(toIndentedString(elemType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `elemType` to the URL query string
    if (getElemType() != null) {
      joiner.add(getElemType().toUrlQueryString(prefix + "elemType" + suffix));
    }

    return joiner.toString();
  }
}

