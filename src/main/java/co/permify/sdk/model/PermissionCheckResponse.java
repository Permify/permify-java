/*
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v1.0.3
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package co.permify.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import co.permify.sdk.model.CheckResult;
import co.permify.sdk.model.PermissionCheckResponseMetadata;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import co.permify.sdk.client.ApiClient;
/**
 * PermissionCheckResponse is the response message for the Check method in the Permission service.
 */
@JsonPropertyOrder({
  PermissionCheckResponse.JSON_PROPERTY_CAN,
  PermissionCheckResponse.JSON_PROPERTY_METADATA
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class PermissionCheckResponse {
  public static final String JSON_PROPERTY_CAN = "can";
  @jakarta.annotation.Nullable
  private CheckResult can = CheckResult.CHECK_RESULT_UNSPECIFIED;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  @jakarta.annotation.Nullable
  private PermissionCheckResponseMetadata metadata;

  public PermissionCheckResponse() { 
  }

  public PermissionCheckResponse can(@jakarta.annotation.Nullable CheckResult can) {
    this.can = can;
    return this;
  }

  /**
   * Get can
   * @return can
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public CheckResult getCan() {
    return can;
  }


  @JsonProperty(JSON_PROPERTY_CAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCan(@jakarta.annotation.Nullable CheckResult can) {
    this.can = can;
  }


  public PermissionCheckResponse metadata(@jakarta.annotation.Nullable PermissionCheckResponseMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PermissionCheckResponseMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(@jakarta.annotation.Nullable PermissionCheckResponseMetadata metadata) {
    this.metadata = metadata;
  }


  /**
   * Return true if this PermissionCheckResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PermissionCheckResponse permissionCheckResponse = (PermissionCheckResponse) o;
    return Objects.equals(this.can, permissionCheckResponse.can) &&
        Objects.equals(this.metadata, permissionCheckResponse.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(can, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PermissionCheckResponse {\n");
    sb.append("    can: ").append(toIndentedString(can)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `can` to the URL query string
    if (getCan() != null) {
      joiner.add(String.format("%scan%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCan()))));
    }

    // add `metadata` to the URL query string
    if (getMetadata() != null) {
      joiner.add(getMetadata().toUrlQueryString(prefix + "metadata" + suffix));
    }

    return joiner.toString();
  }
}

