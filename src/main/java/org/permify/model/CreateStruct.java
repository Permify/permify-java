/*
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.permify.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.permify.model.Entry;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A map or message creation expression.  Maps are constructed as &#x60;{&#39;key_name&#39;: &#39;value&#39;}&#x60;. Message construction is similar, but prefixed with a type name and composed of field ids: &#x60;types.MyType{field_id: &#39;value&#39;}&#x60;.
 */
@JsonPropertyOrder({
  CreateStruct.JSON_PROPERTY_MESSAGE_NAME,
  CreateStruct.JSON_PROPERTY_ENTRIES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-19T12:59:35.606772+03:00[Europe/Istanbul]", comments = "Generator version: 7.7.0")
public class CreateStruct {
  public static final String JSON_PROPERTY_MESSAGE_NAME = "messageName";
  private String messageName;

  public static final String JSON_PROPERTY_ENTRIES = "entries";
  private List<Entry> entries = new ArrayList<>();

  public CreateStruct() {
  }

  public CreateStruct messageName(String messageName) {
    
    this.messageName = messageName;
    return this;
  }

  /**
   * The type name of the message to be created, empty when creating map literals.
   * @return messageName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessageName() {
    return messageName;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageName(String messageName) {
    this.messageName = messageName;
  }

  public CreateStruct entries(List<Entry> entries) {
    
    this.entries = entries;
    return this;
  }

  public CreateStruct addEntriesItem(Entry entriesItem) {
    if (this.entries == null) {
      this.entries = new ArrayList<>();
    }
    this.entries.add(entriesItem);
    return this;
  }

  /**
   * The entries in the creation expression.
   * @return entries
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Entry> getEntries() {
    return entries;
  }


  @JsonProperty(JSON_PROPERTY_ENTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntries(List<Entry> entries) {
    this.entries = entries;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateStruct createStruct = (CreateStruct) o;
    return Objects.equals(this.messageName, createStruct.messageName) &&
        Objects.equals(this.entries, createStruct.entries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageName, entries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateStruct {\n");
    sb.append("    messageName: ").append(toIndentedString(messageName)).append("\n");
    sb.append("    entries: ").append(toIndentedString(entries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

