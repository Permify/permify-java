/*
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.permify.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents a primitive literal.  Named &#39;Constant&#39; here for backwards compatibility.  This is similar as the primitives supported in the well-known type &#x60;google.protobuf.Value&#x60;, but richer so it can represent CEL&#39;s full range of primitives.  Lists and structs are not included as constants as these aggregate types may contain [Expr][google.api.expr.v1alpha1.Expr] elements which require evaluation and are thus not constant.  Examples of literals include: &#x60;\&quot;hello\&quot;&#x60;, &#x60;b&#39;bytes&#39;&#x60;, &#x60;1u&#x60;, &#x60;4.2&#x60;, &#x60;-2&#x60;, &#x60;true&#x60;, &#x60;null&#x60;.
 */
@JsonPropertyOrder({
  Constant.JSON_PROPERTY_NULL_VALUE,
  Constant.JSON_PROPERTY_BOOL_VALUE,
  Constant.JSON_PROPERTY_INT64_VALUE,
  Constant.JSON_PROPERTY_UINT64_VALUE,
  Constant.JSON_PROPERTY_DOUBLE_VALUE,
  Constant.JSON_PROPERTY_STRING_VALUE,
  Constant.JSON_PROPERTY_BYTES_VALUE,
  Constant.JSON_PROPERTY_DURATION_VALUE,
  Constant.JSON_PROPERTY_TIMESTAMP_VALUE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-19T12:59:35.606772+03:00[Europe/Istanbul]", comments = "Generator version: 7.7.0")
public class Constant {
  public static final String JSON_PROPERTY_NULL_VALUE = "nullValue";
  private String nullValue;

  public static final String JSON_PROPERTY_BOOL_VALUE = "boolValue";
  private Boolean boolValue;

  public static final String JSON_PROPERTY_INT64_VALUE = "int64Value";
  private String int64Value;

  public static final String JSON_PROPERTY_UINT64_VALUE = "uint64Value";
  private String uint64Value;

  public static final String JSON_PROPERTY_DOUBLE_VALUE = "doubleValue";
  private Double doubleValue;

  public static final String JSON_PROPERTY_STRING_VALUE = "stringValue";
  private String stringValue;

  public static final String JSON_PROPERTY_BYTES_VALUE = "bytesValue";
  private byte[] bytesValue;

  public static final String JSON_PROPERTY_DURATION_VALUE = "durationValue";
  private String durationValue;

  public static final String JSON_PROPERTY_TIMESTAMP_VALUE = "timestampValue";
  private OffsetDateTime timestampValue;

  public Constant() {
  }

  public Constant nullValue(String nullValue) {
    
    this.nullValue = nullValue;
    return this;
  }

  /**
   * null value.
   * @return nullValue
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NULL_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNullValue() {
    return nullValue;
  }


  @JsonProperty(JSON_PROPERTY_NULL_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNullValue(String nullValue) {
    this.nullValue = nullValue;
  }

  public Constant boolValue(Boolean boolValue) {
    
    this.boolValue = boolValue;
    return this;
  }

  /**
   * boolean value.
   * @return boolValue
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BOOL_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getBoolValue() {
    return boolValue;
  }


  @JsonProperty(JSON_PROPERTY_BOOL_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBoolValue(Boolean boolValue) {
    this.boolValue = boolValue;
  }

  public Constant int64Value(String int64Value) {
    
    this.int64Value = int64Value;
    return this;
  }

  /**
   * int64 value.
   * @return int64Value
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INT64_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInt64Value() {
    return int64Value;
  }


  @JsonProperty(JSON_PROPERTY_INT64_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInt64Value(String int64Value) {
    this.int64Value = int64Value;
  }

  public Constant uint64Value(String uint64Value) {
    
    this.uint64Value = uint64Value;
    return this;
  }

  /**
   * uint64 value.
   * @return uint64Value
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UINT64_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUint64Value() {
    return uint64Value;
  }


  @JsonProperty(JSON_PROPERTY_UINT64_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUint64Value(String uint64Value) {
    this.uint64Value = uint64Value;
  }

  public Constant doubleValue(Double doubleValue) {
    
    this.doubleValue = doubleValue;
    return this;
  }

  /**
   * double value.
   * @return doubleValue
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOUBLE_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getDoubleValue() {
    return doubleValue;
  }


  @JsonProperty(JSON_PROPERTY_DOUBLE_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDoubleValue(Double doubleValue) {
    this.doubleValue = doubleValue;
  }

  public Constant stringValue(String stringValue) {
    
    this.stringValue = stringValue;
    return this;
  }

  /**
   * string value.
   * @return stringValue
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STRING_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStringValue() {
    return stringValue;
  }


  @JsonProperty(JSON_PROPERTY_STRING_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStringValue(String stringValue) {
    this.stringValue = stringValue;
  }

  public Constant bytesValue(byte[] bytesValue) {
    
    this.bytesValue = bytesValue;
    return this;
  }

  /**
   * bytes value.
   * @return bytesValue
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BYTES_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public byte[] getBytesValue() {
    return bytesValue;
  }


  @JsonProperty(JSON_PROPERTY_BYTES_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBytesValue(byte[] bytesValue) {
    this.bytesValue = bytesValue;
  }

  public Constant durationValue(String durationValue) {
    
    this.durationValue = durationValue;
    return this;
  }

  /**
   * protobuf.Duration value.  Deprecated: duration is no longer considered a builtin cel type.
   * @return durationValue
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DURATION_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDurationValue() {
    return durationValue;
  }


  @JsonProperty(JSON_PROPERTY_DURATION_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDurationValue(String durationValue) {
    this.durationValue = durationValue;
  }

  public Constant timestampValue(OffsetDateTime timestampValue) {
    
    this.timestampValue = timestampValue;
    return this;
  }

  /**
   * protobuf.Timestamp value.  Deprecated: timestamp is no longer considered a builtin cel type.
   * @return timestampValue
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIMESTAMP_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getTimestampValue() {
    return timestampValue;
  }


  @JsonProperty(JSON_PROPERTY_TIMESTAMP_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimestampValue(OffsetDateTime timestampValue) {
    this.timestampValue = timestampValue;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Constant constant = (Constant) o;
    return Objects.equals(this.nullValue, constant.nullValue) &&
        Objects.equals(this.boolValue, constant.boolValue) &&
        Objects.equals(this.int64Value, constant.int64Value) &&
        Objects.equals(this.uint64Value, constant.uint64Value) &&
        Objects.equals(this.doubleValue, constant.doubleValue) &&
        Objects.equals(this.stringValue, constant.stringValue) &&
        Arrays.equals(this.bytesValue, constant.bytesValue) &&
        Objects.equals(this.durationValue, constant.durationValue) &&
        Objects.equals(this.timestampValue, constant.timestampValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nullValue, boolValue, int64Value, uint64Value, doubleValue, stringValue, Arrays.hashCode(bytesValue), durationValue, timestampValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Constant {\n");
    sb.append("    nullValue: ").append(toIndentedString(nullValue)).append("\n");
    sb.append("    boolValue: ").append(toIndentedString(boolValue)).append("\n");
    sb.append("    int64Value: ").append(toIndentedString(int64Value)).append("\n");
    sb.append("    uint64Value: ").append(toIndentedString(uint64Value)).append("\n");
    sb.append("    doubleValue: ").append(toIndentedString(doubleValue)).append("\n");
    sb.append("    stringValue: ").append(toIndentedString(stringValue)).append("\n");
    sb.append("    bytesValue: ").append(toIndentedString(bytesValue)).append("\n");
    sb.append("    durationValue: ").append(toIndentedString(durationValue)).append("\n");
    sb.append("    timestampValue: ").append(toIndentedString(timestampValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

