/*
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.permify.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Partials
 */
@JsonPropertyOrder({
  Partials.JSON_PROPERTY_WRITE,
  Partials.JSON_PROPERTY_DELETE,
  Partials.JSON_PROPERTY_UPDATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-19T12:59:35.606772+03:00[Europe/Istanbul]", comments = "Generator version: 7.7.0")
public class Partials {
  public static final String JSON_PROPERTY_WRITE = "write";
  private List<String> write = new ArrayList<>();

  public static final String JSON_PROPERTY_DELETE = "delete";
  private List<String> delete = new ArrayList<>();

  public static final String JSON_PROPERTY_UPDATE = "update";
  private List<String> update = new ArrayList<>();

  public Partials() {
  }

  public Partials write(List<String> write) {
    
    this.write = write;
    return this;
  }

  public Partials addWriteItem(String writeItem) {
    if (this.write == null) {
      this.write = new ArrayList<>();
    }
    this.write.add(writeItem);
    return this;
  }

  /**
   * Get write
   * @return write
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WRITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getWrite() {
    return write;
  }


  @JsonProperty(JSON_PROPERTY_WRITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWrite(List<String> write) {
    this.write = write;
  }

  public Partials delete(List<String> delete) {
    
    this.delete = delete;
    return this;
  }

  public Partials addDeleteItem(String deleteItem) {
    if (this.delete == null) {
      this.delete = new ArrayList<>();
    }
    this.delete.add(deleteItem);
    return this;
  }

  /**
   * Get delete
   * @return delete
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDelete() {
    return delete;
  }


  @JsonProperty(JSON_PROPERTY_DELETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDelete(List<String> delete) {
    this.delete = delete;
  }

  public Partials update(List<String> update) {
    
    this.update = update;
    return this;
  }

  public Partials addUpdateItem(String updateItem) {
    if (this.update == null) {
      this.update = new ArrayList<>();
    }
    this.update.add(updateItem);
    return this;
  }

  /**
   * Get update
   * @return update
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getUpdate() {
    return update;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdate(List<String> update) {
    this.update = update;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Partials partials = (Partials) o;
    return Objects.equals(this.write, partials.write) &&
        Objects.equals(this.delete, partials.delete) &&
        Objects.equals(this.update, partials.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(write, delete, update);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Partials {\n");
    sb.append("    write: ").append(toIndentedString(write)).append("\n");
    sb.append("    delete: ").append(toIndentedString(delete)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

