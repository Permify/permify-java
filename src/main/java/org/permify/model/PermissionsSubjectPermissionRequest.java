/*
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.permify.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.permify.model.Context;
import org.permify.model.Entity;
import org.permify.model.PermissionSubjectPermissionRequestMetadata;
import org.permify.model.Subject;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PermissionSubjectPermissionRequest is the request message for the SubjectPermission method in the Permission service.
 */
@JsonPropertyOrder({
  PermissionsSubjectPermissionRequest.JSON_PROPERTY_METADATA,
  PermissionsSubjectPermissionRequest.JSON_PROPERTY_ENTITY,
  PermissionsSubjectPermissionRequest.JSON_PROPERTY_SUBJECT,
  PermissionsSubjectPermissionRequest.JSON_PROPERTY_CONTEXT
})
@JsonTypeName("permissions_subjectPermission_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-19T12:59:35.606772+03:00[Europe/Istanbul]", comments = "Generator version: 7.7.0")
public class PermissionsSubjectPermissionRequest {
  public static final String JSON_PROPERTY_METADATA = "metadata";
  private PermissionSubjectPermissionRequestMetadata metadata;

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private Entity entity;

  public static final String JSON_PROPERTY_SUBJECT = "subject";
  private Subject subject;

  public static final String JSON_PROPERTY_CONTEXT = "context";
  private Context context;

  public PermissionsSubjectPermissionRequest() {
  }

  public PermissionsSubjectPermissionRequest metadata(PermissionSubjectPermissionRequestMetadata metadata) {
    
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PermissionSubjectPermissionRequestMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(PermissionSubjectPermissionRequestMetadata metadata) {
    this.metadata = metadata;
  }

  public PermissionsSubjectPermissionRequest entity(Entity entity) {
    
    this.entity = entity;
    return this;
  }

  /**
   * Get entity
   * @return entity
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Entity getEntity() {
    return entity;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntity(Entity entity) {
    this.entity = entity;
  }

  public PermissionsSubjectPermissionRequest subject(Subject subject) {
    
    this.subject = subject;
    return this;
  }

  /**
   * Get subject
   * @return subject
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Subject getSubject() {
    return subject;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubject(Subject subject) {
    this.subject = subject;
  }

  public PermissionsSubjectPermissionRequest context(Context context) {
    
    this.context = context;
    return this;
  }

  /**
   * Get context
   * @return context
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Context getContext() {
    return context;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContext(Context context) {
    this.context = context;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PermissionsSubjectPermissionRequest permissionsSubjectPermissionRequest = (PermissionsSubjectPermissionRequest) o;
    return Objects.equals(this.metadata, permissionsSubjectPermissionRequest.metadata) &&
        Objects.equals(this.entity, permissionsSubjectPermissionRequest.entity) &&
        Objects.equals(this.subject, permissionsSubjectPermissionRequest.subject) &&
        Objects.equals(this.context, permissionsSubjectPermissionRequest.context);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metadata, entity, subject, context);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PermissionsSubjectPermissionRequest {\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

