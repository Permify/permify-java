// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base/v1/service.proto
// Protobuf Java Version: 4.27.2

package org.permify.grpc;

public interface BundleRunRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:base.v1.BundleRunRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string tenant_id = 1 [json_name = "tenant_id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The tenantId.
   */
  java.lang.String getTenantId();
  /**
   * <code>string tenant_id = 1 [json_name = "tenant_id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The bytes for tenantId.
   */
  com.google.protobuf.ByteString
      getTenantIdBytes();

  /**
   * <pre>
   * Name of the bundle to be executed.
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Name of the bundle to be executed.
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Additional key-value pairs for execution arguments.
   * </pre>
   *
   * <code>map&lt;string, string&gt; arguments = 3 [json_name = "arguments"];</code>
   */
  int getArgumentsCount();
  /**
   * <pre>
   * Additional key-value pairs for execution arguments.
   * </pre>
   *
   * <code>map&lt;string, string&gt; arguments = 3 [json_name = "arguments"];</code>
   */
  boolean containsArguments(
      java.lang.String key);
  /**
   * Use {@link #getArgumentsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getArguments();
  /**
   * <pre>
   * Additional key-value pairs for execution arguments.
   * </pre>
   *
   * <code>map&lt;string, string&gt; arguments = 3 [json_name = "arguments"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getArgumentsMap();
  /**
   * <pre>
   * Additional key-value pairs for execution arguments.
   * </pre>
   *
   * <code>map&lt;string, string&gt; arguments = 3 [json_name = "arguments"];</code>
   */
  /* nullable */
java.lang.String getArgumentsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Additional key-value pairs for execution arguments.
   * </pre>
   *
   * <code>map&lt;string, string&gt; arguments = 3 [json_name = "arguments"];</code>
   */
  java.lang.String getArgumentsOrThrow(
      java.lang.String key);
}
