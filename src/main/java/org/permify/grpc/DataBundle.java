// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base/v1/base.proto
// Protobuf Java Version: 4.27.2

package org.permify.grpc;

/**
 * <pre>
 * DataBundle is a message representing a bundle of data, which includes a name,
 * a list of arguments, and a series of operations.
 * </pre>
 *
 * Protobuf type {@code base.v1.DataBundle}
 */
public final class DataBundle extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:base.v1.DataBundle)
    DataBundleOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      DataBundle.class.getName());
  }
  // Use DataBundle.newBuilder() to construct.
  private DataBundle(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private DataBundle() {
    name_ = "";
    arguments_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    operations_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.permify.grpc.BaseProto.internal_static_base_v1_DataBundle_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.permify.grpc.BaseProto.internal_static_base_v1_DataBundle_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.permify.grpc.DataBundle.class, org.permify.grpc.DataBundle.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * 'name' is a simple string field representing the name of the DataBundle.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 'name' is a simple string field representing the name of the DataBundle.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ARGUMENTS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList arguments_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * 'arguments' is a repeated field, which means it can contain multiple strings.
   * These are used to store a list of arguments related to the DataBundle.
   * </pre>
   *
   * <code>repeated string arguments = 2 [json_name = "arguments"];</code>
   * @return A list containing the arguments.
   */
  public com.google.protobuf.ProtocolStringList
      getArgumentsList() {
    return arguments_;
  }
  /**
   * <pre>
   * 'arguments' is a repeated field, which means it can contain multiple strings.
   * These are used to store a list of arguments related to the DataBundle.
   * </pre>
   *
   * <code>repeated string arguments = 2 [json_name = "arguments"];</code>
   * @return The count of arguments.
   */
  public int getArgumentsCount() {
    return arguments_.size();
  }
  /**
   * <pre>
   * 'arguments' is a repeated field, which means it can contain multiple strings.
   * These are used to store a list of arguments related to the DataBundle.
   * </pre>
   *
   * <code>repeated string arguments = 2 [json_name = "arguments"];</code>
   * @param index The index of the element to return.
   * @return The arguments at the given index.
   */
  public java.lang.String getArguments(int index) {
    return arguments_.get(index);
  }
  /**
   * <pre>
   * 'arguments' is a repeated field, which means it can contain multiple strings.
   * These are used to store a list of arguments related to the DataBundle.
   * </pre>
   *
   * <code>repeated string arguments = 2 [json_name = "arguments"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the arguments at the given index.
   */
  public com.google.protobuf.ByteString
      getArgumentsBytes(int index) {
    return arguments_.getByteString(index);
  }

  public static final int OPERATIONS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<org.permify.grpc.Operation> operations_;
  /**
   * <pre>
   * 'operations' is a repeated field containing multiple Operation messages.
   * Each Operation represents a specific action or set of actions to be performed.
   * </pre>
   *
   * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
   */
  @java.lang.Override
  public java.util.List<org.permify.grpc.Operation> getOperationsList() {
    return operations_;
  }
  /**
   * <pre>
   * 'operations' is a repeated field containing multiple Operation messages.
   * Each Operation represents a specific action or set of actions to be performed.
   * </pre>
   *
   * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.permify.grpc.OperationOrBuilder> 
      getOperationsOrBuilderList() {
    return operations_;
  }
  /**
   * <pre>
   * 'operations' is a repeated field containing multiple Operation messages.
   * Each Operation represents a specific action or set of actions to be performed.
   * </pre>
   *
   * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
   */
  @java.lang.Override
  public int getOperationsCount() {
    return operations_.size();
  }
  /**
   * <pre>
   * 'operations' is a repeated field containing multiple Operation messages.
   * Each Operation represents a specific action or set of actions to be performed.
   * </pre>
   *
   * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
   */
  @java.lang.Override
  public org.permify.grpc.Operation getOperations(int index) {
    return operations_.get(index);
  }
  /**
   * <pre>
   * 'operations' is a repeated field containing multiple Operation messages.
   * Each Operation represents a specific action or set of actions to be performed.
   * </pre>
   *
   * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
   */
  @java.lang.Override
  public org.permify.grpc.OperationOrBuilder getOperationsOrBuilder(
      int index) {
    return operations_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
    }
    for (int i = 0; i < arguments_.size(); i++) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, arguments_.getRaw(i));
    }
    for (int i = 0; i < operations_.size(); i++) {
      output.writeMessage(3, operations_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < arguments_.size(); i++) {
        dataSize += computeStringSizeNoTag(arguments_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getArgumentsList().size();
    }
    for (int i = 0; i < operations_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, operations_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.permify.grpc.DataBundle)) {
      return super.equals(obj);
    }
    org.permify.grpc.DataBundle other = (org.permify.grpc.DataBundle) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getArgumentsList()
        .equals(other.getArgumentsList())) return false;
    if (!getOperationsList()
        .equals(other.getOperationsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (getArgumentsCount() > 0) {
      hash = (37 * hash) + ARGUMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getArgumentsList().hashCode();
    }
    if (getOperationsCount() > 0) {
      hash = (37 * hash) + OPERATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getOperationsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.permify.grpc.DataBundle parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.permify.grpc.DataBundle parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.permify.grpc.DataBundle parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.permify.grpc.DataBundle parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.permify.grpc.DataBundle parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.permify.grpc.DataBundle parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.permify.grpc.DataBundle parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.permify.grpc.DataBundle parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.permify.grpc.DataBundle parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.permify.grpc.DataBundle parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.permify.grpc.DataBundle parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.permify.grpc.DataBundle parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.permify.grpc.DataBundle prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * DataBundle is a message representing a bundle of data, which includes a name,
   * a list of arguments, and a series of operations.
   * </pre>
   *
   * Protobuf type {@code base.v1.DataBundle}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:base.v1.DataBundle)
      org.permify.grpc.DataBundleOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.permify.grpc.BaseProto.internal_static_base_v1_DataBundle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.permify.grpc.BaseProto.internal_static_base_v1_DataBundle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.permify.grpc.DataBundle.class, org.permify.grpc.DataBundle.Builder.class);
    }

    // Construct using org.permify.grpc.DataBundle.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      arguments_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      if (operationsBuilder_ == null) {
        operations_ = java.util.Collections.emptyList();
      } else {
        operations_ = null;
        operationsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.permify.grpc.BaseProto.internal_static_base_v1_DataBundle_descriptor;
    }

    @java.lang.Override
    public org.permify.grpc.DataBundle getDefaultInstanceForType() {
      return org.permify.grpc.DataBundle.getDefaultInstance();
    }

    @java.lang.Override
    public org.permify.grpc.DataBundle build() {
      org.permify.grpc.DataBundle result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.permify.grpc.DataBundle buildPartial() {
      org.permify.grpc.DataBundle result = new org.permify.grpc.DataBundle(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(org.permify.grpc.DataBundle result) {
      if (operationsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          operations_ = java.util.Collections.unmodifiableList(operations_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.operations_ = operations_;
      } else {
        result.operations_ = operationsBuilder_.build();
      }
    }

    private void buildPartial0(org.permify.grpc.DataBundle result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        arguments_.makeImmutable();
        result.arguments_ = arguments_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.permify.grpc.DataBundle) {
        return mergeFrom((org.permify.grpc.DataBundle)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.permify.grpc.DataBundle other) {
      if (other == org.permify.grpc.DataBundle.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.arguments_.isEmpty()) {
        if (arguments_.isEmpty()) {
          arguments_ = other.arguments_;
          bitField0_ |= 0x00000002;
        } else {
          ensureArgumentsIsMutable();
          arguments_.addAll(other.arguments_);
        }
        onChanged();
      }
      if (operationsBuilder_ == null) {
        if (!other.operations_.isEmpty()) {
          if (operations_.isEmpty()) {
            operations_ = other.operations_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureOperationsIsMutable();
            operations_.addAll(other.operations_);
          }
          onChanged();
        }
      } else {
        if (!other.operations_.isEmpty()) {
          if (operationsBuilder_.isEmpty()) {
            operationsBuilder_.dispose();
            operationsBuilder_ = null;
            operations_ = other.operations_;
            bitField0_ = (bitField0_ & ~0x00000004);
            operationsBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getOperationsFieldBuilder() : null;
          } else {
            operationsBuilder_.addAllMessages(other.operations_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureArgumentsIsMutable();
              arguments_.add(s);
              break;
            } // case 18
            case 26: {
              org.permify.grpc.Operation m =
                  input.readMessage(
                      org.permify.grpc.Operation.parser(),
                      extensionRegistry);
              if (operationsBuilder_ == null) {
                ensureOperationsIsMutable();
                operations_.add(m);
              } else {
                operationsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * 'name' is a simple string field representing the name of the DataBundle.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 'name' is a simple string field representing the name of the DataBundle.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 'name' is a simple string field representing the name of the DataBundle.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 'name' is a simple string field representing the name of the DataBundle.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 'name' is a simple string field representing the name of the DataBundle.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList arguments_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureArgumentsIsMutable() {
      if (!arguments_.isModifiable()) {
        arguments_ = new com.google.protobuf.LazyStringArrayList(arguments_);
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * 'arguments' is a repeated field, which means it can contain multiple strings.
     * These are used to store a list of arguments related to the DataBundle.
     * </pre>
     *
     * <code>repeated string arguments = 2 [json_name = "arguments"];</code>
     * @return A list containing the arguments.
     */
    public com.google.protobuf.ProtocolStringList
        getArgumentsList() {
      arguments_.makeImmutable();
      return arguments_;
    }
    /**
     * <pre>
     * 'arguments' is a repeated field, which means it can contain multiple strings.
     * These are used to store a list of arguments related to the DataBundle.
     * </pre>
     *
     * <code>repeated string arguments = 2 [json_name = "arguments"];</code>
     * @return The count of arguments.
     */
    public int getArgumentsCount() {
      return arguments_.size();
    }
    /**
     * <pre>
     * 'arguments' is a repeated field, which means it can contain multiple strings.
     * These are used to store a list of arguments related to the DataBundle.
     * </pre>
     *
     * <code>repeated string arguments = 2 [json_name = "arguments"];</code>
     * @param index The index of the element to return.
     * @return The arguments at the given index.
     */
    public java.lang.String getArguments(int index) {
      return arguments_.get(index);
    }
    /**
     * <pre>
     * 'arguments' is a repeated field, which means it can contain multiple strings.
     * These are used to store a list of arguments related to the DataBundle.
     * </pre>
     *
     * <code>repeated string arguments = 2 [json_name = "arguments"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the arguments at the given index.
     */
    public com.google.protobuf.ByteString
        getArgumentsBytes(int index) {
      return arguments_.getByteString(index);
    }
    /**
     * <pre>
     * 'arguments' is a repeated field, which means it can contain multiple strings.
     * These are used to store a list of arguments related to the DataBundle.
     * </pre>
     *
     * <code>repeated string arguments = 2 [json_name = "arguments"];</code>
     * @param index The index to set the value at.
     * @param value The arguments to set.
     * @return This builder for chaining.
     */
    public Builder setArguments(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureArgumentsIsMutable();
      arguments_.set(index, value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 'arguments' is a repeated field, which means it can contain multiple strings.
     * These are used to store a list of arguments related to the DataBundle.
     * </pre>
     *
     * <code>repeated string arguments = 2 [json_name = "arguments"];</code>
     * @param value The arguments to add.
     * @return This builder for chaining.
     */
    public Builder addArguments(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureArgumentsIsMutable();
      arguments_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 'arguments' is a repeated field, which means it can contain multiple strings.
     * These are used to store a list of arguments related to the DataBundle.
     * </pre>
     *
     * <code>repeated string arguments = 2 [json_name = "arguments"];</code>
     * @param values The arguments to add.
     * @return This builder for chaining.
     */
    public Builder addAllArguments(
        java.lang.Iterable<java.lang.String> values) {
      ensureArgumentsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, arguments_);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 'arguments' is a repeated field, which means it can contain multiple strings.
     * These are used to store a list of arguments related to the DataBundle.
     * </pre>
     *
     * <code>repeated string arguments = 2 [json_name = "arguments"];</code>
     * @return This builder for chaining.
     */
    public Builder clearArguments() {
      arguments_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 'arguments' is a repeated field, which means it can contain multiple strings.
     * These are used to store a list of arguments related to the DataBundle.
     * </pre>
     *
     * <code>repeated string arguments = 2 [json_name = "arguments"];</code>
     * @param value The bytes of the arguments to add.
     * @return This builder for chaining.
     */
    public Builder addArgumentsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureArgumentsIsMutable();
      arguments_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.util.List<org.permify.grpc.Operation> operations_ =
      java.util.Collections.emptyList();
    private void ensureOperationsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        operations_ = new java.util.ArrayList<org.permify.grpc.Operation>(operations_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        org.permify.grpc.Operation, org.permify.grpc.Operation.Builder, org.permify.grpc.OperationOrBuilder> operationsBuilder_;

    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public java.util.List<org.permify.grpc.Operation> getOperationsList() {
      if (operationsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(operations_);
      } else {
        return operationsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public int getOperationsCount() {
      if (operationsBuilder_ == null) {
        return operations_.size();
      } else {
        return operationsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public org.permify.grpc.Operation getOperations(int index) {
      if (operationsBuilder_ == null) {
        return operations_.get(index);
      } else {
        return operationsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public Builder setOperations(
        int index, org.permify.grpc.Operation value) {
      if (operationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOperationsIsMutable();
        operations_.set(index, value);
        onChanged();
      } else {
        operationsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public Builder setOperations(
        int index, org.permify.grpc.Operation.Builder builderForValue) {
      if (operationsBuilder_ == null) {
        ensureOperationsIsMutable();
        operations_.set(index, builderForValue.build());
        onChanged();
      } else {
        operationsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public Builder addOperations(org.permify.grpc.Operation value) {
      if (operationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOperationsIsMutable();
        operations_.add(value);
        onChanged();
      } else {
        operationsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public Builder addOperations(
        int index, org.permify.grpc.Operation value) {
      if (operationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOperationsIsMutable();
        operations_.add(index, value);
        onChanged();
      } else {
        operationsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public Builder addOperations(
        org.permify.grpc.Operation.Builder builderForValue) {
      if (operationsBuilder_ == null) {
        ensureOperationsIsMutable();
        operations_.add(builderForValue.build());
        onChanged();
      } else {
        operationsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public Builder addOperations(
        int index, org.permify.grpc.Operation.Builder builderForValue) {
      if (operationsBuilder_ == null) {
        ensureOperationsIsMutable();
        operations_.add(index, builderForValue.build());
        onChanged();
      } else {
        operationsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public Builder addAllOperations(
        java.lang.Iterable<? extends org.permify.grpc.Operation> values) {
      if (operationsBuilder_ == null) {
        ensureOperationsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, operations_);
        onChanged();
      } else {
        operationsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public Builder clearOperations() {
      if (operationsBuilder_ == null) {
        operations_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        operationsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public Builder removeOperations(int index) {
      if (operationsBuilder_ == null) {
        ensureOperationsIsMutable();
        operations_.remove(index);
        onChanged();
      } else {
        operationsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public org.permify.grpc.Operation.Builder getOperationsBuilder(
        int index) {
      return getOperationsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public org.permify.grpc.OperationOrBuilder getOperationsOrBuilder(
        int index) {
      if (operationsBuilder_ == null) {
        return operations_.get(index);  } else {
        return operationsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public java.util.List<? extends org.permify.grpc.OperationOrBuilder> 
         getOperationsOrBuilderList() {
      if (operationsBuilder_ != null) {
        return operationsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(operations_);
      }
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public org.permify.grpc.Operation.Builder addOperationsBuilder() {
      return getOperationsFieldBuilder().addBuilder(
          org.permify.grpc.Operation.getDefaultInstance());
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public org.permify.grpc.Operation.Builder addOperationsBuilder(
        int index) {
      return getOperationsFieldBuilder().addBuilder(
          index, org.permify.grpc.Operation.getDefaultInstance());
    }
    /**
     * <pre>
     * 'operations' is a repeated field containing multiple Operation messages.
     * Each Operation represents a specific action or set of actions to be performed.
     * </pre>
     *
     * <code>repeated .base.v1.Operation operations = 3 [json_name = "operations"];</code>
     */
    public java.util.List<org.permify.grpc.Operation.Builder> 
         getOperationsBuilderList() {
      return getOperationsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        org.permify.grpc.Operation, org.permify.grpc.Operation.Builder, org.permify.grpc.OperationOrBuilder> 
        getOperationsFieldBuilder() {
      if (operationsBuilder_ == null) {
        operationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            org.permify.grpc.Operation, org.permify.grpc.Operation.Builder, org.permify.grpc.OperationOrBuilder>(
                operations_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        operations_ = null;
      }
      return operationsBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:base.v1.DataBundle)
  }

  // @@protoc_insertion_point(class_scope:base.v1.DataBundle)
  private static final org.permify.grpc.DataBundle DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.permify.grpc.DataBundle();
  }

  public static org.permify.grpc.DataBundle getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DataBundle>
      PARSER = new com.google.protobuf.AbstractParser<DataBundle>() {
    @java.lang.Override
    public DataBundle parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DataBundle> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DataBundle> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.permify.grpc.DataBundle getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

