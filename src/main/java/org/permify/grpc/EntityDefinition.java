// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base/v1/base.proto
// Protobuf Java Version: 4.27.2

package org.permify.grpc;

/**
 * <pre>
 * The EntityDefinition message provides detailed information about a specific entity.
 * </pre>
 *
 * Protobuf type {@code base.v1.EntityDefinition}
 */
public final class EntityDefinition extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:base.v1.EntityDefinition)
    EntityDefinitionOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      EntityDefinition.class.getName());
  }
  // Use EntityDefinition.newBuilder() to construct.
  private EntityDefinition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private EntityDefinition() {
    name_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.permify.grpc.BaseProto.internal_static_base_v1_EntityDefinition_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 2:
        return internalGetRelations();
      case 3:
        return internalGetPermissions();
      case 4:
        return internalGetAttributes();
      case 5:
        return internalGetReferences();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.permify.grpc.BaseProto.internal_static_base_v1_EntityDefinition_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.permify.grpc.EntityDefinition.class, org.permify.grpc.EntityDefinition.Builder.class);
  }

  /**
   * <pre>
   * The Reference enum specifies whether a name pertains to a relation, permission, or attribute.
   * </pre>
   *
   * Protobuf enum {@code base.v1.EntityDefinition.Reference}
   */
  public enum Reference
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Default, unspecified reference.
     * </pre>
     *
     * <code>REFERENCE_UNSPECIFIED = 0;</code>
     */
    REFERENCE_UNSPECIFIED(0),
    /**
     * <pre>
     * Indicates that the name refers to a relation.
     * </pre>
     *
     * <code>REFERENCE_RELATION = 1;</code>
     */
    REFERENCE_RELATION(1),
    /**
     * <pre>
     * Indicates that the name refers to a permission.
     * </pre>
     *
     * <code>REFERENCE_PERMISSION = 2;</code>
     */
    REFERENCE_PERMISSION(2),
    /**
     * <pre>
     * Indicates that the name refers to an attribute.
     * </pre>
     *
     * <code>REFERENCE_ATTRIBUTE = 3;</code>
     */
    REFERENCE_ATTRIBUTE(3),
    UNRECOGNIZED(-1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        Reference.class.getName());
    }
    /**
     * <pre>
     * Default, unspecified reference.
     * </pre>
     *
     * <code>REFERENCE_UNSPECIFIED = 0;</code>
     */
    public static final int REFERENCE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Indicates that the name refers to a relation.
     * </pre>
     *
     * <code>REFERENCE_RELATION = 1;</code>
     */
    public static final int REFERENCE_RELATION_VALUE = 1;
    /**
     * <pre>
     * Indicates that the name refers to a permission.
     * </pre>
     *
     * <code>REFERENCE_PERMISSION = 2;</code>
     */
    public static final int REFERENCE_PERMISSION_VALUE = 2;
    /**
     * <pre>
     * Indicates that the name refers to an attribute.
     * </pre>
     *
     * <code>REFERENCE_ATTRIBUTE = 3;</code>
     */
    public static final int REFERENCE_ATTRIBUTE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Reference valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Reference forNumber(int value) {
      switch (value) {
        case 0: return REFERENCE_UNSPECIFIED;
        case 1: return REFERENCE_RELATION;
        case 2: return REFERENCE_PERMISSION;
        case 3: return REFERENCE_ATTRIBUTE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Reference>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Reference> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Reference>() {
            public Reference findValueByNumber(int number) {
              return Reference.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.permify.grpc.EntityDefinition.getDescriptor().getEnumTypes().get(0);
    }

    private static final Reference[] VALUES = values();

    public static Reference valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Reference(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:base.v1.EntityDefinition.Reference)
  }

  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * The name of the entity, which follows a specific string pattern and has a maximum byte size.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the entity, which follows a specific string pattern and has a maximum byte size.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RELATIONS_FIELD_NUMBER = 2;
  private static final class RelationsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, org.permify.grpc.RelationDefinition> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, org.permify.grpc.RelationDefinition>newDefaultInstance(
                org.permify.grpc.BaseProto.internal_static_base_v1_EntityDefinition_RelationsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                org.permify.grpc.RelationDefinition.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, org.permify.grpc.RelationDefinition> relations_;
  private com.google.protobuf.MapField<java.lang.String, org.permify.grpc.RelationDefinition>
  internalGetRelations() {
    if (relations_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          RelationsDefaultEntryHolder.defaultEntry);
    }
    return relations_;
  }
  public int getRelationsCount() {
    return internalGetRelations().getMap().size();
  }
  /**
   * <pre>
   * Map of relation definitions within this entity. The key is the relation name, and the value is the RelationDefinition.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.RelationDefinition&gt; relations = 2 [json_name = "relations"];</code>
   */
  @java.lang.Override
  public boolean containsRelations(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetRelations().getMap().containsKey(key);
  }
  /**
   * Use {@link #getRelationsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, org.permify.grpc.RelationDefinition> getRelations() {
    return getRelationsMap();
  }
  /**
   * <pre>
   * Map of relation definitions within this entity. The key is the relation name, and the value is the RelationDefinition.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.RelationDefinition&gt; relations = 2 [json_name = "relations"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, org.permify.grpc.RelationDefinition> getRelationsMap() {
    return internalGetRelations().getMap();
  }
  /**
   * <pre>
   * Map of relation definitions within this entity. The key is the relation name, and the value is the RelationDefinition.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.RelationDefinition&gt; relations = 2 [json_name = "relations"];</code>
   */
  @java.lang.Override
  public /* nullable */
org.permify.grpc.RelationDefinition getRelationsOrDefault(
      java.lang.String key,
      /* nullable */
org.permify.grpc.RelationDefinition defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, org.permify.grpc.RelationDefinition> map =
        internalGetRelations().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Map of relation definitions within this entity. The key is the relation name, and the value is the RelationDefinition.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.RelationDefinition&gt; relations = 2 [json_name = "relations"];</code>
   */
  @java.lang.Override
  public org.permify.grpc.RelationDefinition getRelationsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, org.permify.grpc.RelationDefinition> map =
        internalGetRelations().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int PERMISSIONS_FIELD_NUMBER = 3;
  private static final class PermissionsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, org.permify.grpc.PermissionDefinition> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, org.permify.grpc.PermissionDefinition>newDefaultInstance(
                org.permify.grpc.BaseProto.internal_static_base_v1_EntityDefinition_PermissionsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                org.permify.grpc.PermissionDefinition.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, org.permify.grpc.PermissionDefinition> permissions_;
  private com.google.protobuf.MapField<java.lang.String, org.permify.grpc.PermissionDefinition>
  internalGetPermissions() {
    if (permissions_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          PermissionsDefaultEntryHolder.defaultEntry);
    }
    return permissions_;
  }
  public int getPermissionsCount() {
    return internalGetPermissions().getMap().size();
  }
  /**
   * <pre>
   * Map of permission definitions within this entity. The key is the permission name, and the value is the PermissionDefinition.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.PermissionDefinition&gt; permissions = 3 [json_name = "permissions"];</code>
   */
  @java.lang.Override
  public boolean containsPermissions(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetPermissions().getMap().containsKey(key);
  }
  /**
   * Use {@link #getPermissionsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, org.permify.grpc.PermissionDefinition> getPermissions() {
    return getPermissionsMap();
  }
  /**
   * <pre>
   * Map of permission definitions within this entity. The key is the permission name, and the value is the PermissionDefinition.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.PermissionDefinition&gt; permissions = 3 [json_name = "permissions"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, org.permify.grpc.PermissionDefinition> getPermissionsMap() {
    return internalGetPermissions().getMap();
  }
  /**
   * <pre>
   * Map of permission definitions within this entity. The key is the permission name, and the value is the PermissionDefinition.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.PermissionDefinition&gt; permissions = 3 [json_name = "permissions"];</code>
   */
  @java.lang.Override
  public /* nullable */
org.permify.grpc.PermissionDefinition getPermissionsOrDefault(
      java.lang.String key,
      /* nullable */
org.permify.grpc.PermissionDefinition defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, org.permify.grpc.PermissionDefinition> map =
        internalGetPermissions().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Map of permission definitions within this entity. The key is the permission name, and the value is the PermissionDefinition.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.PermissionDefinition&gt; permissions = 3 [json_name = "permissions"];</code>
   */
  @java.lang.Override
  public org.permify.grpc.PermissionDefinition getPermissionsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, org.permify.grpc.PermissionDefinition> map =
        internalGetPermissions().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int ATTRIBUTES_FIELD_NUMBER = 4;
  private static final class AttributesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, org.permify.grpc.AttributeDefinition> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, org.permify.grpc.AttributeDefinition>newDefaultInstance(
                org.permify.grpc.BaseProto.internal_static_base_v1_EntityDefinition_AttributesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                org.permify.grpc.AttributeDefinition.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, org.permify.grpc.AttributeDefinition> attributes_;
  private com.google.protobuf.MapField<java.lang.String, org.permify.grpc.AttributeDefinition>
  internalGetAttributes() {
    if (attributes_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          AttributesDefaultEntryHolder.defaultEntry);
    }
    return attributes_;
  }
  public int getAttributesCount() {
    return internalGetAttributes().getMap().size();
  }
  /**
   * <pre>
   * Map of attribute definitions within this entity. The key is the attribute name, and the value is the AttributeDefinition.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.AttributeDefinition&gt; attributes = 4 [json_name = "attributes"];</code>
   */
  @java.lang.Override
  public boolean containsAttributes(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetAttributes().getMap().containsKey(key);
  }
  /**
   * Use {@link #getAttributesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, org.permify.grpc.AttributeDefinition> getAttributes() {
    return getAttributesMap();
  }
  /**
   * <pre>
   * Map of attribute definitions within this entity. The key is the attribute name, and the value is the AttributeDefinition.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.AttributeDefinition&gt; attributes = 4 [json_name = "attributes"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, org.permify.grpc.AttributeDefinition> getAttributesMap() {
    return internalGetAttributes().getMap();
  }
  /**
   * <pre>
   * Map of attribute definitions within this entity. The key is the attribute name, and the value is the AttributeDefinition.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.AttributeDefinition&gt; attributes = 4 [json_name = "attributes"];</code>
   */
  @java.lang.Override
  public /* nullable */
org.permify.grpc.AttributeDefinition getAttributesOrDefault(
      java.lang.String key,
      /* nullable */
org.permify.grpc.AttributeDefinition defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, org.permify.grpc.AttributeDefinition> map =
        internalGetAttributes().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Map of attribute definitions within this entity. The key is the attribute name, and the value is the AttributeDefinition.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.AttributeDefinition&gt; attributes = 4 [json_name = "attributes"];</code>
   */
  @java.lang.Override
  public org.permify.grpc.AttributeDefinition getAttributesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, org.permify.grpc.AttributeDefinition> map =
        internalGetAttributes().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int REFERENCES_FIELD_NUMBER = 5;
  private static final class ReferencesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Integer>newDefaultInstance(
                org.permify.grpc.BaseProto.internal_static_base_v1_EntityDefinition_ReferencesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.ENUM,
                org.permify.grpc.EntityDefinition.Reference.REFERENCE_UNSPECIFIED.getNumber());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Integer> references_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
  internalGetReferences() {
    if (references_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ReferencesDefaultEntryHolder.defaultEntry);
    }
    return references_;
  }
  private static final
  com.google.protobuf.Internal.MapAdapter.Converter<
      java.lang.Integer, org.permify.grpc.EntityDefinition.Reference> referencesValueConverter =
          com.google.protobuf.Internal.MapAdapter.newEnumConverter(
              org.permify.grpc.EntityDefinition.Reference.internalGetValueMap(),
              org.permify.grpc.EntityDefinition.Reference.UNRECOGNIZED);
  private static final java.util.Map<java.lang.String, org.permify.grpc.EntityDefinition.Reference>
  internalGetAdaptedReferencesMap(
      java.util.Map<java.lang.String, java.lang.Integer> map) {
    return new com.google.protobuf.Internal.MapAdapter<
        java.lang.String, org.permify.grpc.EntityDefinition.Reference, java.lang.Integer>(
            map, referencesValueConverter);
  }
  public int getReferencesCount() {
    return internalGetReferences().getMap().size();
  }
  /**
   * <pre>
   * Map of references indicating whether a string pertains to a relation, permission, or attribute.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
   */
  @java.lang.Override
  public boolean containsReferences(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetReferences().getMap().containsKey(key);
  }
  /**
   * Use {@link #getReferencesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, org.permify.grpc.EntityDefinition.Reference>
  getReferences() {
    return getReferencesMap();
  }
  /**
   * <pre>
   * Map of references indicating whether a string pertains to a relation, permission, or attribute.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, org.permify.grpc.EntityDefinition.Reference>
  getReferencesMap() {
    return internalGetAdaptedReferencesMap(
        internalGetReferences().getMap());}
  /**
   * <pre>
   * Map of references indicating whether a string pertains to a relation, permission, or attribute.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
   */
  @java.lang.Override
  public /* nullable */
org.permify.grpc.EntityDefinition.Reference getReferencesOrDefault(
      java.lang.String key,
      /* nullable */
org.permify.grpc.EntityDefinition.Reference defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetReferences().getMap();
    return map.containsKey(key)
           ? referencesValueConverter.doForward(map.get(key))
           : defaultValue;
  }
  /**
   * <pre>
   * Map of references indicating whether a string pertains to a relation, permission, or attribute.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
   */
  @java.lang.Override
  public org.permify.grpc.EntityDefinition.Reference getReferencesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetReferences().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return referencesValueConverter.doForward(map.get(key));
  }
  /**
   * Use {@link #getReferencesValueMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Integer>
  getReferencesValue() {
    return getReferencesValueMap();
  }
  /**
   * <pre>
   * Map of references indicating whether a string pertains to a relation, permission, or attribute.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.Integer>
  getReferencesValueMap() {
    return internalGetReferences().getMap();
  }
  /**
   * <pre>
   * Map of references indicating whether a string pertains to a relation, permission, or attribute.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
   */
  @java.lang.Override
  public int getReferencesValueOrDefault(
      java.lang.String key,
      int defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetReferences().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Map of references indicating whether a string pertains to a relation, permission, or attribute.
   * </pre>
   *
   * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
   */
  @java.lang.Override
  public int getReferencesValueOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetReferences().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
    }
    com.google.protobuf.GeneratedMessage
      .serializeStringMapTo(
        output,
        internalGetRelations(),
        RelationsDefaultEntryHolder.defaultEntry,
        2);
    com.google.protobuf.GeneratedMessage
      .serializeStringMapTo(
        output,
        internalGetPermissions(),
        PermissionsDefaultEntryHolder.defaultEntry,
        3);
    com.google.protobuf.GeneratedMessage
      .serializeStringMapTo(
        output,
        internalGetAttributes(),
        AttributesDefaultEntryHolder.defaultEntry,
        4);
    com.google.protobuf.GeneratedMessage
      .serializeStringMapTo(
        output,
        internalGetReferences(),
        ReferencesDefaultEntryHolder.defaultEntry,
        5);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
    }
    for (java.util.Map.Entry<java.lang.String, org.permify.grpc.RelationDefinition> entry
         : internalGetRelations().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, org.permify.grpc.RelationDefinition>
      relations__ = RelationsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, relations__);
    }
    for (java.util.Map.Entry<java.lang.String, org.permify.grpc.PermissionDefinition> entry
         : internalGetPermissions().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, org.permify.grpc.PermissionDefinition>
      permissions__ = PermissionsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, permissions__);
    }
    for (java.util.Map.Entry<java.lang.String, org.permify.grpc.AttributeDefinition> entry
         : internalGetAttributes().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, org.permify.grpc.AttributeDefinition>
      attributes__ = AttributesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, attributes__);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
         : internalGetReferences().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
      references__ = ReferencesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, references__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.permify.grpc.EntityDefinition)) {
      return super.equals(obj);
    }
    org.permify.grpc.EntityDefinition other = (org.permify.grpc.EntityDefinition) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!internalGetRelations().equals(
        other.internalGetRelations())) return false;
    if (!internalGetPermissions().equals(
        other.internalGetPermissions())) return false;
    if (!internalGetAttributes().equals(
        other.internalGetAttributes())) return false;
    if (!internalGetReferences().equals(
        other.internalGetReferences())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (!internalGetRelations().getMap().isEmpty()) {
      hash = (37 * hash) + RELATIONS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetRelations().hashCode();
    }
    if (!internalGetPermissions().getMap().isEmpty()) {
      hash = (37 * hash) + PERMISSIONS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetPermissions().hashCode();
    }
    if (!internalGetAttributes().getMap().isEmpty()) {
      hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetAttributes().hashCode();
    }
    if (!internalGetReferences().getMap().isEmpty()) {
      hash = (37 * hash) + REFERENCES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetReferences().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.permify.grpc.EntityDefinition parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.permify.grpc.EntityDefinition parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.permify.grpc.EntityDefinition parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.permify.grpc.EntityDefinition parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.permify.grpc.EntityDefinition parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.permify.grpc.EntityDefinition parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.permify.grpc.EntityDefinition parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.permify.grpc.EntityDefinition parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.permify.grpc.EntityDefinition parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.permify.grpc.EntityDefinition parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.permify.grpc.EntityDefinition parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.permify.grpc.EntityDefinition parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.permify.grpc.EntityDefinition prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The EntityDefinition message provides detailed information about a specific entity.
   * </pre>
   *
   * Protobuf type {@code base.v1.EntityDefinition}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:base.v1.EntityDefinition)
      org.permify.grpc.EntityDefinitionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.permify.grpc.BaseProto.internal_static_base_v1_EntityDefinition_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 2:
          return internalGetRelations();
        case 3:
          return internalGetPermissions();
        case 4:
          return internalGetAttributes();
        case 5:
          return internalGetReferences();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableRelations();
        case 3:
          return internalGetMutablePermissions();
        case 4:
          return internalGetMutableAttributes();
        case 5:
          return internalGetMutableReferences();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.permify.grpc.BaseProto.internal_static_base_v1_EntityDefinition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.permify.grpc.EntityDefinition.class, org.permify.grpc.EntityDefinition.Builder.class);
    }

    // Construct using org.permify.grpc.EntityDefinition.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      internalGetMutableRelations().clear();
      internalGetMutablePermissions().clear();
      internalGetMutableAttributes().clear();
      internalGetMutableReferences().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.permify.grpc.BaseProto.internal_static_base_v1_EntityDefinition_descriptor;
    }

    @java.lang.Override
    public org.permify.grpc.EntityDefinition getDefaultInstanceForType() {
      return org.permify.grpc.EntityDefinition.getDefaultInstance();
    }

    @java.lang.Override
    public org.permify.grpc.EntityDefinition build() {
      org.permify.grpc.EntityDefinition result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.permify.grpc.EntityDefinition buildPartial() {
      org.permify.grpc.EntityDefinition result = new org.permify.grpc.EntityDefinition(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(org.permify.grpc.EntityDefinition result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.relations_ = internalGetRelations().build(RelationsDefaultEntryHolder.defaultEntry);
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.permissions_ = internalGetPermissions().build(PermissionsDefaultEntryHolder.defaultEntry);
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.attributes_ = internalGetAttributes().build(AttributesDefaultEntryHolder.defaultEntry);
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.references_ = internalGetReferences();
        result.references_.makeImmutable();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.permify.grpc.EntityDefinition) {
        return mergeFrom((org.permify.grpc.EntityDefinition)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.permify.grpc.EntityDefinition other) {
      if (other == org.permify.grpc.EntityDefinition.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      internalGetMutableRelations().mergeFrom(
          other.internalGetRelations());
      bitField0_ |= 0x00000002;
      internalGetMutablePermissions().mergeFrom(
          other.internalGetPermissions());
      bitField0_ |= 0x00000004;
      internalGetMutableAttributes().mergeFrom(
          other.internalGetAttributes());
      bitField0_ |= 0x00000008;
      internalGetMutableReferences().mergeFrom(
          other.internalGetReferences());
      bitField0_ |= 0x00000010;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.google.protobuf.MapEntry<java.lang.String, org.permify.grpc.RelationDefinition>
              relations__ = input.readMessage(
                  RelationsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableRelations().ensureBuilderMap().put(
                  relations__.getKey(), relations__.getValue());
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              com.google.protobuf.MapEntry<java.lang.String, org.permify.grpc.PermissionDefinition>
              permissions__ = input.readMessage(
                  PermissionsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutablePermissions().ensureBuilderMap().put(
                  permissions__.getKey(), permissions__.getValue());
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              com.google.protobuf.MapEntry<java.lang.String, org.permify.grpc.AttributeDefinition>
              attributes__ = input.readMessage(
                  AttributesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableAttributes().ensureBuilderMap().put(
                  attributes__.getKey(), attributes__.getValue());
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              references__ = input.readMessage(
                  ReferencesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableReferences().getMutableMap().put(
                  references__.getKey(), references__.getValue());
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The name of the entity, which follows a specific string pattern and has a maximum byte size.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the entity, which follows a specific string pattern and has a maximum byte size.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the entity, which follows a specific string pattern and has a maximum byte size.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the entity, which follows a specific string pattern and has a maximum byte size.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the entity, which follows a specific string pattern and has a maximum byte size.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private static final class RelationsConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, org.permify.grpc.RelationDefinitionOrBuilder, org.permify.grpc.RelationDefinition> {
      @java.lang.Override
      public org.permify.grpc.RelationDefinition build(org.permify.grpc.RelationDefinitionOrBuilder val) {
        if (val instanceof org.permify.grpc.RelationDefinition) { return (org.permify.grpc.RelationDefinition) val; }
        return ((org.permify.grpc.RelationDefinition.Builder) val).build();
      }

      @java.lang.Override
      public com.google.protobuf.MapEntry<java.lang.String, org.permify.grpc.RelationDefinition> defaultEntry() {
        return RelationsDefaultEntryHolder.defaultEntry;
      }
    };
    private static final RelationsConverter relationsConverter = new RelationsConverter();

    private com.google.protobuf.MapFieldBuilder<
        java.lang.String, org.permify.grpc.RelationDefinitionOrBuilder, org.permify.grpc.RelationDefinition, org.permify.grpc.RelationDefinition.Builder> relations_;
    private com.google.protobuf.MapFieldBuilder<java.lang.String, org.permify.grpc.RelationDefinitionOrBuilder, org.permify.grpc.RelationDefinition, org.permify.grpc.RelationDefinition.Builder>
        internalGetRelations() {
      if (relations_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(relationsConverter);
      }
      return relations_;
    }
    private com.google.protobuf.MapFieldBuilder<java.lang.String, org.permify.grpc.RelationDefinitionOrBuilder, org.permify.grpc.RelationDefinition, org.permify.grpc.RelationDefinition.Builder>
        internalGetMutableRelations() {
      if (relations_ == null) {
        relations_ = new com.google.protobuf.MapFieldBuilder<>(relationsConverter);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return relations_;
    }
    public int getRelationsCount() {
      return internalGetRelations().ensureBuilderMap().size();
    }
    /**
     * <pre>
     * Map of relation definitions within this entity. The key is the relation name, and the value is the RelationDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.RelationDefinition&gt; relations = 2 [json_name = "relations"];</code>
     */
    @java.lang.Override
    public boolean containsRelations(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetRelations().ensureBuilderMap().containsKey(key);
    }
    /**
     * Use {@link #getRelationsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.permify.grpc.RelationDefinition> getRelations() {
      return getRelationsMap();
    }
    /**
     * <pre>
     * Map of relation definitions within this entity. The key is the relation name, and the value is the RelationDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.RelationDefinition&gt; relations = 2 [json_name = "relations"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, org.permify.grpc.RelationDefinition> getRelationsMap() {
      return internalGetRelations().getImmutableMap();
    }
    /**
     * <pre>
     * Map of relation definitions within this entity. The key is the relation name, and the value is the RelationDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.RelationDefinition&gt; relations = 2 [json_name = "relations"];</code>
     */
    @java.lang.Override
    public /* nullable */
org.permify.grpc.RelationDefinition getRelationsOrDefault(
        java.lang.String key,
        /* nullable */
org.permify.grpc.RelationDefinition defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.permify.grpc.RelationDefinitionOrBuilder> map = internalGetMutableRelations().ensureBuilderMap();
      return map.containsKey(key) ? relationsConverter.build(map.get(key)) : defaultValue;
    }
    /**
     * <pre>
     * Map of relation definitions within this entity. The key is the relation name, and the value is the RelationDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.RelationDefinition&gt; relations = 2 [json_name = "relations"];</code>
     */
    @java.lang.Override
    public org.permify.grpc.RelationDefinition getRelationsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.permify.grpc.RelationDefinitionOrBuilder> map = internalGetMutableRelations().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return relationsConverter.build(map.get(key));
    }
    public Builder clearRelations() {
      bitField0_ = (bitField0_ & ~0x00000002);
      internalGetMutableRelations().clear();
      return this;
    }
    /**
     * <pre>
     * Map of relation definitions within this entity. The key is the relation name, and the value is the RelationDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.RelationDefinition&gt; relations = 2 [json_name = "relations"];</code>
     */
    public Builder removeRelations(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableRelations().ensureBuilderMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.permify.grpc.RelationDefinition>
        getMutableRelations() {
      bitField0_ |= 0x00000002;
      return internalGetMutableRelations().ensureMessageMap();
    }
    /**
     * <pre>
     * Map of relation definitions within this entity. The key is the relation name, and the value is the RelationDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.RelationDefinition&gt; relations = 2 [json_name = "relations"];</code>
     */
    public Builder putRelations(
        java.lang.String key,
        org.permify.grpc.RelationDefinition value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableRelations().ensureBuilderMap()
          .put(key, value);
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     * Map of relation definitions within this entity. The key is the relation name, and the value is the RelationDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.RelationDefinition&gt; relations = 2 [json_name = "relations"];</code>
     */
    public Builder putAllRelations(
        java.util.Map<java.lang.String, org.permify.grpc.RelationDefinition> values) {
      for (java.util.Map.Entry<java.lang.String, org.permify.grpc.RelationDefinition> e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutableRelations().ensureBuilderMap()
          .putAll(values);
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     * Map of relation definitions within this entity. The key is the relation name, and the value is the RelationDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.RelationDefinition&gt; relations = 2 [json_name = "relations"];</code>
     */
    public org.permify.grpc.RelationDefinition.Builder putRelationsBuilderIfAbsent(
        java.lang.String key) {
      java.util.Map<java.lang.String, org.permify.grpc.RelationDefinitionOrBuilder> builderMap = internalGetMutableRelations().ensureBuilderMap();
      org.permify.grpc.RelationDefinitionOrBuilder entry = builderMap.get(key);
      if (entry == null) {
        entry = org.permify.grpc.RelationDefinition.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry instanceof org.permify.grpc.RelationDefinition) {
        entry = ((org.permify.grpc.RelationDefinition) entry).toBuilder();
        builderMap.put(key, entry);
      }
      return (org.permify.grpc.RelationDefinition.Builder) entry;
    }

    private static final class PermissionsConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, org.permify.grpc.PermissionDefinitionOrBuilder, org.permify.grpc.PermissionDefinition> {
      @java.lang.Override
      public org.permify.grpc.PermissionDefinition build(org.permify.grpc.PermissionDefinitionOrBuilder val) {
        if (val instanceof org.permify.grpc.PermissionDefinition) { return (org.permify.grpc.PermissionDefinition) val; }
        return ((org.permify.grpc.PermissionDefinition.Builder) val).build();
      }

      @java.lang.Override
      public com.google.protobuf.MapEntry<java.lang.String, org.permify.grpc.PermissionDefinition> defaultEntry() {
        return PermissionsDefaultEntryHolder.defaultEntry;
      }
    };
    private static final PermissionsConverter permissionsConverter = new PermissionsConverter();

    private com.google.protobuf.MapFieldBuilder<
        java.lang.String, org.permify.grpc.PermissionDefinitionOrBuilder, org.permify.grpc.PermissionDefinition, org.permify.grpc.PermissionDefinition.Builder> permissions_;
    private com.google.protobuf.MapFieldBuilder<java.lang.String, org.permify.grpc.PermissionDefinitionOrBuilder, org.permify.grpc.PermissionDefinition, org.permify.grpc.PermissionDefinition.Builder>
        internalGetPermissions() {
      if (permissions_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(permissionsConverter);
      }
      return permissions_;
    }
    private com.google.protobuf.MapFieldBuilder<java.lang.String, org.permify.grpc.PermissionDefinitionOrBuilder, org.permify.grpc.PermissionDefinition, org.permify.grpc.PermissionDefinition.Builder>
        internalGetMutablePermissions() {
      if (permissions_ == null) {
        permissions_ = new com.google.protobuf.MapFieldBuilder<>(permissionsConverter);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return permissions_;
    }
    public int getPermissionsCount() {
      return internalGetPermissions().ensureBuilderMap().size();
    }
    /**
     * <pre>
     * Map of permission definitions within this entity. The key is the permission name, and the value is the PermissionDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.PermissionDefinition&gt; permissions = 3 [json_name = "permissions"];</code>
     */
    @java.lang.Override
    public boolean containsPermissions(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetPermissions().ensureBuilderMap().containsKey(key);
    }
    /**
     * Use {@link #getPermissionsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.permify.grpc.PermissionDefinition> getPermissions() {
      return getPermissionsMap();
    }
    /**
     * <pre>
     * Map of permission definitions within this entity. The key is the permission name, and the value is the PermissionDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.PermissionDefinition&gt; permissions = 3 [json_name = "permissions"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, org.permify.grpc.PermissionDefinition> getPermissionsMap() {
      return internalGetPermissions().getImmutableMap();
    }
    /**
     * <pre>
     * Map of permission definitions within this entity. The key is the permission name, and the value is the PermissionDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.PermissionDefinition&gt; permissions = 3 [json_name = "permissions"];</code>
     */
    @java.lang.Override
    public /* nullable */
org.permify.grpc.PermissionDefinition getPermissionsOrDefault(
        java.lang.String key,
        /* nullable */
org.permify.grpc.PermissionDefinition defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.permify.grpc.PermissionDefinitionOrBuilder> map = internalGetMutablePermissions().ensureBuilderMap();
      return map.containsKey(key) ? permissionsConverter.build(map.get(key)) : defaultValue;
    }
    /**
     * <pre>
     * Map of permission definitions within this entity. The key is the permission name, and the value is the PermissionDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.PermissionDefinition&gt; permissions = 3 [json_name = "permissions"];</code>
     */
    @java.lang.Override
    public org.permify.grpc.PermissionDefinition getPermissionsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.permify.grpc.PermissionDefinitionOrBuilder> map = internalGetMutablePermissions().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return permissionsConverter.build(map.get(key));
    }
    public Builder clearPermissions() {
      bitField0_ = (bitField0_ & ~0x00000004);
      internalGetMutablePermissions().clear();
      return this;
    }
    /**
     * <pre>
     * Map of permission definitions within this entity. The key is the permission name, and the value is the PermissionDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.PermissionDefinition&gt; permissions = 3 [json_name = "permissions"];</code>
     */
    public Builder removePermissions(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutablePermissions().ensureBuilderMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.permify.grpc.PermissionDefinition>
        getMutablePermissions() {
      bitField0_ |= 0x00000004;
      return internalGetMutablePermissions().ensureMessageMap();
    }
    /**
     * <pre>
     * Map of permission definitions within this entity. The key is the permission name, and the value is the PermissionDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.PermissionDefinition&gt; permissions = 3 [json_name = "permissions"];</code>
     */
    public Builder putPermissions(
        java.lang.String key,
        org.permify.grpc.PermissionDefinition value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutablePermissions().ensureBuilderMap()
          .put(key, value);
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <pre>
     * Map of permission definitions within this entity. The key is the permission name, and the value is the PermissionDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.PermissionDefinition&gt; permissions = 3 [json_name = "permissions"];</code>
     */
    public Builder putAllPermissions(
        java.util.Map<java.lang.String, org.permify.grpc.PermissionDefinition> values) {
      for (java.util.Map.Entry<java.lang.String, org.permify.grpc.PermissionDefinition> e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutablePermissions().ensureBuilderMap()
          .putAll(values);
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <pre>
     * Map of permission definitions within this entity. The key is the permission name, and the value is the PermissionDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.PermissionDefinition&gt; permissions = 3 [json_name = "permissions"];</code>
     */
    public org.permify.grpc.PermissionDefinition.Builder putPermissionsBuilderIfAbsent(
        java.lang.String key) {
      java.util.Map<java.lang.String, org.permify.grpc.PermissionDefinitionOrBuilder> builderMap = internalGetMutablePermissions().ensureBuilderMap();
      org.permify.grpc.PermissionDefinitionOrBuilder entry = builderMap.get(key);
      if (entry == null) {
        entry = org.permify.grpc.PermissionDefinition.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry instanceof org.permify.grpc.PermissionDefinition) {
        entry = ((org.permify.grpc.PermissionDefinition) entry).toBuilder();
        builderMap.put(key, entry);
      }
      return (org.permify.grpc.PermissionDefinition.Builder) entry;
    }

    private static final class AttributesConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, org.permify.grpc.AttributeDefinitionOrBuilder, org.permify.grpc.AttributeDefinition> {
      @java.lang.Override
      public org.permify.grpc.AttributeDefinition build(org.permify.grpc.AttributeDefinitionOrBuilder val) {
        if (val instanceof org.permify.grpc.AttributeDefinition) { return (org.permify.grpc.AttributeDefinition) val; }
        return ((org.permify.grpc.AttributeDefinition.Builder) val).build();
      }

      @java.lang.Override
      public com.google.protobuf.MapEntry<java.lang.String, org.permify.grpc.AttributeDefinition> defaultEntry() {
        return AttributesDefaultEntryHolder.defaultEntry;
      }
    };
    private static final AttributesConverter attributesConverter = new AttributesConverter();

    private com.google.protobuf.MapFieldBuilder<
        java.lang.String, org.permify.grpc.AttributeDefinitionOrBuilder, org.permify.grpc.AttributeDefinition, org.permify.grpc.AttributeDefinition.Builder> attributes_;
    private com.google.protobuf.MapFieldBuilder<java.lang.String, org.permify.grpc.AttributeDefinitionOrBuilder, org.permify.grpc.AttributeDefinition, org.permify.grpc.AttributeDefinition.Builder>
        internalGetAttributes() {
      if (attributes_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(attributesConverter);
      }
      return attributes_;
    }
    private com.google.protobuf.MapFieldBuilder<java.lang.String, org.permify.grpc.AttributeDefinitionOrBuilder, org.permify.grpc.AttributeDefinition, org.permify.grpc.AttributeDefinition.Builder>
        internalGetMutableAttributes() {
      if (attributes_ == null) {
        attributes_ = new com.google.protobuf.MapFieldBuilder<>(attributesConverter);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return attributes_;
    }
    public int getAttributesCount() {
      return internalGetAttributes().ensureBuilderMap().size();
    }
    /**
     * <pre>
     * Map of attribute definitions within this entity. The key is the attribute name, and the value is the AttributeDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.AttributeDefinition&gt; attributes = 4 [json_name = "attributes"];</code>
     */
    @java.lang.Override
    public boolean containsAttributes(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetAttributes().ensureBuilderMap().containsKey(key);
    }
    /**
     * Use {@link #getAttributesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.permify.grpc.AttributeDefinition> getAttributes() {
      return getAttributesMap();
    }
    /**
     * <pre>
     * Map of attribute definitions within this entity. The key is the attribute name, and the value is the AttributeDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.AttributeDefinition&gt; attributes = 4 [json_name = "attributes"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, org.permify.grpc.AttributeDefinition> getAttributesMap() {
      return internalGetAttributes().getImmutableMap();
    }
    /**
     * <pre>
     * Map of attribute definitions within this entity. The key is the attribute name, and the value is the AttributeDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.AttributeDefinition&gt; attributes = 4 [json_name = "attributes"];</code>
     */
    @java.lang.Override
    public /* nullable */
org.permify.grpc.AttributeDefinition getAttributesOrDefault(
        java.lang.String key,
        /* nullable */
org.permify.grpc.AttributeDefinition defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.permify.grpc.AttributeDefinitionOrBuilder> map = internalGetMutableAttributes().ensureBuilderMap();
      return map.containsKey(key) ? attributesConverter.build(map.get(key)) : defaultValue;
    }
    /**
     * <pre>
     * Map of attribute definitions within this entity. The key is the attribute name, and the value is the AttributeDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.AttributeDefinition&gt; attributes = 4 [json_name = "attributes"];</code>
     */
    @java.lang.Override
    public org.permify.grpc.AttributeDefinition getAttributesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.permify.grpc.AttributeDefinitionOrBuilder> map = internalGetMutableAttributes().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return attributesConverter.build(map.get(key));
    }
    public Builder clearAttributes() {
      bitField0_ = (bitField0_ & ~0x00000008);
      internalGetMutableAttributes().clear();
      return this;
    }
    /**
     * <pre>
     * Map of attribute definitions within this entity. The key is the attribute name, and the value is the AttributeDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.AttributeDefinition&gt; attributes = 4 [json_name = "attributes"];</code>
     */
    public Builder removeAttributes(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableAttributes().ensureBuilderMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.permify.grpc.AttributeDefinition>
        getMutableAttributes() {
      bitField0_ |= 0x00000008;
      return internalGetMutableAttributes().ensureMessageMap();
    }
    /**
     * <pre>
     * Map of attribute definitions within this entity. The key is the attribute name, and the value is the AttributeDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.AttributeDefinition&gt; attributes = 4 [json_name = "attributes"];</code>
     */
    public Builder putAttributes(
        java.lang.String key,
        org.permify.grpc.AttributeDefinition value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableAttributes().ensureBuilderMap()
          .put(key, value);
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * Map of attribute definitions within this entity. The key is the attribute name, and the value is the AttributeDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.AttributeDefinition&gt; attributes = 4 [json_name = "attributes"];</code>
     */
    public Builder putAllAttributes(
        java.util.Map<java.lang.String, org.permify.grpc.AttributeDefinition> values) {
      for (java.util.Map.Entry<java.lang.String, org.permify.grpc.AttributeDefinition> e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutableAttributes().ensureBuilderMap()
          .putAll(values);
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * Map of attribute definitions within this entity. The key is the attribute name, and the value is the AttributeDefinition.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.AttributeDefinition&gt; attributes = 4 [json_name = "attributes"];</code>
     */
    public org.permify.grpc.AttributeDefinition.Builder putAttributesBuilderIfAbsent(
        java.lang.String key) {
      java.util.Map<java.lang.String, org.permify.grpc.AttributeDefinitionOrBuilder> builderMap = internalGetMutableAttributes().ensureBuilderMap();
      org.permify.grpc.AttributeDefinitionOrBuilder entry = builderMap.get(key);
      if (entry == null) {
        entry = org.permify.grpc.AttributeDefinition.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry instanceof org.permify.grpc.AttributeDefinition) {
        entry = ((org.permify.grpc.AttributeDefinition) entry).toBuilder();
        builderMap.put(key, entry);
      }
      return (org.permify.grpc.AttributeDefinition.Builder) entry;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> references_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
        internalGetReferences() {
      if (references_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ReferencesDefaultEntryHolder.defaultEntry);
      }
      return references_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
        internalGetMutableReferences() {
      if (references_ == null) {
        references_ = com.google.protobuf.MapField.newMapField(
            ReferencesDefaultEntryHolder.defaultEntry);
      }
      if (!references_.isMutable()) {
        references_ = references_.copy();
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return references_;
    }
    public int getReferencesCount() {
      return internalGetReferences().getMap().size();
    }
    /**
     * <pre>
     * Map of references indicating whether a string pertains to a relation, permission, or attribute.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
     */
    @java.lang.Override
    public boolean containsReferences(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetReferences().getMap().containsKey(key);
    }
    /**
     * Use {@link #getReferencesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.permify.grpc.EntityDefinition.Reference>
    getReferences() {
      return getReferencesMap();
    }
    /**
     * <pre>
     * Map of references indicating whether a string pertains to a relation, permission, or attribute.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, org.permify.grpc.EntityDefinition.Reference>
    getReferencesMap() {
      return internalGetAdaptedReferencesMap(
          internalGetReferences().getMap());}
    /**
     * <pre>
     * Map of references indicating whether a string pertains to a relation, permission, or attribute.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
     */
    @java.lang.Override
    public /* nullable */
org.permify.grpc.EntityDefinition.Reference getReferencesOrDefault(
        java.lang.String key,
        /* nullable */
org.permify.grpc.EntityDefinition.Reference defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetReferences().getMap();
      return map.containsKey(key)
             ? referencesValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <pre>
     * Map of references indicating whether a string pertains to a relation, permission, or attribute.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
     */
    @java.lang.Override
    public org.permify.grpc.EntityDefinition.Reference getReferencesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetReferences().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return referencesValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getReferencesValueMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getReferencesValue() {
      return getReferencesValueMap();
    }
    /**
     * <pre>
     * Map of references indicating whether a string pertains to a relation, permission, or attribute.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.Integer>
    getReferencesValueMap() {
      return internalGetReferences().getMap();
    }
    /**
     * <pre>
     * Map of references indicating whether a string pertains to a relation, permission, or attribute.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
     */
    @java.lang.Override
    public int getReferencesValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetReferences().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Map of references indicating whether a string pertains to a relation, permission, or attribute.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
     */
    @java.lang.Override
    public int getReferencesValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetReferences().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearReferences() {
      bitField0_ = (bitField0_ & ~0x00000010);
      internalGetMutableReferences().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Map of references indicating whether a string pertains to a relation, permission, or attribute.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
     */
    public Builder removeReferences(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableReferences().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.permify.grpc.EntityDefinition.Reference>
        getMutableReferences() {
      bitField0_ |= 0x00000010;
      return internalGetAdaptedReferencesMap(
           internalGetMutableReferences().getMutableMap());
    }
    /**
     * <pre>
     * Map of references indicating whether a string pertains to a relation, permission, or attribute.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
     */
    public Builder putReferences(
        java.lang.String key,
        org.permify.grpc.EntityDefinition.Reference value) {
      if (key == null) { throw new NullPointerException("map key"); }

      internalGetMutableReferences().getMutableMap()
          .put(key, referencesValueConverter.doBackward(value));
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     * Map of references indicating whether a string pertains to a relation, permission, or attribute.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
     */
    public Builder putAllReferences(
        java.util.Map<java.lang.String, org.permify.grpc.EntityDefinition.Reference> values) {
      internalGetAdaptedReferencesMap(
          internalGetMutableReferences().getMutableMap())
              .putAll(values);
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getMutableReferencesValue() {
      bitField0_ |= 0x00000010;
      return internalGetMutableReferences().getMutableMap();
    }
    /**
     * <pre>
     * Map of references indicating whether a string pertains to a relation, permission, or attribute.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
     */
    public Builder putReferencesValue(
        java.lang.String key,
        int value) {
      if (key == null) { throw new NullPointerException("map key"); }

      internalGetMutableReferences().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     * Map of references indicating whether a string pertains to a relation, permission, or attribute.
     * </pre>
     *
     * <code>map&lt;string, .base.v1.EntityDefinition.Reference&gt; references = 5 [json_name = "references"];</code>
     */
    public Builder putAllReferencesValue(
        java.util.Map<java.lang.String, java.lang.Integer> values) {
      internalGetMutableReferences().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000010;
      return this;
    }

    // @@protoc_insertion_point(builder_scope:base.v1.EntityDefinition)
  }

  // @@protoc_insertion_point(class_scope:base.v1.EntityDefinition)
  private static final org.permify.grpc.EntityDefinition DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.permify.grpc.EntityDefinition();
  }

  public static org.permify.grpc.EntityDefinition getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EntityDefinition>
      PARSER = new com.google.protobuf.AbstractParser<EntityDefinition>() {
    @java.lang.Override
    public EntityDefinition parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EntityDefinition> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EntityDefinition> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.permify.grpc.EntityDefinition getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

