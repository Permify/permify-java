// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base/v1/service.proto
// Protobuf Java Version: 4.27.2

package org.permify.grpc;

public interface PermissionExpandRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:base.v1.PermissionExpandRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Identifier of the tenant, required, and must match the pattern "[a-zA-Z0-9-,]+", max 64 bytes.
   * </pre>
   *
   * <code>string tenant_id = 1 [json_name = "tenant_id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The tenantId.
   */
  java.lang.String getTenantId();
  /**
   * <pre>
   * Identifier of the tenant, required, and must match the pattern "[a-zA-Z0-9-,]+", max 64 bytes.
   * </pre>
   *
   * <code>string tenant_id = 1 [json_name = "tenant_id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The bytes for tenantId.
   */
  com.google.protobuf.ByteString
      getTenantIdBytes();

  /**
   * <pre>
   * Metadata associated with this request, required.
   * </pre>
   *
   * <code>.base.v1.PermissionExpandRequestMetadata metadata = 2 [json_name = "metadata", (.validate.rules) = { ... }</code>
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();
  /**
   * <pre>
   * Metadata associated with this request, required.
   * </pre>
   *
   * <code>.base.v1.PermissionExpandRequestMetadata metadata = 2 [json_name = "metadata", (.validate.rules) = { ... }</code>
   * @return The metadata.
   */
  org.permify.grpc.PermissionExpandRequestMetadata getMetadata();
  /**
   * <pre>
   * Metadata associated with this request, required.
   * </pre>
   *
   * <code>.base.v1.PermissionExpandRequestMetadata metadata = 2 [json_name = "metadata", (.validate.rules) = { ... }</code>
   */
  org.permify.grpc.PermissionExpandRequestMetadataOrBuilder getMetadataOrBuilder();

  /**
   * <pre>
   * Entity on which the permission needs to be expanded, required.
   * </pre>
   *
   * <code>.base.v1.Entity entity = 3 [json_name = "entity", (.validate.rules) = { ... }</code>
   * @return Whether the entity field is set.
   */
  boolean hasEntity();
  /**
   * <pre>
   * Entity on which the permission needs to be expanded, required.
   * </pre>
   *
   * <code>.base.v1.Entity entity = 3 [json_name = "entity", (.validate.rules) = { ... }</code>
   * @return The entity.
   */
  org.permify.grpc.Entity getEntity();
  /**
   * <pre>
   * Entity on which the permission needs to be expanded, required.
   * </pre>
   *
   * <code>.base.v1.Entity entity = 3 [json_name = "entity", (.validate.rules) = { ... }</code>
   */
  org.permify.grpc.EntityOrBuilder getEntityOrBuilder();

  /**
   * <pre>
   * Name of the permission to be expanded, not required, must start with a letter and can include alphanumeric and underscore, max 64 bytes.
   * </pre>
   *
   * <code>string permission = 4 [json_name = "permission", (.validate.rules) = { ... }</code>
   * @return The permission.
   */
  java.lang.String getPermission();
  /**
   * <pre>
   * Name of the permission to be expanded, not required, must start with a letter and can include alphanumeric and underscore, max 64 bytes.
   * </pre>
   *
   * <code>string permission = 4 [json_name = "permission", (.validate.rules) = { ... }</code>
   * @return The bytes for permission.
   */
  com.google.protobuf.ByteString
      getPermissionBytes();

  /**
   * <pre>
   * Context associated with this request.
   * </pre>
   *
   * <code>.base.v1.Context context = 5 [json_name = "context"];</code>
   * @return Whether the context field is set.
   */
  boolean hasContext();
  /**
   * <pre>
   * Context associated with this request.
   * </pre>
   *
   * <code>.base.v1.Context context = 5 [json_name = "context"];</code>
   * @return The context.
   */
  org.permify.grpc.Context getContext();
  /**
   * <pre>
   * Context associated with this request.
   * </pre>
   *
   * <code>.base.v1.Context context = 5 [json_name = "context"];</code>
   */
  org.permify.grpc.ContextOrBuilder getContextOrBuilder();

  /**
   * <pre>
   * Additional arguments associated with this request.
   * </pre>
   *
   * <code>repeated .base.v1.Argument arguments = 6 [json_name = "arguments"];</code>
   */
  java.util.List<org.permify.grpc.Argument> 
      getArgumentsList();
  /**
   * <pre>
   * Additional arguments associated with this request.
   * </pre>
   *
   * <code>repeated .base.v1.Argument arguments = 6 [json_name = "arguments"];</code>
   */
  org.permify.grpc.Argument getArguments(int index);
  /**
   * <pre>
   * Additional arguments associated with this request.
   * </pre>
   *
   * <code>repeated .base.v1.Argument arguments = 6 [json_name = "arguments"];</code>
   */
  int getArgumentsCount();
  /**
   * <pre>
   * Additional arguments associated with this request.
   * </pre>
   *
   * <code>repeated .base.v1.Argument arguments = 6 [json_name = "arguments"];</code>
   */
  java.util.List<? extends org.permify.grpc.ArgumentOrBuilder> 
      getArgumentsOrBuilderList();
  /**
   * <pre>
   * Additional arguments associated with this request.
   * </pre>
   *
   * <code>repeated .base.v1.Argument arguments = 6 [json_name = "arguments"];</code>
   */
  org.permify.grpc.ArgumentOrBuilder getArgumentsOrBuilder(
      int index);
}
