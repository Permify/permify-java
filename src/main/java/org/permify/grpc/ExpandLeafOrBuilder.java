// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base/v1/base.proto
// Protobuf Java Version: 4.27.2

package org.permify.grpc;

public interface ExpandLeafOrBuilder extends
    // @@protoc_insertion_point(interface_extends:base.v1.ExpandLeaf)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * subjects are used when the leaf is a set of subjects.
   * </pre>
   *
   * <code>.base.v1.Subjects subjects = 1 [json_name = "subjects"];</code>
   * @return Whether the subjects field is set.
   */
  boolean hasSubjects();
  /**
   * <pre>
   * subjects are used when the leaf is a set of subjects.
   * </pre>
   *
   * <code>.base.v1.Subjects subjects = 1 [json_name = "subjects"];</code>
   * @return The subjects.
   */
  org.permify.grpc.Subjects getSubjects();
  /**
   * <pre>
   * subjects are used when the leaf is a set of subjects.
   * </pre>
   *
   * <code>.base.v1.Subjects subjects = 1 [json_name = "subjects"];</code>
   */
  org.permify.grpc.SubjectsOrBuilder getSubjectsOrBuilder();

  /**
   * <pre>
   * values are used when the leaf node is a set of values.
   * </pre>
   *
   * <code>.base.v1.Values values = 2 [json_name = "values"];</code>
   * @return Whether the values field is set.
   */
  boolean hasValues();
  /**
   * <pre>
   * values are used when the leaf node is a set of values.
   * </pre>
   *
   * <code>.base.v1.Values values = 2 [json_name = "values"];</code>
   * @return The values.
   */
  org.permify.grpc.Values getValues();
  /**
   * <pre>
   * values are used when the leaf node is a set of values.
   * </pre>
   *
   * <code>.base.v1.Values values = 2 [json_name = "values"];</code>
   */
  org.permify.grpc.ValuesOrBuilder getValuesOrBuilder();

  /**
   * <pre>
   * value is used when the leaf node is a single value.
   * </pre>
   *
   * <code>.google.protobuf.Any value = 3 [json_name = "value"];</code>
   * @return Whether the value field is set.
   */
  boolean hasValue();
  /**
   * <pre>
   * value is used when the leaf node is a single value.
   * </pre>
   *
   * <code>.google.protobuf.Any value = 3 [json_name = "value"];</code>
   * @return The value.
   */
  com.google.protobuf.Any getValue();
  /**
   * <pre>
   * value is used when the leaf node is a single value.
   * </pre>
   *
   * <code>.google.protobuf.Any value = 3 [json_name = "value"];</code>
   */
  com.google.protobuf.AnyOrBuilder getValueOrBuilder();

  org.permify.grpc.ExpandLeaf.TypeCase getTypeCase();
}
