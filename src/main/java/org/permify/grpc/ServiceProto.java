// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base/v1/service.proto
// Protobuf Java Version: 4.27.2

package org.permify.grpc;

public final class ServiceProto {
  private ServiceProto() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      ServiceProto.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionCheckRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionCheckRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionCheckRequestMetadata_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionCheckRequestMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionCheckResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionCheckResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionCheckResponseMetadata_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionCheckResponseMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionExpandRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionExpandRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionExpandRequestMetadata_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionExpandRequestMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionExpandResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionExpandResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionLookupEntityRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionLookupEntityRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionLookupEntityRequestMetadata_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionLookupEntityRequestMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionLookupEntityResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionLookupEntityResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionLookupEntityStreamResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionLookupEntityStreamResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionEntityFilterRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionEntityFilterRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionEntityFilterRequestMetadata_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionEntityFilterRequestMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionLookupSubjectRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionLookupSubjectRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionLookupSubjectRequestMetadata_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionLookupSubjectRequestMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionLookupSubjectResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionLookupSubjectResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionSubjectPermissionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionSubjectPermissionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionSubjectPermissionRequestMetadata_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionSubjectPermissionRequestMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionSubjectPermissionResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionSubjectPermissionResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_PermissionSubjectPermissionResponse_ResultsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_PermissionSubjectPermissionResponse_ResultsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_WatchRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_WatchRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_WatchResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_WatchResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_SchemaWriteRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_SchemaWriteRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_SchemaWriteResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_SchemaWriteResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_SchemaPartialWriteRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_SchemaPartialWriteRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_SchemaPartialWriteRequest_PartialsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_SchemaPartialWriteRequest_PartialsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_SchemaPartialWriteRequestMetadata_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_SchemaPartialWriteRequestMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_SchemaPartialWriteResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_SchemaPartialWriteResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_SchemaReadRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_SchemaReadRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_SchemaReadRequestMetadata_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_SchemaReadRequestMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_SchemaReadResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_SchemaReadResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_SchemaListRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_SchemaListRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_SchemaListResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_SchemaListResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_SchemaList_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_SchemaList_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_DataWriteRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_DataWriteRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_DataWriteRequestMetadata_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_DataWriteRequestMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_DataWriteResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_DataWriteResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_RelationshipWriteRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_RelationshipWriteRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_RelationshipWriteRequestMetadata_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_RelationshipWriteRequestMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_RelationshipWriteResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_RelationshipWriteResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_RelationshipReadRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_RelationshipReadRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_RelationshipReadRequestMetadata_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_RelationshipReadRequestMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_RelationshipReadResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_RelationshipReadResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_AttributeReadRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_AttributeReadRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_AttributeReadRequestMetadata_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_AttributeReadRequestMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_AttributeReadResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_AttributeReadResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_DataDeleteRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_DataDeleteRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_DataDeleteResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_DataDeleteResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_RelationshipDeleteRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_RelationshipDeleteRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_RelationshipDeleteResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_RelationshipDeleteResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_BundleRunRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_BundleRunRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_BundleRunRequest_ArgumentsEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_BundleRunRequest_ArgumentsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_BundleRunResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_BundleRunResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_BundleWriteRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_BundleWriteRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_BundleWriteResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_BundleWriteResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_BundleReadRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_BundleReadRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_BundleReadResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_BundleReadResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_BundleDeleteRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_BundleDeleteRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_BundleDeleteResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_BundleDeleteResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_TenantCreateRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_TenantCreateRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_TenantCreateResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_TenantCreateResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_TenantDeleteRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_TenantDeleteRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_TenantDeleteResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_TenantDeleteResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_TenantListRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_TenantListRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_TenantListResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_TenantListResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025base/v1/service.proto\022\007base.v1\032\022base/v" +
      "1/base.proto\032\027validate/validate.proto\032\034g" +
      "oogle/api/annotations.proto\032.protoc-gen-" +
      "openapiv2/options/annotations.proto\"\200\007\n\026" +
      "PermissionCheckRequest\022\252\002\n\ttenant_id\030\001 \001" +
      "(\tB\213\002\222A\331\0012\326\001Identifier of the tenant, if" +
      " you are not using multi-tenancy (have o" +
      "nly one tenant) use pre-inserted tenant " +
      "<code>t1</code> for this field. Required" +
      ", and must match the pattern \\\342\200\234[a-zA-Z" +
      "0-9-,]+\\\342\200\234, max 64 bytes.\372B+r)(\200\0012!^([a" +
      "-zA-Z0-9_\\-@\\.:+]{1,128}|\\*)$\320\001\000R\ttenant" +
      "_id\022M\n\010metadata\030\002 \001(\0132\'.base.v1.Permissi" +
      "onCheckRequestMetadataB\010\372B\005\212\001\002\020\001R\010metada" +
      "ta\022D\n\006entity\030\003 \001(\0132\017.base.v1.EntityB\033\222A\020" +
      "J\016\"repository:1\"\372B\005\212\001\002\020\001R\006entity\022v\n\nperm" +
      "ission\030\004 \001(\tBV\222A624The action the user w" +
      "ants to perform on the resource\372B\032r\030(@2\021" +
      "^[a-zA-Z_]{1,64}$\320\001\000R\npermission\0224\n\007subj" +
      "ect\030\005 \001(\0132\020.base.v1.SubjectB\010\372B\005\212\001\002\020\001R\007s" +
      "ubject\022\304\001\n\007context\030\006 \001(\0132\020.base.v1.Conte" +
      "xtB\227\001\222A\223\0012\220\001Contextual data that can be " +
      "dynamically added to permission check re" +
      "quests. See details on [Contextual Data]" +
      "(../../operations/contextual-tuples)R\007co" +
      "ntext\022/\n\targuments\030\007 \003(\0132\021.base.v1.Argum" +
      "entR\targuments\"\262\002\n\036PermissionCheckReques" +
      "tMetadata\022&\n\016schema_version\030\001 \001(\tR\016schem" +
      "a_version\022\211\001\n\nsnap_token\030\002 \001(\tBi\222Af2dThe" +
      " snap token to avoid stale cache, see mo" +
      "re details on [Snap Tokens](../../operat" +
      "ions/snap-tokens)R\nsnap_token\022\\\n\005depth\030\003" +
      " \001(\005BF\222A<2:Query limit when if recursive" +
      " database queries got in loop\372B\004\032\002(\003R\005de" +
      "pth\"\207\001\n\027PermissionCheckResponse\022&\n\003can\030\001" +
      " \001(\0162\024.base.v1.CheckResultR\003can\022D\n\010metad" +
      "ata\030\002 \001(\0132(.base.v1.PermissionCheckRespo" +
      "nseMetadataR\010metadata\"C\n\037PermissionCheck" +
      "ResponseMetadata\022 \n\013check_count\030\001 \001(\005R\013c" +
      "heck_count\"\345\004\n\027PermissionExpandRequest\022\252" +
      "\002\n\ttenant_id\030\001 \001(\tB\213\002\222A\331\0012\326\001Identifier o" +
      "f the tenant, if you are not using multi" +
      "-tenancy (have only one tenant) use pre-" +
      "inserted tenant <code>t1</code> for this" +
      " field. Required, and must match the pat" +
      "tern \\\342\200\234[a-zA-Z0-9-,]+\\\342\200\234, max 64 byte" +
      "s.\372B+r)(\200\0012!^([a-zA-Z0-9_\\-@\\.:+]{1,128}" +
      "|\\*)$\320\001\000R\ttenant_id\022N\n\010metadata\030\002 \001(\0132(." +
      "base.v1.PermissionExpandRequestMetadataB" +
      "\010\372B\005\212\001\002\020\001R\010metadata\0221\n\006entity\030\003 \001(\0132\017.ba" +
      "se.v1.EntityB\010\372B\005\212\001\002\020\001R\006entity\022=\n\npermis" +
      "sion\030\004 \001(\tB\035\372B\032r\030(@2\021^[a-zA-Z_]{1,64}$\320\001" +
      "\001R\npermission\022*\n\007context\030\005 \001(\0132\020.base.v1" +
      ".ContextR\007context\022/\n\targuments\030\006 \003(\0132\021.b" +
      "ase.v1.ArgumentR\targuments\"\326\001\n\037Permissio" +
      "nExpandRequestMetadata\022&\n\016schema_version" +
      "\030\001 \001(\tR\016schema_version\022\212\001\n\nsnap_token\030\002 " +
      "\001(\tBj\222Ag2eThe snap token to avoid stale " +
      "cache, see more details on [Snap Tokens]" +
      "(../../operations/snap-tokens).R\nsnap_to" +
      "ken\"?\n\030PermissionExpandResponse\022#\n\004tree\030" +
      "\001 \001(\0132\017.base.v1.ExpandR\004tree\"\204\005\n\035Permiss" +
      "ionLookupEntityRequest\022\252\002\n\ttenant_id\030\001 \001" +
      "(\tB\213\002\222A\331\0012\326\001Identifier of the tenant, if" +
      " you are not using multi-tenancy (have o" +
      "nly one tenant) use pre-inserted tenant " +
      "<code>t1</code> for this field. Required" +
      ", and must match the pattern \\\342\200\234[a-zA-Z" +
      "0-9-,]+\\\342\200\234, max 64 bytes.\372B+r)(\200\0012!^([a" +
      "-zA-Z0-9_\\-@\\.:+]{1,128}|\\*)$\320\001\000R\ttenant" +
      "_id\022T\n\010metadata\030\002 \001(\0132..base.v1.Permissi" +
      "onLookupEntityRequestMetadataB\010\372B\005\212\001\002\020\001R" +
      "\010metadata\022?\n\013entity_type\030\003 \001(\tB\035\372B\032r\030(@2" +
      "\021^[a-zA-Z_]{1,64}$\320\001\000R\013entity_type\022=\n\npe" +
      "rmission\030\004 \001(\tB\035\372B\032r\030(@2\021^[a-zA-Z_]{1,64" +
      "}$\320\001\000R\npermission\0224\n\007subject\030\005 \001(\0132\020.bas" +
      "e.v1.SubjectB\010\372B\005\212\001\002\020\001R\007subject\022*\n\007conte" +
      "xt\030\006 \001(\0132\020.base.v1.ContextR\007context\"\273\002\n%" +
      "PermissionLookupEntityRequestMetadata\022&\n" +
      "\016schema_version\030\001 \001(\tR\016schema_version\022\212\001" +
      "\n\nsnap_token\030\002 \001(\tBj\222Ag2eThe snap token " +
      "to avoid stale cache, see more details o" +
      "n [Snap Tokens](../../operations/snap-to" +
      "kens).R\nsnap_token\022]\n\005depth\030\003 \001(\005BG\222A=2;" +
      "Query limit when if recursive database q" +
      "ueries got in loop.\372B\004\032\002(\003R\005depth\"@\n\036Per" +
      "missionLookupEntityResponse\022\036\n\nentity_id" +
      "s\030\001 \003(\tR\nentity_ids\"D\n$PermissionLookupE" +
      "ntityStreamResponse\022\034\n\tentity_id\030\001 \001(\tR\t" +
      "entity_id\"\302\004\n\035PermissionEntityFilterRequ" +
      "est\022\252\002\n\ttenant_id\030\001 \001(\tB\213\002\222A\331\0012\326\001Identif" +
      "ier of the tenant, if you are not using " +
      "multi-tenancy (have only one tenant) use" +
      " pre-inserted tenant <code>t1</code> for" +
      " this field. Required, and must match th" +
      "e pattern \\\342\200\234[a-zA-Z0-9-,]+\\\342\200\234, max 64" +
      " bytes.\372B+r)(\200\0012!^([a-zA-Z0-9_\\-@\\.:+]{1" +
      ",128}|\\*)$\320\001\000R\ttenant_id\022T\n\010metadata\030\002 \001" +
      "(\0132..base.v1.PermissionEntityFilterReque" +
      "stMetadataB\010\372B\005\212\001\002\020\001R\010metadata\022F\n\020entity" +
      "_reference\030\003 \001(\0132\032.base.v1.RelationRefer" +
      "enceR\020entity_reference\022*\n\007subject\030\004 \001(\0132" +
      "\020.base.v1.SubjectR\007subject\022*\n\007context\030\005 " +
      "\001(\0132\020.base.v1.ContextR\007context\"\273\002\n%Permi" +
      "ssionEntityFilterRequestMetadata\022&\n\016sche" +
      "ma_version\030\001 \001(\tR\016schema_version\022\212\001\n\nsna" +
      "p_token\030\002 \001(\tBj\222Ag2eThe snap token to av" +
      "oid stale cache, see more details on [Sn" +
      "ap Tokens](../../operations/snap-tokens)" +
      ".R\nsnap_token\022]\n\005depth\030\003 \001(\005BG\222A=2;Query" +
      " limit when if recursive database querie" +
      "s got in loop.\372B\004\032\002(\003R\005depth\"\214\005\n\036Permiss" +
      "ionLookupSubjectRequest\022\252\002\n\ttenant_id\030\001 " +
      "\001(\tB\213\002\222A\331\0012\326\001Identifier of the tenant, i" +
      "f you are not using multi-tenancy (have " +
      "only one tenant) use pre-inserted tenant" +
      " <code>t1</code> for this field. Require" +
      "d, and must match the pattern \\\342\200\234[a-zA-" +
      "Z0-9-,]+\\\342\200\234, max 64 bytes.\372B+r)(\200\0012!^([" +
      "a-zA-Z0-9_\\-@\\.:+]{1,128}|\\*)$\320\001\000R\ttenan" +
      "t_id\022U\n\010metadata\030\002 \001(\0132/.base.v1.Permiss" +
      "ionLookupSubjectRequestMetadataB\010\372B\005\212\001\002\020" +
      "\001R\010metadata\0221\n\006entity\030\003 \001(\0132\017.base.v1.En" +
      "tityB\010\372B\005\212\001\002\020\001R\006entity\022=\n\npermission\030\004 \001" +
      "(\tB\035\372B\032r\030(@2\021^[a-zA-Z_]{1,64}$\320\001\000R\npermi" +
      "ssion\022H\n\021subject_reference\030\005 \001(\0132\032.base." +
      "v1.RelationReferenceR\021subject_reference\022" +
      "*\n\007context\030\006 \001(\0132\020.base.v1.ContextR\007cont" +
      "ext\"\274\002\n&PermissionLookupSubjectRequestMe" +
      "tadata\022&\n\016schema_version\030\001 \001(\tR\016schema_v" +
      "ersion\022\212\001\n\nsnap_token\030\002 \001(\tBj\222Ag2eThe sn" +
      "ap token to avoid stale cache, see more " +
      "details on [Snap Tokens](../../operation" +
      "s/snap-tokens).R\nsnap_token\022]\n\005depth\030\003 \001" +
      "(\005BG\222A=2;Query limit when if recursive d" +
      "atabase queries got in loop.\372B\004\032\002(\003R\005dep" +
      "th\"C\n\037PermissionLookupSubjectResponse\022 \n" +
      "\013subject_ids\030\001 \003(\tR\013subject_ids\"\301\004\n\"Perm" +
      "issionSubjectPermissionRequest\022\252\002\n\ttenan" +
      "t_id\030\001 \001(\tB\213\002\222A\331\0012\326\001Identifier of the te" +
      "nant, if you are not using multi-tenancy" +
      " (have only one tenant) use pre-inserted" +
      " tenant <code>t1</code> for this field. " +
      "Required, and must match the pattern \\\342\200" +
      "\234[a-zA-Z0-9-,]+\\\342\200\234, max 64 bytes.\372B+r)(" +
      "\200\0012!^([a-zA-Z0-9_\\-@\\.:+]{1,128}|\\*)$\320\001\000" +
      "R\ttenant_id\022Y\n\010metadata\030\002 \001(\01323.base.v1." +
      "PermissionSubjectPermissionRequestMetada" +
      "taB\010\372B\005\212\001\002\020\001R\010metadata\0221\n\006entity\030\003 \001(\0132\017" +
      ".base.v1.EntityB\010\372B\005\212\001\002\020\001R\006entity\0224\n\007sub" +
      "ject\030\004 \001(\0132\020.base.v1.SubjectB\010\372B\005\212\001\002\020\001R\007" +
      "subject\022*\n\007context\030\005 \001(\0132\020.base.v1.Conte" +
      "xtR\007context\"\352\002\n*PermissionSubjectPermiss" +
      "ionRequestMetadata\022&\n\016schema_version\030\001 \001" +
      "(\tR\016schema_version\022\212\001\n\nsnap_token\030\002 \001(\tB" +
      "j\222Ag2eThe snap token to avoid stale cach" +
      "e, see more details on [Snap Tokens](../" +
      "../operations/snap-tokens).R\nsnap_token\022" +
      "(\n\017only_permission\030\003 \001(\010R\017only_permissio" +
      "n\022]\n\005depth\030\004 \001(\005BG\222A=2;Query limit when " +
      "if recursive database queries got in loo" +
      "p.\372B\004\032\002(\003R\005depth\"\314\001\n#PermissionSubjectPe" +
      "rmissionResponse\022S\n\007results\030\001 \003(\01329.base" +
      ".v1.PermissionSubjectPermissionResponse." +
      "ResultsEntryR\007results\032P\n\014ResultsEntry\022\020\n" +
      "\003key\030\001 \001(\tR\003key\022*\n\005value\030\002 \001(\0162\024.base.v1" +
      ".CheckResultR\005value:\0028\001\"\310\003\n\014WatchRequest" +
      "\022\252\002\n\ttenant_id\030\001 \001(\tB\213\002\222A\331\0012\326\001Identifier" +
      " of the tenant, if you are not using mul" +
      "ti-tenancy (have only one tenant) use pr" +
      "e-inserted tenant <code>t1</code> for th" +
      "is field. Required, and must match the p" +
      "attern \\\342\200\234[a-zA-Z0-9-,]+\\\342\200\234, max 64 by" +
      "tes.\372B+r)(\200\0012!^([a-zA-Z0-9_\\-@\\.:+]{1,12" +
      "8}|\\*)$\320\001\000R\ttenant_id\022\212\001\n\nsnap_token\030\002 \001" +
      "(\tBj\222Ag2eThe snap token to avoid stale c" +
      "ache, see more details on [Snap Tokens](" +
      "../../operations/snap-tokens).R\nsnap_tok" +
      "en\"?\n\rWatchResponse\022.\n\007changes\030\001 \001(\0132\024.b" +
      "ase.v1.DataChangesR\007changes\"\331\002\n\022SchemaWr" +
      "iteRequest\022\252\002\n\ttenant_id\030\001 \001(\tB\213\002\222A\331\0012\326\001" +
      "Identifier of the tenant, if you are not" +
      " using multi-tenancy (have only one tena" +
      "nt) use pre-inserted tenant <code>t1</co" +
      "de> for this field. Required, and must m" +
      "atch the pattern \\\342\200\234[a-zA-Z0-9-,]+\\\342\200\234," +
      " max 64 bytes.\372B+r)(\200\0012!^([a-zA-Z0-9_\\-@" +
      "\\.:+]{1,128}|\\*)$\320\001\000R\ttenant_id\022\026\n\006schem" +
      "a\030\002 \001(\tR\006schema\"=\n\023SchemaWriteResponse\022&" +
      "\n\016schema_version\030\001 \001(\tR\016schema_version\"\331" +
      "\002\n\031SchemaPartialWriteRequest\022L\n\ttenant_i" +
      "d\030\001 \001(\tB.\372B+r)(\200\0012!^([a-zA-Z0-9_\\-@\\.:+]" +
      "{1,128}|\\*)$\320\001\000R\ttenant_id\022P\n\010metadata\030\002" +
      " \001(\0132*.base.v1.SchemaPartialWriteRequest" +
      "MetadataB\010\372B\005\212\001\002\020\001R\010metadata\022L\n\010partials" +
      "\030\003 \003(\01320.base.v1.SchemaPartialWriteReque" +
      "st.PartialsEntryR\010partials\032N\n\rPartialsEn" +
      "try\022\020\n\003key\030\001 \001(\tR\003key\022\'\n\005value\030\002 \001(\0132\021.b" +
      "ase.v1.PartialsR\005value:\0028\001\"K\n!SchemaPart" +
      "ialWriteRequestMetadata\022&\n\016schema_versio" +
      "n\030\001 \001(\tR\016schema_version\"D\n\032SchemaPartial" +
      "WriteResponse\022&\n\016schema_version\030\001 \001(\tR\016s" +
      "chema_version\"\212\003\n\021SchemaReadRequest\022\252\002\n\t" +
      "tenant_id\030\001 \001(\tB\213\002\222A\331\0012\326\001Identifier of t" +
      "he tenant, if you are not using multi-te" +
      "nancy (have only one tenant) use pre-ins" +
      "erted tenant <code>t1</code> for this fi" +
      "eld. Required, and must match the patter" +
      "n \\\342\200\234[a-zA-Z0-9-,]+\\\342\200\234, max 64 bytes.\372" +
      "B+r)(\200\0012!^([a-zA-Z0-9_\\-@\\.:+]{1,128}|\\*" +
      ")$\320\001\000R\ttenant_id\022H\n\010metadata\030\002 \001(\0132\".bas" +
      "e.v1.SchemaReadRequestMetadataB\010\372B\005\212\001\002\020\001" +
      "R\010metadata\"C\n\031SchemaReadRequestMetadata\022" +
      "&\n\016schema_version\030\001 \001(\tR\016schema_version\"" +
      "G\n\022SchemaReadResponse\0221\n\006schema\030\001 \001(\0132\031." +
      "base.v1.SchemaDefinitionR\006schema\"\241\003\n\021Sch" +
      "emaListRequest\022\252\002\n\ttenant_id\030\001 \001(\tB\213\002\222A\331" +
      "\0012\326\001Identifier of the tenant, if you are" +
      " not using multi-tenancy (have only one " +
      "tenant) use pre-inserted tenant <code>t1" +
      "</code> for this field. Required, and mu" +
      "st match the pattern \\\342\200\234[a-zA-Z0-9-,]+\\" +
      "\342\200\234, max 64 bytes.\372B+r)(\200\0012!^([a-zA-Z0-9" +
      "_\\-@\\.:+]{1,128}|\\*)$\320\001\000R\ttenant_id\022)\n\tp" +
      "age_size\030\002 \001(\rB\013\372B\010*\006\030d(\001@\001R\tpage_size\0224" +
      "\n\020continuous_token\030\003 \001(\tB\010\372B\005r\003\320\001\001R\020cont" +
      "inuous_token\"\203\001\n\022SchemaListResponse\022\022\n\004h" +
      "ead\030\001 \001(\tR\004head\022-\n\007schemas\030\002 \003(\0132\023.base." +
      "v1.SchemaListR\007schemas\022*\n\020continuous_tok" +
      "en\030\003 \001(\tR\020continuous_token\"F\n\nSchemaList" +
      "\022\030\n\007version\030\001 \001(\tR\007version\022\036\n\ncreated_at" +
      "\030\002 \001(\tR\ncreated_at\"\212\004\n\020DataWriteRequest\022" +
      "\252\002\n\ttenant_id\030\001 \001(\tB\213\002\222A\331\0012\326\001Identifier " +
      "of the tenant, if you are not using mult" +
      "i-tenancy (have only one tenant) use pre" +
      "-inserted tenant <code>t1</code> for thi" +
      "s field. Required, and must match the pa" +
      "ttern \\\342\200\234[a-zA-Z0-9-,]+\\\342\200\234, max 64 byt" +
      "es.\372B+r)(\200\0012!^([a-zA-Z0-9_\\-@\\.:+]{1,128" +
      "}|\\*)$\320\001\000R\ttenant_id\022G\n\010metadata\030\002 \001(\0132!" +
      ".base.v1.DataWriteRequestMetadataB\010\372B\005\212\001" +
      "\002\020\001R\010metadata\0229\n\006tuples\030\003 \003(\0132\016.base.v1." +
      "TupleB\021\372B\016\222\001\013\010\000\020d\"\005\212\001\002\020\001R\006tuples\022E\n\nattr" +
      "ibutes\030\004 \003(\0132\022.base.v1.AttributeB\021\372B\016\222\001\013" +
      "\010\000\020d\"\005\212\001\002\020\001R\nattributes\"B\n\030DataWriteRequ" +
      "estMetadata\022&\n\016schema_version\030\001 \001(\tR\016sch" +
      "ema_version\"\240\001\n\021DataWriteResponse\022\212\001\n\nsn" +
      "ap_token\030\001 \001(\tBj\222Ag2eThe snap token to a" +
      "void stale cache, see more details on [S" +
      "nap Tokens](../../operations/snap-tokens" +
      ").R\nsnap_token\"\323\003\n\030RelationshipWriteRequ" +
      "est\022\252\002\n\ttenant_id\030\001 \001(\tB\213\002\222A\331\0012\326\001Identif" +
      "ier of the tenant, if you are not using " +
      "multi-tenancy (have only one tenant) use" +
      " pre-inserted tenant <code>t1</code> for" +
      " this field. Required, and must match th" +
      "e pattern \\\342\200\234[a-zA-Z0-9-,]+\\\342\200\234, max 64" +
      " bytes.\372B+r)(\200\0012!^([a-zA-Z0-9_\\-@\\.:+]{1" +
      ",128}|\\*)$\320\001\000R\ttenant_id\022O\n\010metadata\030\002 \001" +
      "(\0132).base.v1.RelationshipWriteRequestMet" +
      "adataB\010\372B\005\212\001\002\020\001R\010metadata\0229\n\006tuples\030\003 \003(" +
      "\0132\016.base.v1.TupleB\021\372B\016\222\001\013\010\001\020d\"\005\212\001\002\020\001R\006tu" +
      "ples\"J\n RelationshipWriteRequestMetadata" +
      "\022&\n\016schema_version\030\001 \001(\tR\016schema_version" +
      "\"\247\001\n\031RelationshipWriteResponse\022\211\001\n\nsnap_" +
      "token\030\001 \001(\tBi\222Af2dThe snap token to avoi" +
      "d stale cache, see more details on [Snap" +
      " Tokens](../../operations/snap-tokens)R\n" +
      "snap_token\"\257\004\n\027RelationshipReadRequest\022\252" +
      "\002\n\ttenant_id\030\001 \001(\tB\213\002\222A\331\0012\326\001Identifier o" +
      "f the tenant, if you are not using multi" +
      "-tenancy (have only one tenant) use pre-" +
      "inserted tenant <code>t1</code> for this" +
      " field. Required, and must match the pat" +
      "tern \\\342\200\234[a-zA-Z0-9-,]+\\\342\200\234, max 64 byte" +
      "s.\372B+r)(\200\0012!^([a-zA-Z0-9_\\-@\\.:+]{1,128}" +
      "|\\*)$\320\001\000R\ttenant_id\022N\n\010metadata\030\002 \001(\0132(." +
      "base.v1.RelationshipReadRequestMetadataB" +
      "\010\372B\005\212\001\002\020\001R\010metadata\0226\n\006filter\030\003 \001(\0132\024.ba" +
      "se.v1.TupleFilterB\010\372B\005\212\001\002\020\001R\006filter\022)\n\tp" +
      "age_size\030\004 \001(\rB\013\372B\010*\006\030d(\001@\001R\tpage_size\0224" +
      "\n\020continuous_token\030\005 \001(\tB\010\372B\005r\003\320\001\001R\020cont" +
      "inuous_token\"\255\001\n\037RelationshipReadRequest" +
      "Metadata\022\211\001\n\nsnap_token\030\001 \001(\tBi\222Af2dThe " +
      "snap token to avoid stale cache, see mor" +
      "e details on [Snap Tokens](../../operati" +
      "ons/snap-tokens)R\nsnap_token\"n\n\030Relation" +
      "shipReadResponse\022&\n\006tuples\030\001 \003(\0132\016.base." +
      "v1.TupleR\006tuples\022*\n\020continuous_token\030\002 \001" +
      "(\tR\020continuous_token\"\255\004\n\024AttributeReadRe" +
      "quest\022\252\002\n\ttenant_id\030\001 \001(\tB\213\002\222A\331\0012\326\001Ident" +
      "ifier of the tenant, if you are not usin" +
      "g multi-tenancy (have only one tenant) u" +
      "se pre-inserted tenant <code>t1</code> f" +
      "or this field. Required, and must match " +
      "the pattern \\\342\200\234[a-zA-Z0-9-,]+\\\342\200\234, max " +
      "64 bytes.\372B+r)(\200\0012!^([a-zA-Z0-9_\\-@\\.:+]" +
      "{1,128}|\\*)$\320\001\000R\ttenant_id\022K\n\010metadata\030\002" +
      " \001(\0132%.base.v1.AttributeReadRequestMetad" +
      "ataB\010\372B\005\212\001\002\020\001R\010metadata\022:\n\006filter\030\003 \001(\0132" +
      "\030.base.v1.AttributeFilterB\010\372B\005\212\001\002\020\001R\006fil" +
      "ter\022)\n\tpage_size\030\004 \001(\rB\013\372B\010*\006\030d(\001@\001R\tpag" +
      "e_size\0224\n\020continuous_token\030\005 \001(\tB\010\372B\005r\003\320" +
      "\001\001R\020continuous_token\"\252\001\n\034AttributeReadRe" +
      "questMetadata\022\211\001\n\nsnap_token\030\001 \001(\tBi\222Af2" +
      "dThe snap token to avoid stale cache, se" +
      "e more details on [Snap Tokens](../../op" +
      "erations/snap-tokens)R\nsnap_token\"w\n\025Att" +
      "ributeReadResponse\0222\n\nattributes\030\001 \003(\0132\022" +
      ".base.v1.AttributeR\nattributes\022*\n\020contin" +
      "uous_token\030\002 \001(\tR\020continuous_token\"\324\003\n\021D" +
      "ataDeleteRequest\022\252\002\n\ttenant_id\030\001 \001(\tB\213\002\222" +
      "A\331\0012\326\001Identifier of the tenant, if you a" +
      "re not using multi-tenancy (have only on" +
      "e tenant) use pre-inserted tenant <code>" +
      "t1</code> for this field. Required, and " +
      "must match the pattern \\\342\200\234[a-zA-Z0-9-,]" +
      "+\\\342\200\234, max 64 bytes.\372B+r)(\200\0012!^([a-zA-Z0" +
      "-9_\\-@\\.:+]{1,128}|\\*)$\320\001\000R\ttenant_id\022B\n" +
      "\014tuple_filter\030\002 \001(\0132\024.base.v1.TupleFilte" +
      "rB\010\372B\005\212\001\002\020\001R\014tuple_filter\022N\n\020attribute_f" +
      "ilter\030\003 \001(\0132\030.base.v1.AttributeFilterB\010\372" +
      "B\005\212\001\002\020\001R\020attribute_filter\"\240\001\n\022DataDelete" +
      "Response\022\211\001\n\nsnap_token\030\001 \001(\tBi\222Af2dThe " +
      "snap token to avoid stale cache, see mor" +
      "e details on [Snap Tokens](../../operati" +
      "ons/snap-tokens)R\nsnap_token\"\366\002\n\031Relatio" +
      "nshipDeleteRequest\022\252\002\n\ttenant_id\030\001 \001(\tB\213" +
      "\002\222A\331\0012\326\001Identifier of the tenant, if you" +
      " are not using multi-tenancy (have only " +
      "one tenant) use pre-inserted tenant <cod" +
      "e>t1</code> for this field. Required, an" +
      "d must match the pattern \\\342\200\234[a-zA-Z0-9-" +
      ",]+\\\342\200\234, max 64 bytes.\372B+r)(\200\0012!^([a-zA-" +
      "Z0-9_\\-@\\.:+]{1,128}|\\*)$\320\001\000R\ttenant_id\022" +
      ",\n\006filter\030\002 \001(\0132\024.base.v1.TupleFilterR\006f" +
      "ilter\"\250\001\n\032RelationshipDeleteResponse\022\211\001\n" +
      "\nsnap_token\030\001 \001(\tBi\222Af2dThe snap token t" +
      "o avoid stale cache, see more details on" +
      " [Snap Tokens](../../operations/snap-tok" +
      "ens)R\nsnap_token\"\331\003\n\020BundleRunRequest\022\252\002" +
      "\n\ttenant_id\030\001 \001(\tB\213\002\222A\331\0012\326\001Identifier of" +
      " the tenant, if you are not using multi-" +
      "tenancy (have only one tenant) use pre-i" +
      "nserted tenant <code>t1</code> for this " +
      "field. Required, and must match the patt" +
      "ern \\\342\200\234[a-zA-Z0-9-,]+\\\342\200\234, max 64 bytes" +
      ".\372B+r)(\200\0012!^([a-zA-Z0-9_\\-@\\.:+]{1,128}|" +
      "\\*)$\320\001\000R\ttenant_id\022\022\n\004name\030\002 \001(\tR\004name\022F" +
      "\n\targuments\030\003 \003(\0132(.base.v1.BundleRunReq" +
      "uest.ArgumentsEntryR\targuments\032<\n\016Argume" +
      "ntsEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(" +
      "\tR\005value:\0028\001\"\237\001\n\021BundleRunResponse\022\211\001\n\ns" +
      "nap_token\030\001 \001(\tBi\222Af2dThe snap token to " +
      "avoid stale cache, see more details on [" +
      "Snap Tokens](../../operations/snap-token" +
      "s)R\nsnap_token\"\360\002\n\022BundleWriteRequest\022\252\002" +
      "\n\ttenant_id\030\001 \001(\tB\213\002\222A\331\0012\326\001Identifier of" +
      " the tenant, if you are not using multi-" +
      "tenancy (have only one tenant) use pre-i" +
      "nserted tenant <code>t1</code> for this " +
      "field. Required, and must match the patt" +
      "ern \\\342\200\234[a-zA-Z0-9-,]+\\\342\200\234, max 64 bytes" +
      ".\372B+r)(\200\0012!^([a-zA-Z0-9_\\-@\\.:+]{1,128}|" +
      "\\*)$\320\001\000R\ttenant_id\022-\n\007bundles\030\002 \003(\0132\023.ba" +
      "se.v1.DataBundleR\007bundles\"+\n\023BundleWrite" +
      "Response\022\024\n\005names\030\001 \003(\tR\005names\"\324\002\n\021Bundl" +
      "eReadRequest\022\252\002\n\ttenant_id\030\001 \001(\tB\213\002\222A\331\0012" +
      "\326\001Identifier of the tenant, if you are n" +
      "ot using multi-tenancy (have only one te" +
      "nant) use pre-inserted tenant <code>t1</" +
      "code> for this field. Required, and must" +
      " match the pattern \\\342\200\234[a-zA-Z0-9-,]+\\\342\200" +
      "\234, max 64 bytes.\372B+r)(\200\0012!^([a-zA-Z0-9_\\" +
      "-@\\.:+]{1,128}|\\*)$\320\001\000R\ttenant_id\022\022\n\004nam" +
      "e\030\002 \001(\tR\004name\"A\n\022BundleReadResponse\022+\n\006b" +
      "undle\030\001 \001(\0132\023.base.v1.DataBundleR\006bundle" +
      "\"\326\002\n\023BundleDeleteRequest\022\252\002\n\ttenant_id\030\001" +
      " \001(\tB\213\002\222A\331\0012\326\001Identifier of the tenant, " +
      "if you are not using multi-tenancy (have" +
      " only one tenant) use pre-inserted tenan" +
      "t <code>t1</code> for this field. Requir" +
      "ed, and must match the pattern \\\342\200\234[a-zA" +
      "-Z0-9-,]+\\\342\200\234, max 64 bytes.\372B+r)(\200\0012!^(" +
      "[a-zA-Z0-9_\\-@\\.:+]{1,128}|\\*)$\320\001\000R\ttena" +
      "nt_id\022\022\n\004name\030\002 \001(\tR\004name\"*\n\024BundleDelet" +
      "eResponse\022\022\n\004name\030\001 \001(\tR\004name\"a\n\023TenantC" +
      "reateRequest\022*\n\002id\030\001 \001(\tB\032\372B\027r\025(@2\016[a-zA" +
      "-Z0-9-,]+\320\001\000R\002id\022\036\n\004name\030\002 \001(\tB\n\372B\007r\005(@\320" +
      "\001\000R\004name\"?\n\024TenantCreateResponse\022\'\n\006tena" +
      "nt\030\001 \001(\0132\017.base.v1.TenantR\006tenant\"/\n\023Ten" +
      "antDeleteRequest\022\030\n\002id\030\001 \001(\tB\010\372B\005r\003\320\001\000R\002" +
      "id\"?\n\024TenantDeleteResponse\022\'\n\006tenant\030\001 \001" +
      "(\0132\017.base.v1.TenantR\006tenant\"t\n\021TenantLis" +
      "tRequest\022)\n\tpage_size\030\001 \001(\rB\013\372B\010*\006\030d(\001@\001" +
      "R\tpage_size\0224\n\020continuous_token\030\002 \001(\tB\010\372" +
      "B\005r\003\320\001\001R\020continuous_token\"k\n\022TenantListR" +
      "esponse\022)\n\007tenants\030\001 \003(\0132\017.base.v1.Tenan" +
      "tR\007tenants\022*\n\020continuous_token\030\002 \001(\tR\020co" +
      "ntinuous_token2\300I\n\nPermission\022\375\r\n\005Check\022",
      "\037.base.v1.PermissionCheckRequest\032 .base." +
      "v1.PermissionCheckResponse\"\260\r\222A\370\014\n\nPermi" +
      "ssion\022\tcheck api*\021permissions.checkj\313\014\n\r" +
      "x-codeSamples\022\271\0142\266\014\n\325\004*\322\004\n\r\n\005label\022\004\032\002go" +
      "\n\014\n\004lang\022\004\032\002go\n\262\004\n\006source\022\247\004\032\244\004cr, err :" +
      "= client.Permission.Check(context.Backgr" +
      "ound(), &v1.PermissionCheckRequest {\n   " +
      " TenantId: \"t1\",\n    Metadata: &v1.Permi" +
      "ssionCheckRequestMetadata {\n        Snap" +
      "Token: \"\",\n        SchemaVersion: \"\",\n  " +
      "      Depth: 20,\n    },\n    Entity: &v1." +
      "Entity {\n        Type: \"repository\",\n   " +
      "     Id: \"1\",\n    },\n    Permission: \"ed" +
      "it\",\n    Subject: &v1.Subject {\n        " +
      "Type: \"user\",\n        Id: \"1\",\n    },\n\n " +
      "   if (cr.can === PermissionCheckRespons" +
      "e_Result.RESULT_ALLOWED) {\n        // RE" +
      "SULT_ALLOWED\n    } else {\n        // RES" +
      "ULT_DENIED\n    }\n})\n\233\004*\230\004\n\017\n\005label\022\006\032\004no" +
      "de\n\024\n\004lang\022\014\032\njavascript\n\356\003\n\006source\022\343\003\032\340" +
      "\003client.permission.check({\n    tenantId:" +
      " \"t1\", \n    metadata: {\n        snapToke" +
      "n: \"\",\n        schemaVersion: \"\",\n      " +
      "  depth: 20\n    },\n    entity: {\n       " +
      " type: \"repository\",\n        id: \"1\"\n   " +
      " },\n    permission: \"edit\",\n    subject:" +
      " {\n        type: \"user\",\n        id: \"1\"" +
      "\n    }\n}).then((response) => {\n    if (r" +
      "esponse.can === PermissionCheckResponse_" +
      "Result.RESULT_ALLOWED) {\n        console" +
      ".log(\"RESULT_ALLOWED\")\n    } else {\n    " +
      "    console.log(\"RESULT_DENIED\")\n    }\n}" +
      ")\n\275\003*\272\003\n\017\n\005label\022\006\032\004cURL\n\016\n\004lang\022\006\032\004curl" +
      "\n\226\003\n\006source\022\213\003\032\210\003curl --location --reque" +
      "st POST \'localhost:3476/v1/tenants/{tena" +
      "nt_id}/permissions/check\' \\\n--header \'Co" +
      "ntent-Type: application/json\' \\\n--data-r" +
      "aw \'{\n  \"metadata\":{\n    \"snap_token\": \"" +
      "\",\n    \"schema_version\": \"\",\n    \"depth\"" +
      ": 20\n  },\n  \"entity\": {\n    \"type\": \"rep" +
      "ository\",\n    \"id\": \"1\"\n  },\n  \"permissi" +
      "on\": \"edit\",\n  \"subject\": {\n    \"type\": " +
      "\"user\",\n    \"id\": \"1\",\n    \"relation\": \"" +
      "\"\n  },\n}\'\202\323\344\223\002.\")/v1/tenants/{tenant_id}" +
      "/permissions/check:\001*\022\260\t\n\006Expand\022 .base." +
      "v1.PermissionExpandRequest\032!.base.v1.Per" +
      "missionExpandResponse\"\340\010\222A\247\010\n\nPermission" +
      "\022\nexpand api*\022permissions.expandj\370\007\n\rx-c" +
      "odeSamples\022\346\0072\343\007\n\356\002*\353\002\n\r\n\005label\022\004\032\002go\n\014\n" +
      "\004lang\022\004\032\002go\n\313\002\n\006source\022\300\002\032\275\002cr, err: = c" +
      "lient.Permission.Expand(context.Backgrou" +
      "nd(), &v1.PermissionExpandRequest{\n    T" +
      "enantId: \"t1\",\n    Metadata: &v1.Permiss" +
      "ionExpandRequestMetadata{\n        SnapTo" +
      "ken: \"\",\n        SchemaVersion: \"\",\n    " +
      "},\n    Entity: &v1.Entity{\n        Type:" +
      " \"repository\",\n        Id: \"1\",\n    },\n " +
      "   Permission: \"push\",\n})\n\211\002*\206\002\n\017\n\005label" +
      "\022\006\032\004node\n\024\n\004lang\022\014\032\njavascript\n\334\001\n\006sourc" +
      "e\022\321\001\032\316\001client.permission.expand({\n  tena" +
      "ntId: \"t1\",\n  metadata: {\n        snapTo" +
      "ken: \"\",\n        schemaVersion: \"\"\n    }" +
      ",\n    entity: {\n        type: \"repositor" +
      "y\",\n        id: \"1\"\n    },\n    permissio" +
      "n: \"push\",\n})\n\343\002*\340\002\n\017\n\005label\022\006\032\004cURL\n\016\n\004" +
      "lang\022\006\032\004curl\n\274\002\n\006source\022\261\002\032\256\002curl --loca" +
      "tion --request POST \'localhost:3476/v1/t" +
      "enants/{tenant_id}/permissions/expand\' \\" +
      "\n--header \'Content-Type: application/jso" +
      "n\' \\\n--data-raw \'{\n  \"metadata\": {\n    \"" +
      "schema_version\": \"\",\n    \"snap_token\": \"" +
      "\"\n  },\n  \"entity\": {\n    \"type\": \"reposi" +
      "tory\",\n    \"id\": \"1\"\n  },\n  \"permission\"" +
      ": \"push\"\n}\'\202\323\344\223\002/\"*/v1/tenants/{tenant_i" +
      "d}/permissions/expand:\001*\022\260\013\n\014LookupEntit" +
      "y\022&.base.v1.PermissionLookupEntityReques" +
      "t\032\'.base.v1.PermissionLookupEntityRespon" +
      "se\"\316\n\222A\216\n\n\nPermission\022\rlookup entity*\030pe" +
      "rmissions.lookupEntityj\326\t\n\rx-codeSamples" +
      "\022\304\t2\301\t\n\256\003*\253\003\n\r\n\005label\022\004\032\002go\n\014\n\004lang\022\004\032\002g" +
      "o\n\213\003\n\006source\022\200\003\032\375\002cr, err: = client.Perm" +
      "ission.LookupEntity(context.Background()" +
      ", & v1.PermissionLookupEntityRequest {\n " +
      "   TenantId: \"t1\",\n    Metadata: & v1.Pe" +
      "rmissionLookupEntityRequestMetadata {\n  " +
      "      SnapToken: \"\"\n        SchemaVersio" +
      "n: \"\"\n        Depth: 20,\n    },\n    Enti" +
      "tyType: \"document\",\n    Permission: \"edi" +
      "t\",\n    Subject: & v1.Subject {\n        " +
      "Type: \"user\",\n        Id: \"1\",\n    }\n})\n" +
      "\372\002*\367\002\n\017\n\005label\022\006\032\004node\n\024\n\004lang\022\014\032\njavasc" +
      "ript\n\315\002\n\006source\022\302\002\032\277\002client.permission.l" +
      "ookupEntity({\n    tenantId: \"t1\",\n    me" +
      "tadata: {\n        snapToken: \"\",\n       " +
      " schemaVersion: \"\",\n        depth: 20\n  " +
      "  },\n    entity_type: \"document\",\n    pe" +
      "rmission: \"edit\",\n    subject: {\n       " +
      " type: \"user\",\n        id: \"1\"\n    }\n})." +
      "then((response) => {\n    console.log(res" +
      "ponse.entity_ids)\n})\n\220\003*\215\003\n\017\n\005label\022\006\032\004c" +
      "URL\n\016\n\004lang\022\006\032\004curl\n\351\002\n\006source\022\336\002\032\333\002curl" +
      " --location --request POST \'localhost:34" +
      "76/v1/tenants/{tenant_id}/permissions/lo" +
      "okup-entity\' \\\n--header \'Content-Type: a" +
      "pplication/json\' \\\n--data-raw \'{\n  \"meta" +
      "data\":{\n    \"snap_token\": \"\",\n    \"schem" +
      "a_version\": \"\",\n    \"depth\": 20\n  },\n  \"" +
      "entity_type\": \"document\",\n  \"permission\"" +
      ": \"edit\",\n  \"subject\": {\n    \"type\":\"use" +
      "r\",\n    \"id\":\"1\"\n  }\n}\'\202\323\344\223\0026\"1/v1/tenan" +
      "ts/{tenant_id}/permissions/lookup-entity" +
      ":\001*\022\361\014\n\022LookupEntityStream\022&.base.v1.Per" +
      "missionLookupEntityRequest\032-.base.v1.Per" +
      "missionLookupEntityStreamResponse\"\201\014\222A\272\013" +
      "\n\nPermission\022\024lookup entity stream*\036perm" +
      "issions.lookupEntityStreamj\365\n\n\rx-codeSam" +
      "ples\022\343\n2\340\n\n\241\004*\236\004\n\r\n\005label\022\004\032\002go\n\014\n\004lang\022" +
      "\004\032\002go\n\376\003\n\006source\022\363\003\032\360\003str, err: = client" +
      ".Permission.LookupEntityStream(context.B" +
      "ackground(), &v1.PermissionLookupEntityR" +
      "equest {\n    Metadata: &v1.PermissionLoo" +
      "kupEntityRequestMetadata {\n        SnapT" +
      "oken: \"\", \n        SchemaVersion: \"\" \n  " +
      "      Depth: 50,\n    },\n    EntityType: " +
      "\"document\",\n    Permission: \"view\",\n    " +
      "Subject: &v1.Subject {\n        Type: \"us" +
      "er\",\n        Id: \"1\",\n    },\n})\n\n// hand" +
      "le stream response\nfor {\n    res, err: =" +
      " str.Recv()\n\n    if err == io.EOF {\n    " +
      "    break\n    }\n\n    // res.EntityId\n}\n\271" +
      "\006*\266\006\n\017\n\005label\022\006\032\004node\n\024\n\004lang\022\014\032\njavascr" +
      "ipt\n\214\006\n\006source\022\201\006\032\376\005const permify = requ" +
      "ire(\"@permify/permify-node\");\nconst {Per" +
      "missionLookupEntityStreamResponse} = req" +
      "uire(\"@permify/permify-node/dist/src/grp" +
      "c/generated/base/v1/service\");\n\nfunction" +
      " main() {\n    const client = new permify" +
      ".grpc.newClient({\n        endpoint: \"loc" +
      "alhost:3478\",\n    })\n\n    let res = clie" +
      "nt.permission.lookupEntityStream({\n     " +
      "   metadata: {\n            snapToken: \"\"" +
      ",\n            schemaVersion: \"\",\n       " +
      "     depth: 20\n        },\n        entity" +
      "Type: \"document\",\n        permission: \"v" +
      "iew\",\n        subject: {\n            typ" +
      "e: \"user\",\n            id: \"1\"\n        }" +
      "\n    })\n\n    handle(res)\n}\n\nasync functi" +
      "on handle(res: AsyncIterable<PermissionL" +
      "ookupEntityStreamResponse>) {\n    for aw" +
      "ait (const response of res) {\n        //" +
      " response.entityId\n    }\n}\202\323\344\223\002=\"8/v1/te" +
      "nants/{tenant_id}/permissions/lookup-ent" +
      "ity-stream:\001*0\001\022\332\014\n\rLookupSubject\022\'.base" +
      ".v1.PermissionLookupSubjectRequest\032(.bas" +
      "e.v1.PermissionLookupSubjectResponse\"\365\013\222" +
      "A\264\013\n\nPermission\022\016lookup-subject*\031permiss" +
      "ions.lookupSubjectj\372\n\n\rx-codeSamples\022\350\n2" +
      "\345\n\n\364\003*\361\003\n\r\n\005label\022\004\032\002go\n\014\n\004lang\022\004\032\002go\n\321\003" +
      "\n\006source\022\306\003\032\303\003cr, err: = client.Permissi" +
      "on.LookupSubject(context.Background(), &" +
      "v1.PermissionLookupSubjectRequest {\n    " +
      "TenantId: \"t1\",\n    Metadata: &v1.Permis" +
      "sionLookupSubjectRequestMetadata{\n      " +
      "  SnapToken: \"\",\n        SchemaVersion: " +
      "\"\",\n        Depth: 20,\n    },\n    Entity" +
      ": &v1.Entity{\n        Type: \"document\",\n" +
      "        Id: \"1\",\n    },\n    Permission: " +
      "\"edit\",\n    SubjectReference: &v1.Relati" +
      "onReference{\n        Type: \"user\",\n     " +
      "   Relation: \"\",\n    }\n})\n\256\003*\253\003\n\017\n\005label" +
      "\022\006\032\004node\n\024\n\004lang\022\014\032\njavascript\n\201\003\n\006sourc" +
      "e\022\366\002\032\363\002client.permission.lookupSubject({" +
      "\n    tenantId: \"t1\",\n    metadata: {\n   " +
      "     snapToken: \"\",\n        schemaVersio" +
      "n: \"\"\n        depth: 20,\n    },\n    Enti" +
      "ty: {\n        Type: \"document\",\n        " +
      "Id: \"1\",\n    },\n    permission: \"edit\",\n" +
      "    subject_reference: {\n        type: \"" +
      "user\",\n        relation: \"\"\n    }\n}).the" +
      "n((response) => {\n    console.log(respon" +
      "se.subject_ids)\n})\n\272\003*\267\003\n\017\n\005label\022\006\032\004cUR" +
      "L\n\016\n\004lang\022\006\032\004curl\n\223\003\n\006source\022\210\003\032\205\003curl -" +
      "-location --request POST \'localhost:3476" +
      "/v1/tenants/{tenant_id}/permissions/look" +
      "up-subject\' \\\n--header \'Content-Type: ap" +
      "plication/json\' \\\n--data-raw \'{\n  \"metad" +
      "ata\":{\n    \"snap_token\": \"\",\n    \"schema" +
      "_version\": \"\"\n    \"depth\": 20,\n  },\n  \"e" +
      "ntity\": {\n    type: \"document\",\n    id: " +
      "\"1\'\n  },\n  \"permission\": \"edit\",\n  \"subj" +
      "ect_reference\": {\n    \"type\": \"user\",\n  " +
      "  \"relation\": \"\"\n  }\n}\'\202\323\344\223\0027\"2/v1/tenan" +
      "ts/{tenant_id}/permissions/lookup-subjec" +
      "t:\001*\022\372\014\n\021SubjectPermission\022+.base.v1.Per" +
      "missionSubjectPermissionRequest\032,.base.v" +
      "1.PermissionSubjectPermissionResponse\"\211\014" +
      "\222A\304\013\n\nPermission\022\022subject permission*\035pe" +
      "rmissions.subjectPermissionj\202\013\n\rx-codeSa" +
      "mples\022\360\n2\355\n\n\365\003*\362\003\n\r\n\005label\022\004\032\002go\n\014\n\004lang" +
      "\022\004\032\002go\n\322\003\n\006source\022\307\003\032\304\003cr, err: = client" +
      ".Permission.SubjectPermission(context.Ba" +
      "ckground(), &v1.PermissionSubjectPermiss" +
      "ionRequest {\n    TenantId: \"t1\",\n    Met" +
      "adata: &v1.PermissionSubjectPermissionRe" +
      "questMetadata {\n        SnapToken: \"\",\n " +
      "       SchemaVersion: \"\",\n        OnlyPe" +
      "rmission: false,\n        Depth: 20,\n    " +
      "},\n    Entity: &v1.Entity {\n        Type" +
      ": \"repository\",\n        Id: \"1\",\n    },\n" +
      "    Subject: &v1.Subject {\n        Type:" +
      " \"user\",\n        Id: \"1\",\n    },\n})\n\240\003*\235" +
      "\003\n\017\n\005label\022\006\032\004node\n\024\n\004lang\022\014\032\njavascript" +
      "\n\363\002\n\006source\022\350\002\032\345\002client.permission.subje" +
      "ctPermission({\n    tenantId: \"t1\", \n    " +
      "metadata: {\n        snapToken: \"\",\n     " +
      "   schemaVersion: \"\",\n        onlyPermis" +
      "sion: true,\n        depth: 20\n    },\n   " +
      " entity: {\n        type: \"repository\",\n " +
      "       id: \"1\"\n    },\n    subject: {\n   " +
      "     type: \"user\",\n        id: \"1\"\n    }" +
      "\n}).then((response) => {\n    console.log" +
      "(response);\n})\n\317\003*\314\003\n\017\n\005label\022\006\032\004cURL\n\016\n" +
      "\004lang\022\006\032\004curl\n\250\003\n\006source\022\235\003\032\232\003curl --loc" +
      "ation --request POST \'localhost:3476/v1/" +
      "tenants/{tenant_id}/permissions/subject-" +
      "permission\' \\\n--header \'Content-Type: ap" +
      "plication/json\' \\\n--data-raw \'{\n  \"metad" +
      "ata\":{\n    \"snap_token\": \"\",\n    \"schema" +
      "_version\": \"\",\n    \"only_permission\": tr" +
      "ue,\n    \"depth\": 20\n  },\n  \"entity\": {\n " +
      "   \"type\": \"repository\",\n    \"id\": \"1\"\n " +
      " },\n  \"subject\": {\n    \"type\": \"user\",\n " +
      "   \"id\": \"1\",\n    \"relation\": \"\"\n  },\n}\'" +
      "\202\323\344\223\002;\"6/v1/tenants/{tenant_id}/permissi" +
      "ons/subject-permission:\001*2\203\010\n\005Watch\022\371\007\n\005" +
      "Watch\022\025.base.v1.WatchRequest\032\026.base.v1.W" +
      "atchResponse\"\276\007\222A\222\007\n\005Watch\022\rwatch change" +
      "s*\013watch.watchj\354\006\n\rx-codeSamples\022\332\0062\327\006\n\236" +
      "\002*\233\002\n\r\n\005label\022\004\032\002go\n\014\n\004lang\022\004\032\002go\n\373\001\n\006so" +
      "urce\022\360\001\032\355\001cr, err := client.Watch.Watch(" +
      "context.Background(), &v1.WatchRequest{\n" +
      "    TenantId:  \"t1\",\n    SnapToken: \"\",\n" +
      "})\n// handle stream response\nfor {\n    r" +
      "es, err := cr.Recv()\n\n    if err == io.E" +
      "OF {\n        break\n    }\n\n    // res.Cha" +
      "nges\n}\n\n\263\004*\260\004\n\017\n\005label\022\006\032\004node\n\024\n\004lang\022\014" +
      "\032\njavascript\n\206\004\n\006source\022\373\003\032\370\003const permi" +
      "fy = require(\"@permify/permify-node\");\nc" +
      "onst {WatchResponse} = require(\"@permify" +
      "/permify-node/dist/src/grpc/generated/ba" +
      "se/v1/service\");\n\nfunction main() {\n    " +
      "const client = new permify.grpc.newClien" +
      "t({\n        endpoint: \"localhost:3478\",\n" +
      "    })\n\n    let res = client.watch.watch" +
      "({\n          tenantId: \"t1\",\n        sna" +
      "pToken: \"\"\n    })\n\n    handle(res)\n}\n\nas" +
      "ync function handle(res: AsyncIterable<W" +
      "atchResponse>) {\n    for await (const re" +
      "sponse of res) {\n        // response.cha" +
      "nges\n    }\n}\n\202\323\344\223\002\"\"\035/v1/tenants/{tenant" +
      "_id}/watch:\001*0\0012\341\037\n\006Schema\022\202\021\n\005Write\022\033.b" +
      "ase.v1.SchemaWriteRequest\032\034.base.v1.Sche" +
      "maWriteResponse\"\275\020\222A\211\020\n\006Schema\022\014write sc" +
      "hema*\rschemas.writej\341\017\n\rx-codeSamples\022\317\017" +
      "2\314\017\n\212\005*\207\005\n\r\n\005label\022\004\032\002go\n\014\n\004lang\022\004\032\002go\n\347" +
      "\004\n\006source\022\334\004\032\331\004sr, err: = client.Schema." +
      "Write(context.Background(), &v1.SchemaWr" +
      "iteRequest {\n    TenantId: \"t1\",\n    Sch" +
      "ema: `\n    \"entity user {}\\n\\n    entity" +
      " organization {\\n\\n        relation admi" +
      "n @user\\n        relation member @user\\n" +
      "\\n        action create_repository = (ad" +
      "min or member)\\n        action delete = " +
      "admin\\n    }\\n\\n    entity repository {\\" +
      "n\\n        relation owner @user\\n       " +
      " relation parent @organization\\n\\n      " +
      "  action push = owner\\n        action re" +
      "ad = (owner and (parent.admin and parent" +
      ".member))\\n        action delete = (pare" +
      "nt.member and (parent.admin or owner))\\n" +
      "    }\"\n    `,\n})\n\212\005*\207\005\n\017\n\005label\022\006\032\004node\n" +
      "\024\n\004lang\022\014\032\njavascript\n\335\004\n\006source\022\322\004\032\317\004cl" +
      "ient.schema.write({\n    tenantId: \"t1\",\n" +
      "    schema: `\n    \"entity user {}\\n\\n   " +
      " entity organization {\\n\\n        relati" +
      "on admin @user\\n        relation member " +
      "@user\\n\\n        action create_repositor" +
      "y = (admin or member)\\n        action de" +
      "lete = admin\\n    }\\n\\n    entity reposi" +
      "tory {\\n\\n        relation owner @user\\n" +
      "        relation parent @organization\\n\\" +
      "n        action push = owner\\n        ac" +
      "tion read = (owner and (parent.admin and" +
      " parent.member))\\n        action delete " +
      "= (parent.member and (parent.admin or ow" +
      "ner))\\n    }\"\n    `\n}).then((response) =" +
      "> {\n    // handle response\n})\n\257\005*\254\005\n\017\n\005l" +
      "abel\022\006\032\004cURL\n\016\n\004lang\022\006\032\004curl\n\210\005\n\006source\022" +
      "\375\004\032\372\004curl --location --request POST \'loc" +
      "alhost:3476/v1/tenants/{tenant_id}/schem" +
      "as/write\' \\\n--header \'Content-Type: appl" +
      "ication/json\' \\\n--data-raw \'{\n    \"schem" +
      "a\": \"entity user {}\\n\\n    entity organi" +
      "zation {\\n\\n        relation admin @user" +
      "\\n        relation member @user\\n\\n     " +
      "   action create_repository = (admin or " +
      "member)\\n        action delete = admin\\n" +
      "    }\\n\\n    entity repository {\\n\\n    " +
      "    relation owner @user\\n        relati" +
      "on parent @organization\\n\\n        actio" +
      "n push = owner\\n        action read = (o" +
      "wner and (parent.admin and parent.member" +
      "))\\n        action delete = (parent.memb" +
      "er and (parent.admin or owner))\\n }\"\n}\'\202" +
      "\323\344\223\002*\"%/v1/tenants/{tenant_id}/schemas/w" +
      "rite:\001*\022\337\001\n\014PartialWrite\022\".base.v1.Schem" +
      "aPartialWriteRequest\032#.base.v1.SchemaPar" +
      "tialWriteResponse\"\205\001\222AJ\n\006Schema\022)partial" +
      "ly update your authorization model*\025sche" +
      "mas.partial-write\202\323\344\223\00222-/v1/tenants/{te" +
      "nant_id}/schemas/partial-write:\001*\022\365\006\n\004Re" +
      "ad\022\032.base.v1.SchemaReadRequest\032\033.base.v1" +
      ".SchemaReadResponse\"\263\006\222A\200\006\n\006Schema\022\013read" +
      " schema*\014schemas.readj\332\005\n\rx-codeSamples\022" +
      "\310\0052\305\005\n\366\001*\363\001\n\r\n\005label\022\004\032\002go\n\014\n\004lang\022\004\032\002go" +
      "\n\323\001\n\006source\022\310\001\032\305\001sr, err: = client.Schem" +
      "a.Read(context.Background(), &v1.SchemaR" +
      "eadRequest {\n    TenantId: \"t1\",\n    Met" +
      "adata: &v1.SchemaReadRequestMetadata{\n  " +
      "      SchemaVersion: \"cnbe6se5fmal18gpc6" +
      "6g\",\n    },\n})\n\266\001*\263\001\n\017\n\005label\022\006\032\004node\n\024\n" +
      "\004lang\022\014\032\njavascript\n\211\001\n\006source\022\177\032}let re" +
      "s = client.schema.read({\n    tenantId: \"" +
      "t1\",\n    metadata: {\n    schemaVersion: " +
      "swResponse.schemaVersion,\n    },\n    })\n" +
      "\220\002*\215\002\n\017\n\005label\022\006\032\004cURL\n\016\n\004lang\022\006\032\004curl\n\351" +
      "\001\n\006source\022\336\001\032\333\001curl --location --request" +
      " POST \'localhost:3476/v1/tenants/{tenant" +
      "_id}/schemas/read\' \\\n--header \'Content-T" +
      "ype: application/json\' \\\n--data-raw \'{\n " +
      "   \"metadata\": {\n        \"schema_version" +
      "\": \"cnbe6se5fmal18gpc66g\"\n    }\n}\'\202\323\344\223\002)" +
      "\"$/v1/tenants/{tenant_id}/schemas/read:\001" +
      "*\022\367\005\n\004List\022\032.base.v1.SchemaListRequest\032\033" +
      ".base.v1.SchemaListResponse\"\265\005\222A\202\005\n\006Sche" +
      "ma\022\013list schema*\014schemas.listj\334\004\n\rx-code" +
      "Samples\022\312\0042\307\004\n\300\001*\275\001\n\r\n\005label\022\004\032\002go\n\014\n\004la" +
      "ng\022\004\032\002go\n\235\001\n\006source\022\222\001\032\217\001sr, err: = clie" +
      "nt.Schema.List(context.Background(), &v1" +
      ".SchemaListRequest {\n    TenantId: \"t1\"," +
      "\n    PageSize: \"10\",\n    ContinuousToken" +
      ": \"\",\n})\n\205\001*\202\001\n\017\n\005label\022\006\032\004node\n\024\n\004lang\022" +
      "\014\032\njavascript\nY\n\006source\022O\032Mlet res = cli" +
      "ent.schema.list({\n    tenantId: \"t1\",\n  " +
      "  continuousToken: \"\"\n})\n\371\001*\366\001\n\017\n\005label\022" +
      "\006\032\004cURL\n\016\n\004lang\022\006\032\004curl\n\322\001\n\006source\022\307\001\032\304\001" +
      "curl --location --request POST \'localhos" +
      "t:3476/v1/tenants/{tenant_id}/schemas/re" +
      "ad\' \\\n--header \'Content-Type: applicatio" +
      "n/json\' \\\n--data-raw \'{\n    \"page_size\":" +
      " \"10\",\n    \"continuous_token\": \"\"\n}\'\202\323\344\223" +
      "\002)\"$/v1/tenants/{tenant_id}/schemas/list" +
      ":\001*2\343C\n\004Data\022\215\025\n\005Write\022\031.base.v1.DataWri" +
      "teRequest\032\032.base.v1.DataWriteResponse\"\314\024" +
      "\222A\233\024\n\004Data\022\nwrite data*\ndata.writej\372\023\n\rx" +
      "-codeSamples\022\350\0232\345\023\n\273\007*\270\007\n\r\n\005label\022\004\032\002go\n" +
      "\014\n\004lang\022\004\032\002go\n\230\007\n\006source\022\215\007\032\212\007// Convert" +
      " the wrapped attribute value into Any pr" +
      "oto message\nvalue, err := anypb.New(&v1." +
      "BooleanValue{\n    Data: true,\n})\nif err " +
      "!= nil {\n    // Handle error\n}\n\ncr, err " +
      ":= client.Data.Write(context.Background(" +
      "), &v1.DataWriteRequest{\n    TenantId: \"" +
      "t1\",,\n    Metadata: &v1.DataWriteRequest" +
      "Metadata{\n        SchemaVersion: \"\",\n   " +
      " },\n    Tuples: []*v1.Attribute{\n       " +
      " {\n            Entity: &v1.Entity{\n     " +
      "           Type: \"document\",\n           " +
      "     Id:   \"1\",\n            },\n         " +
      "   Relation: \"editor\",\n            Subje" +
      "ct:  &v1.Subject{\n                Type: " +
      "\"user\",\n                Id:   \"1\",\n     " +
      "           Relation: \"\",\n            },\n" +
      "        },\n    },\n    Attributes: []*v1." +
      "Attribute{\n        {\n            Entity:" +
      " &v1.Entity{\n                Type: \"docu" +
      "ment\",\n                Id:   \"1\",\n      " +
      "      },\n            Attribute: \"is_priv" +
      "ate\",\n            Value:     value,\n    " +
      "    },\n    },\n})\n\200\006*\375\005\n\017\n\005label\022\006\032\004node\n" +
      "\024\n\004lang\022\014\032\njavascript\n\323\005\n\006source\022\310\005\032\305\005co" +
      "nst booleanValue = BooleanValue.fromJSON" +
      "({ data: true });\n\nconst value = Any.fro" +
      "mJSON({\n    typeUrl: \'type.googleapis.co" +
      "m/base.v1.BooleanValue\',\n    value: Bool" +
      "eanValue.encode(booleanValue).finish()\n}" +
      ");\n\nclient.data.write({\n    tenantId: \"t" +
      "1\",\n    metadata: {\n        schemaVersio" +
      "n: \"\"\n    },\n    tuples: [{\n        enti" +
      "ty: {\n            type: \"document\",\n    ",
      "        id: \"1\"\n        },\n        relat" +
      "ion: \"editor\",\n        subject: {\n      " +
      "      type: \"user\",\n            id: \"1\"\n" +
      "        }\n    }],\n    attributes: [{\n   " +
      "     entity: {\n            type: \"docume" +
      "nt\",\n            id: \"1\"\n        },\n    " +
      "    attribute: \"is_private\",\n        val" +
      "ue: value,\n    }]\n}).then((response) => " +
      "{\n    // handle response\n})\n\241\006*\236\006\n\017\n\005lab" +
      "el\022\006\032\004cURL\n\016\n\004lang\022\006\032\004curl\n\372\005\n\006source\022\357\005" +
      "\032\354\005curl --location --request POST \'local" +
      "host:3476/v1/tenants/{tenant_id}/data/wr" +
      "ite\' \\\n--header \'Content-Type: applicati" +
      "on/json\' \\\n--data-raw \'{\n{\n    \"metadata" +
      "\": {\n        \"schema_version\": \"\"\n    }," +
      "\n    \"tuples\": [\n      {\n        \"entity" +
      "\": {\n          \"type\": \"document\",\n     " +
      "     \"id\": \"1\"\n        },\n        \"relat" +
      "ion\": \"editor\",\n        \"subject\": {\n   " +
      "       \"type\": \"user\",\n          \"id\": \"" +
      "1\"\n        }\n    }\n    ],\n    \"attribute" +
      "s\": [\n        {\n            \"entity\": {\n" +
      "                \"type\": \"document\",\n    " +
      "            \"id\": \"1\"\n            },\n   " +
      "         \"attribute\": \"is_private\",\n    " +
      "        \"value\": {\n                \"@typ" +
      "e\": \"type.googleapis.com/base.v1.Boolean" +
      "Value\",\n                \"data\": true\n   " +
      "         }\n        }\n    ]\n}\n}\'\202\323\344\223\002\'\"\"/" +
      "v1/tenants/{tenant_id}/data/write:\001*\022\306\001\n" +
      "\022WriteRelationships\022!.base.v1.Relationsh" +
      "ipWriteRequest\032\".base.v1.RelationshipWri" +
      "teResponse\"i\222A0\n\004Data\022\023write relationshi" +
      "ps*\023relationships.write\202\323\344\223\0020\"+/v1/tenan" +
      "ts/{tenant_id}/relationships/write:\001*\022\265\014" +
      "\n\021ReadRelationships\022 .base.v1.Relationsh" +
      "ipReadRequest\032!.base.v1.RelationshipRead" +
      "Response\"\332\013\222A\234\013\n\004Data\022\022read relationship" +
      "s*\027data.relationships.readj\346\n\n\rx-codeSam" +
      "ples\022\324\n2\321\n\n\206\004*\203\004\n\r\n\005label\022\004\032\002go\n\014\n\004lang\022" +
      "\004\032\002go\n\343\003\n\006source\022\330\003\032\325\003rr, err: = client." +
      "Data.ReadRelationships(context.Backgroun" +
      "d(), & v1.Data.RelationshipReadRequest {" +
      "\n    TenantId: \"t1\",\n    Metadata: &v1.D" +
      "ata.RelationshipReadRequestMetadata {\n  " +
      "      SnapToken: \"\"\n    },\n    Filter: &" +
      "v1.TupleFilter {\n        Entity: &v1.Ent" +
      "ityFilter {\n        Type: \"organization\"" +
      ",\n        Ids: []string {\"1\"} ,\n    },\n " +
      "   Relation: \"member\",\n    Subject: &v1." +
      "SubjectFilter {\n        Type: \"\",\n      " +
      "  Id: []string {\"\"},\n        Relation: \"" +
      "\"\n    }}\n})\n\207\003*\204\003\n\017\n\005label\022\006\032\004node\n\024\n\004la" +
      "ng\022\014\032\njavascript\n\332\002\n\006source\022\317\002\032\314\002client." +
      "data.readRelationships({\n  tenantId: \"t1" +
      "\",\n  metadata: {\n     snap_token: \"\",\n  " +
      "},\n  filter: {\n    entity: {\n      type:" +
      " \"organization\",\n      ids: [\n        \"1" +
      "\"\n      ]\n    },\n    relation: \"member\"," +
      "\n    subject: {\n      type: \"\",\n      id" +
      "s: [],\n      relation: \"\"\n    }\n  }\n}).t" +
      "hen((response) => {\n    // handle respon" +
      "se\n})\n\273\003*\270\003\n\017\n\005label\022\006\032\004cURL\n\016\n\004lang\022\006\032\004" +
      "curl\n\224\003\n\006source\022\211\003\032\206\003curl --location --r" +
      "equest POST \'localhost:3476/v1/tenants/{" +
      "tenant_id}/data/relationships/read\' \\\n--" +
      "header \'Content-Type: application/json\' " +
      "\\\n--data-raw \'{\n  metadata: {\n     snap_" +
      "token: \"\",\n  },\n  filter: {\n    entity: " +
      "{\n      type: \"organization\",\n      ids:" +
      " [\n        \"1\"\n      ]\n    },\n    relati" +
      "on: \"member\",\n    subject: {\n      type:" +
      " \"\",\n      ids: [],\n      relation: \"\"\n " +
      "   }\n  }\n}\'\202\323\344\223\0024\"//v1/tenants/{tenant_i" +
      "d}/data/relationships/read:\001*\022\326\n\n\016ReadAt" +
      "tributes\022\035.base.v1.AttributeReadRequest\032" +
      "\036.base.v1.AttributeReadResponse\"\204\n\222A\311\t\n\004" +
      "Data\022\017read attributes*\024data.attributes.r" +
      "eadj\231\t\n\rx-codeSamples\022\207\t2\204\t\n\245\003*\242\003\n\r\n\005lab" +
      "el\022\004\032\002go\n\014\n\004lang\022\004\032\002go\n\202\003\n\006source\022\367\002\032\364\002r" +
      "r, err: = client.Data.ReadAttributes(con" +
      "text.Background(), & v1.Data.AttributeRe" +
      "adRequest {\n    TenantId: \"t1\",\n    Meta" +
      "data: &v1.Data.AttributeReadRequestMetad" +
      "ata {\n        SnapToken: \"\"\n    },\n    F" +
      "ilter: &v1.AttributeFilter {\n        Ent" +
      "ity: &v1.EntityFilter {\n        Type: \"o" +
      "rganization\",\n        Ids: []string {\"1\"" +
      "} ,\n    },\n    Attributes: []string {\"pr" +
      "ivate\"},\n})\n\320\002*\315\002\n\017\n\005label\022\006\032\004node\n\024\n\004la" +
      "ng\022\014\032\njavascript\n\243\002\n\006source\022\230\002\032\225\002client." +
      "data.readAttributes({\n  tenantId: \"t1\",\n" +
      "  metadata: {\n     snap_token: \"\",\n  },\n" +
      "  filter: {\n    entity: {\n      type: \"o" +
      "rganization\",\n      ids: [\n        \"1\"\n " +
      "     ]\n    },\n    attributes: [\n        " +
      "\"private\"\n    ],\n  }\n}).then((response) " +
      "=> {\n    // handle response\n})\n\206\003*\203\003\n\017\n\005" +
      "label\022\006\032\004cURL\n\016\n\004lang\022\006\032\004curl\n\337\002\n\006source" +
      "\022\324\002\032\321\002curl --location --request POST \'lo" +
      "calhost:3476/v1/tenants/{tenant_id}/data" +
      "/attributes/read\' \\\n--header \'Content-Ty" +
      "pe: application/json\' \\\n--data-raw \'{\n  " +
      "metadata: {\n     snap_token: \"\",\n  },\n  " +
      "filter: {\n    entity: {\n      type: \"org" +
      "anization\",\n      ids: [\n        \"1\"\n   " +
      "   ]\n    },\n    attributes: [\n        \"p" +
      "rivate\"\n      ],\n  }\n}\'\202\323\344\223\0021\",/v1/tenan" +
      "ts/{tenant_id}/data/attributes/read:\001*\022\361" +
      "\013\n\006Delete\022\032.base.v1.DataDeleteRequest\032\033." +
      "base.v1.DataDeleteResponse\"\255\013\222A\373\n\n\004Data\022" +
      "\013delete data*\013data.deletej\330\n\n\rx-codeSamp" +
      "les\022\306\n2\303\n\n\356\003*\353\003\n\r\n\005label\022\004\032\002go\n\014\n\004lang\022\004" +
      "\032\002go\n\313\003\n\006source\022\300\003\032\275\003rr, err: = client.D" +
      "ata.Delete(context.Background(), & v1.Da" +
      "taDeleteRequest {\n    TenantId: \"t1\",\n  " +
      "  Metadata: &v1.DataDeleteRequestMetadat" +
      "a {\n        SnapToken: \"\"\n    },\n    Tup" +
      "leFilter: &v1.TupleFilter {\n        Enti" +
      "ty: &v1.EntityFilter {\n        Type: \"or" +
      "ganization\",\n        Ids: []string {\"1\"}" +
      " ,\n    },\n    Relation: \"admin\",\n    Sub" +
      "ject: &v1.SubjectFilter {\n        Type: " +
      "\"user\",\n        Id: []string {\"1\"},\n    " +
      "    Relation: \"\"\n    }}\n})\n\227\003*\224\003\n\017\n\005labe" +
      "l\022\006\032\004node\n\024\n\004lang\022\014\032\njavascript\n\352\002\n\006sour" +
      "ce\022\337\002\032\334\002client.data.delete({\n  tenantId:" +
      " \"t1\",\n  metadata: {\n     snap_token: \"\"" +
      ",\n  },\n  tupleFilter: {\n    entity: {\n  " +
      "    type: \"organization\",\n      ids: [\n " +
      "       \"1\"\n      ]\n    },\n    relation: " +
      "\"admin\",\n    subject: {\n      type: \"use" +
      "r\",\n      ids: [\n        \"1\"\n      ],\n  " +
      "    relation: \"\"\n    }\n  }\n}).then((resp" +
      "onse) => {\n    // handle response\n})\n\265\003*" +
      "\262\003\n\017\n\005label\022\006\032\004cURL\n\016\n\004lang\022\006\032\004curl\n\216\003\n\006" +
      "source\022\203\003\032\200\003curl --location --request PO" +
      "ST \'localhost:3476/v1/tenants/{tenant_id" +
      "}/data/delete\' \\\n--header \'Content-Type:" +
      " application/json\' \\\n--data-raw \'{\n  \"tu" +
      "pleFilter\": {\n    \"entity\": {\n      \"typ" +
      "e\": \"organization\",\n      \"ids\": [\n     " +
      "   \"1\"\n      ]\n    },\n    \"relation\": \"a" +
      "dmin\",\n    \"subject\": {\n      \"type\": \"u" +
      "ser\",\n      \"ids\": [\n        \"1\"\n      ]" +
      ",\n      \"relation\": \"\"\n    }\n  },\n}\'\202\323\344\223" +
      "\002(\"#/v1/tenants/{tenant_id}/data/delete:" +
      "\001*\022\314\001\n\023DeleteRelationships\022\".base.v1.Rel" +
      "ationshipDeleteRequest\032#.base.v1.Relatio" +
      "nshipDeleteResponse\"l\222A2\n\004Data\022\024delete r" +
      "elationships*\024relationships.delete\202\323\344\223\0021" +
      "\",/v1/tenants/{tenant_id}/relationships/" +
      "delete:\001*\022\255\010\n\tRunBundle\022\031.base.v1.Bundle" +
      "RunRequest\032\032.base.v1.BundleRunResponse\"\350" +
      "\007\222A\262\007\n\004Data\022\nrun bundle*\nbundle.runj\221\007\n\r" +
      "x-codeSamples\022\377\0062\374\006\n\245\002*\242\002\n\r\n\005label\022\004\032\002go" +
      "\n\014\n\004lang\022\004\032\002go\n\202\002\n\006source\022\367\001\032\364\001rr, err: " +
      "= client.Data.RunBundle(context.Backgrou" +
      "nd(), &v1.BundleRunRequest{\n    TenantId" +
      ": \"t1\",\n    Name:     \"organization_crea" +
      "ted\",\n    Arguments: map[string]string{\n" +
      "        \"creatorID\":      \"564\",\n       " +
      " \"organizationID\": \"789\",\n    },\n})\n\212\002*\207" +
      "\002\n\017\n\005label\022\006\032\004node\n\024\n\004lang\022\014\032\njavascript" +
      "\n\335\001\n\006source\022\322\001\032\317\001client.data.runBundle({" +
      "\n    tenantId: \"t1\",\n    name: \"organiza" +
      "tion_created\",\n    arguments: {\n        " +
      "creatorID: \"564\",\n        organizationID" +
      ": \"789\",\n    }\n}).then((response) => {\n " +
      "   // handle response\n})\n\304\002*\301\002\n\017\n\005label\022" +
      "\006\032\004cURL\n\016\n\004lang\022\006\032\004curl\n\235\002\n\006source\022\222\002\032\217\002" +
      "curl --location --request POST \'localhos" +
      "t:3476/v1/tenants/{tenant_id}/data/run-b" +
      "undle\' \\\n--header \'Content-Type: applica" +
      "tion/json\' \\\n--data-raw \'{\n    \"name\": \"" +
      "organization_created\",\n    \"arguments\": " +
      "{\n        \"creatorID\": \"564\",\n        \"o" +
      "rganizationID\": \"789\",\n    }\n}\'\202\323\344\223\002,\"\'/" +
      "v1/tenants/{tenant_id}/data/run-bundle:\001" +
      "*2\310!\n\006Bundle\022\206\025\n\005Write\022\033.base.v1.BundleW" +
      "riteRequest\032\034.base.v1.BundleWriteRespons" +
      "e\"\301\024\222A\216\024\n\006Bundle\022\014write bundle*\014bundle.w" +
      "ritej\347\023\n\rx-codeSamples\022\325\0232\322\023\n\323\006*\320\006\n\r\n\005la" +
      "bel\022\004\032\002go\n\014\n\004lang\022\004\032\002go\n\260\006\n\006source\022\245\006\032\242\006" +
      "rr, err := client.Bundle.Write(context.B" +
      "ackground(), &v1.BundleWriteRequest{\n   " +
      " TenantId: \"t1\",\n    Bundles: []*v1.Data" +
      "Bundle{\n        {\n            Name: \"org" +
      "anization_created\",\n            Argument" +
      "s: []string{\n                \"creatorID\"" +
      ",\n                \"organizationID\",\n    " +
      "        },\n            Operations: []*v1" +
      ".Operation{\n                {\n          " +
      "          RelationshipsWrite: []string{\n" +
      "                        \"organization:{{" +
      ".organizationID}}#admin@user:{{.creatorI" +
      "D}}\",\n                        \"organizat" +
      "ion:{{.organizationID}}#manager@user:{{." +
      "creatorID}}\",\n                    },\n   " +
      "                 AttributesWrite: []stri" +
      "ng{\n                        \"organizatio" +
      "n:{{.organizationID}}$public|boolean:fal" +
      "se\",\n                    },\n            " +
      "    },\n            },\n        },\n    },\n" +
      "})\n\233\006*\230\006\n\017\n\005label\022\006\032\004node\n\024\n\004lang\022\014\032\njav" +
      "ascript\n\356\005\n\006source\022\343\005\032\340\005client.bundle.wr" +
      "ite({\n    tenantId: \"t1\",\n    bundles: [" +
      "\n        {\n            name: \"organizati" +
      "on_created\",\n            arguments: [\n  " +
      "              \"creatorID\",\n             " +
      "   \"organizationID\",\n            ],\n    " +
      "        operations: [\n                {\n" +
      "                    relationships_write:" +
      " [\n                        \"organization" +
      ":{{.organizationID}}#admin@user:{{.creat" +
      "orID}}\",\n                        \"organi" +
      "zation:{{.organizationID}}#manager@user:" +
      "{{.creatorID}}\",\n                    ],\n" +
      "                    attributes_write: [\n" +
      "                        \"organization:{{" +
      ".organizationID}}$public|boolean:false\"," +
      "\n                    ]\n                }" +
      "\n            ]\n        }\n    ]\n}).then((" +
      "response) => {\n    // handle response\n})" +
      "\n\333\006*\330\006\n\017\n\005label\022\006\032\004cURL\n\016\n\004lang\022\006\032\004curl\n" +
      "\264\006\n\006source\022\251\006\032\246\006curl --location --reques" +
      "t POST \'localhost:3476/v1/tenants/{tenan" +
      "t_id}/bundle/write\' \\\n--header \'Content-" +
      "Type: application/json\' \\\n--data-raw \'{\n" +
      "    \"bundles\": [\n        {\n            \"" +
      "name\": \"organization_created\"\n          " +
      "  \"arguments\": [\n                \"creato" +
      "rID\",\n                \"organizationID\"\n " +
      "           ],\n            \"operations\": " +
      "[\n                {\n                    " +
      "\"relationships_write\": [\n               " +
      "         \"organization:{{.organizationID" +
      "}}#admin@user:{{.creatorID}}\",\n         " +
      "               \"organization:{{.organiza" +
      "tionID}}#manager@user:{{.creatorID}}\",\n " +
      "                   ],\n                  " +
      "  \"attributes_write\": [\n                " +
      "        \"organization:{{.organizationID}" +
      "}$public|boolean:false\",\n               " +
      "     ],\n                },\n            ]" +
      ",\n        },\n    ],\n}\'\202\323\344\223\002)\"$/v1/tenant" +
      "s/{tenant_id}/bundle/write:\001*\022\216\006\n\004Read\022\032" +
      ".base.v1.BundleReadRequest\032\033.base.v1.Bun" +
      "dleReadResponse\"\314\005\222A\232\005\n\006Bundle\022\013read bun" +
      "dle*\013bundle.readj\365\004\n\rx-codeSamples\022\343\0042\340\004" +
      "\n\270\001*\265\001\n\r\n\005label\022\004\032\002go\n\014\n\004lang\022\004\032\002go\n\225\001\n\006" +
      "source\022\212\001\032\207\001rr, err: = client.Bundle.Rea" +
      "d(context.Background(), &v1.BundleReadRe" +
      "quest{\n    TenantId: \"t1\",\n    Name:    " +
      " \"organization_created\",\n})\n\265\001*\262\001\n\017\n\005lab" +
      "el\022\006\032\004node\n\024\n\004lang\022\014\032\njavascript\n\210\001\n\006sou" +
      "rce\022~\032|client.bundle.read({\n    tenantId" +
      ": \"t1\",\n    name: \"organization_created\"" +
      ",\n}).then((response) => {\n    // handle " +
      "response\n})\n\352\001*\347\001\n\017\n\005label\022\006\032\004cURL\n\016\n\004la" +
      "ng\022\006\032\004curl\n\303\001\n\006source\022\270\001\032\265\001curl --locati" +
      "on --request POST \'localhost:3476/v1/ten" +
      "ants/{tenant_id}/bundle/read\' \\\n--header" +
      " \'Content-Type: application/json\' \\\n--da" +
      "ta-raw \'{\n    \"name\": \"organization_crea" +
      "ted\",\n}\'\202\323\344\223\002(\"#/v1/tenants/{tenant_id}/" +
      "bundle/read:\001*\022\243\006\n\006Delete\022\034.base.v1.Bund" +
      "leDeleteRequest\032\035.base.v1.BundleDeleteRe" +
      "sponse\"\333\005\222A\247\005\n\006Bundle\022\rdelete bundle*\rbu" +
      "ndle.deletej\376\004\n\rx-codeSamples\022\354\0042\351\004\n\274\001*\271" +
      "\001\n\r\n\005label\022\004\032\002go\n\014\n\004lang\022\004\032\002go\n\231\001\n\006sourc" +
      "e\022\216\001\032\213\001rr, err: = client.Bundle.Delete(c" +
      "ontext.Background(), &v1.BundleDeleteReq" +
      "uest{\n    TenantId: \"t1\",\n    Name:     " +
      "\"organization_created\",\n})\n\270\001*\265\001\n\017\n\005labe" +
      "l\022\006\032\004node\n\024\n\004lang\022\014\032\njavascript\n\213\001\n\006sour" +
      "ce\022\200\001\032~client.bundle.delete({\n    tenant" +
      "Id: \"t1\",\n    name: \"organization_create" +
      "d\",\n}).then((response) => {\n    // handl" +
      "e response\n})\n\354\001*\351\001\n\017\n\005label\022\006\032\004cURL\n\016\n\004" +
      "lang\022\006\032\004curl\n\305\001\n\006source\022\272\001\032\267\001curl --loca" +
      "tion --request POST \'localhost:3476/v1/t" +
      "enants/{tenant_id}/bundle/delete\' \\\n--he" +
      "ader \'Content-Type: application/json\' \\\n" +
      "--data-raw \'{\n    \"name\": \"organization_" +
      "created\",\n}\'\202\323\344\223\002*\"%/v1/tenants/{tenant_" +
      "id}/bundle/delete:\001*2\302\017\n\007Tenancy\022\274\005\n\006Cre" +
      "ate\022\034.base.v1.TenantCreateRequest\032\035.base" +
      ".v1.TenantCreateResponse\"\364\004\222A\323\004\n\007Tenancy" +
      "\022\rcreate tenant*\016tenants.createj\250\004\n\rx-co" +
      "deSamples\022\226\0042\223\004\n\231\001*\226\001\n\r\n\005label\022\004\032\002go\n\014\n\004" +
      "lang\022\004\032\002go\nw\n\006source\022m\032krr, err: = clien" +
      "t.Tenancy.Create(context.Background(), &" +
      "v1.TenantCreateRequest {\n    Id: \"\"\n    " +
      "Name: \"\"\n})\n\230\001*\225\001\n\017\n\005label\022\006\032\004node\n\024\n\004la" +
      "ng\022\014\032\njavascript\nl\n\006source\022b\032`client.ten" +
      "ancy.create({\n   id: \"\",\n   name: \"\"\n})." +
      "then((response) => {\n    // handle respo" +
      "nse\n})\n\331\001*\326\001\n\017\n\005label\022\006\032\004cURL\n\016\n\004lang\022\006\032" +
      "\004curl\n\262\001\n\006source\022\247\001\032\244\001curl --location --" +
      "request POST \'http://localhost:3476/v1/t" +
      "enants/create\' \\\n--header \'Content-Type:" +
      " application/json\' \\\n--data-raw \'{\n    \"" +
      "id\": \"\",\n    \"name\": \"\"\n}\'\202\323\344\223\002\027\"\022/v1/te" +
      "nants/create:\001*\022\273\004\n\006Delete\022\034.base.v1.Ten" +
      "antDeleteRequest\032\035.base.v1.TenantDeleteR" +
      "esponse\"\363\003\222A\327\003\n\007Tenancy\022\rdelete tenant*\016" +
      "tenants.deletej\254\003\n\rx-codeSamples\022\232\0032\227\003\n\214" +
      "\001*\211\001\n\r\n\005label\022\004\032\002go\n\014\n\004lang\022\004\032\002go\nj\n\006sou" +
      "rce\022`\032^rr, err: = client.Tenancy.Delete(" +
      "context.Background(), &v1.TenantDeleteRe" +
      "quest {\n    Id: \"\"\n})\n\214\001*\211\001\n\017\n\005label\022\006\032\004" +
      "node\n\024\n\004lang\022\014\032\njavascript\n`\n\006source\022V\032T" +
      "client.tenancy.delete({\n   id: \"\",\n}).th" +
      "en((response) => {\n    // handle respons" +
      "e\n})\nw*u\n\017\n\005label\022\006\032\004cURL\n\016\n\004lang\022\006\032\004cur" +
      "l\nR\n\006source\022H\032Fcurl --location --request" +
      " DELETE \'http://localhost:3476/v1/tenant" +
      "s/t1\'\202\323\344\223\002\022*\020/v1/tenants/{id}\022\271\005\n\004List\022\032" +
      ".base.v1.TenantListRequest\032\033.base.v1.Ten" +
      "antListResponse\"\367\004\222A\330\004\n\007Tenancy\022\014list te" +
      "nants*\014tenants.listj\260\004\n\rx-codeSamples\022\236\004" +
      "2\233\004\n\250\001*\245\001\n\r\n\005label\022\004\032\002go\n\014\n\004lang\022\004\032\002go\n\205" +
      "\001\n\006source\022{\032ycr, err := client.Tenancy.L" +
      "ist(context.Background(), &v1.TenantList" +
      "Request{\n    PageSize: 20,\n    Continuou" +
      "sToken: \"\",\n})\n\205\001*\202\001\n\017\n\005label\022\006\032\004node\n\024\n" +
      "\004lang\022\014\032\njavascript\nY\n\006source\022O\032Mlet res" +
      " = client.tenancy.list({\n    pageSize: 2" +
      "0,\n    continuousToken: \"\",\n})\n\345\001*\342\001\n\017\n\005" +
      "label\022\006\032\004cURL\n\016\n\004lang\022\006\032\004curl\n\276\001\n\006source" +
      "\022\263\001\032\260\001curl --location --request POST \'lo" +
      "calhost:3476/v1/tenants/list\' \\\n--header" +
      " \'Content-Type: application/json\' \\\n--da" +
      "ta-raw \'{\n    \"page_size\": \"10\",\n    \"co" +
      "ntinuous_token\": \"\"\n}\'\202\323\344\223\002\025\"\020/v1/tenant" +
      "s/list:\001*B\217\001\n\020org.permify.grpcB\014ServiceP" +
      "rotoP\001Z0github.com/Permify/permify/pkg/p" +
      "b/base/v1;basev1\242\002\003BXX\252\002\007Base.V1\312\002\007Base\\" +
      "V1\342\002\023Base\\V1\\GPBMetadata\352\002\010Base::V1b\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.permify.grpc.BaseProto.getDescriptor(),
          com.validate.ValidateProto.getDescriptor(),
          com.google.api.AnnotationsProto.getDescriptor(),
          com.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor(),
        });
    internal_static_base_v1_PermissionCheckRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_base_v1_PermissionCheckRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionCheckRequest_descriptor,
        new java.lang.String[] { "TenantId", "Metadata", "Entity", "Permission", "Subject", "Context", "Arguments", });
    internal_static_base_v1_PermissionCheckRequestMetadata_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_base_v1_PermissionCheckRequestMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionCheckRequestMetadata_descriptor,
        new java.lang.String[] { "SchemaVersion", "SnapToken", "Depth", });
    internal_static_base_v1_PermissionCheckResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_base_v1_PermissionCheckResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionCheckResponse_descriptor,
        new java.lang.String[] { "Can", "Metadata", });
    internal_static_base_v1_PermissionCheckResponseMetadata_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_base_v1_PermissionCheckResponseMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionCheckResponseMetadata_descriptor,
        new java.lang.String[] { "CheckCount", });
    internal_static_base_v1_PermissionExpandRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_base_v1_PermissionExpandRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionExpandRequest_descriptor,
        new java.lang.String[] { "TenantId", "Metadata", "Entity", "Permission", "Context", "Arguments", });
    internal_static_base_v1_PermissionExpandRequestMetadata_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_base_v1_PermissionExpandRequestMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionExpandRequestMetadata_descriptor,
        new java.lang.String[] { "SchemaVersion", "SnapToken", });
    internal_static_base_v1_PermissionExpandResponse_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_base_v1_PermissionExpandResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionExpandResponse_descriptor,
        new java.lang.String[] { "Tree", });
    internal_static_base_v1_PermissionLookupEntityRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_base_v1_PermissionLookupEntityRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionLookupEntityRequest_descriptor,
        new java.lang.String[] { "TenantId", "Metadata", "EntityType", "Permission", "Subject", "Context", });
    internal_static_base_v1_PermissionLookupEntityRequestMetadata_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_base_v1_PermissionLookupEntityRequestMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionLookupEntityRequestMetadata_descriptor,
        new java.lang.String[] { "SchemaVersion", "SnapToken", "Depth", });
    internal_static_base_v1_PermissionLookupEntityResponse_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_base_v1_PermissionLookupEntityResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionLookupEntityResponse_descriptor,
        new java.lang.String[] { "EntityIds", });
    internal_static_base_v1_PermissionLookupEntityStreamResponse_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_base_v1_PermissionLookupEntityStreamResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionLookupEntityStreamResponse_descriptor,
        new java.lang.String[] { "EntityId", });
    internal_static_base_v1_PermissionEntityFilterRequest_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_base_v1_PermissionEntityFilterRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionEntityFilterRequest_descriptor,
        new java.lang.String[] { "TenantId", "Metadata", "EntityReference", "Subject", "Context", });
    internal_static_base_v1_PermissionEntityFilterRequestMetadata_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_base_v1_PermissionEntityFilterRequestMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionEntityFilterRequestMetadata_descriptor,
        new java.lang.String[] { "SchemaVersion", "SnapToken", "Depth", });
    internal_static_base_v1_PermissionLookupSubjectRequest_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_base_v1_PermissionLookupSubjectRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionLookupSubjectRequest_descriptor,
        new java.lang.String[] { "TenantId", "Metadata", "Entity", "Permission", "SubjectReference", "Context", });
    internal_static_base_v1_PermissionLookupSubjectRequestMetadata_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_base_v1_PermissionLookupSubjectRequestMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionLookupSubjectRequestMetadata_descriptor,
        new java.lang.String[] { "SchemaVersion", "SnapToken", "Depth", });
    internal_static_base_v1_PermissionLookupSubjectResponse_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_base_v1_PermissionLookupSubjectResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionLookupSubjectResponse_descriptor,
        new java.lang.String[] { "SubjectIds", });
    internal_static_base_v1_PermissionSubjectPermissionRequest_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_base_v1_PermissionSubjectPermissionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionSubjectPermissionRequest_descriptor,
        new java.lang.String[] { "TenantId", "Metadata", "Entity", "Subject", "Context", });
    internal_static_base_v1_PermissionSubjectPermissionRequestMetadata_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_base_v1_PermissionSubjectPermissionRequestMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionSubjectPermissionRequestMetadata_descriptor,
        new java.lang.String[] { "SchemaVersion", "SnapToken", "OnlyPermission", "Depth", });
    internal_static_base_v1_PermissionSubjectPermissionResponse_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_base_v1_PermissionSubjectPermissionResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionSubjectPermissionResponse_descriptor,
        new java.lang.String[] { "Results", });
    internal_static_base_v1_PermissionSubjectPermissionResponse_ResultsEntry_descriptor =
      internal_static_base_v1_PermissionSubjectPermissionResponse_descriptor.getNestedTypes().get(0);
    internal_static_base_v1_PermissionSubjectPermissionResponse_ResultsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_PermissionSubjectPermissionResponse_ResultsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_base_v1_WatchRequest_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_base_v1_WatchRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_WatchRequest_descriptor,
        new java.lang.String[] { "TenantId", "SnapToken", });
    internal_static_base_v1_WatchResponse_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_base_v1_WatchResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_WatchResponse_descriptor,
        new java.lang.String[] { "Changes", });
    internal_static_base_v1_SchemaWriteRequest_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_base_v1_SchemaWriteRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_SchemaWriteRequest_descriptor,
        new java.lang.String[] { "TenantId", "Schema", });
    internal_static_base_v1_SchemaWriteResponse_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_base_v1_SchemaWriteResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_SchemaWriteResponse_descriptor,
        new java.lang.String[] { "SchemaVersion", });
    internal_static_base_v1_SchemaPartialWriteRequest_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_base_v1_SchemaPartialWriteRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_SchemaPartialWriteRequest_descriptor,
        new java.lang.String[] { "TenantId", "Metadata", "Partials", });
    internal_static_base_v1_SchemaPartialWriteRequest_PartialsEntry_descriptor =
      internal_static_base_v1_SchemaPartialWriteRequest_descriptor.getNestedTypes().get(0);
    internal_static_base_v1_SchemaPartialWriteRequest_PartialsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_SchemaPartialWriteRequest_PartialsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_base_v1_SchemaPartialWriteRequestMetadata_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_base_v1_SchemaPartialWriteRequestMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_SchemaPartialWriteRequestMetadata_descriptor,
        new java.lang.String[] { "SchemaVersion", });
    internal_static_base_v1_SchemaPartialWriteResponse_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_base_v1_SchemaPartialWriteResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_SchemaPartialWriteResponse_descriptor,
        new java.lang.String[] { "SchemaVersion", });
    internal_static_base_v1_SchemaReadRequest_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_base_v1_SchemaReadRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_SchemaReadRequest_descriptor,
        new java.lang.String[] { "TenantId", "Metadata", });
    internal_static_base_v1_SchemaReadRequestMetadata_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_base_v1_SchemaReadRequestMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_SchemaReadRequestMetadata_descriptor,
        new java.lang.String[] { "SchemaVersion", });
    internal_static_base_v1_SchemaReadResponse_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_base_v1_SchemaReadResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_SchemaReadResponse_descriptor,
        new java.lang.String[] { "Schema", });
    internal_static_base_v1_SchemaListRequest_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_base_v1_SchemaListRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_SchemaListRequest_descriptor,
        new java.lang.String[] { "TenantId", "PageSize", "ContinuousToken", });
    internal_static_base_v1_SchemaListResponse_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_base_v1_SchemaListResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_SchemaListResponse_descriptor,
        new java.lang.String[] { "Head", "Schemas", "ContinuousToken", });
    internal_static_base_v1_SchemaList_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_base_v1_SchemaList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_SchemaList_descriptor,
        new java.lang.String[] { "Version", "CreatedAt", });
    internal_static_base_v1_DataWriteRequest_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_base_v1_DataWriteRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_DataWriteRequest_descriptor,
        new java.lang.String[] { "TenantId", "Metadata", "Tuples", "Attributes", });
    internal_static_base_v1_DataWriteRequestMetadata_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_base_v1_DataWriteRequestMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_DataWriteRequestMetadata_descriptor,
        new java.lang.String[] { "SchemaVersion", });
    internal_static_base_v1_DataWriteResponse_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_base_v1_DataWriteResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_DataWriteResponse_descriptor,
        new java.lang.String[] { "SnapToken", });
    internal_static_base_v1_RelationshipWriteRequest_descriptor =
      getDescriptor().getMessageTypes().get(35);
    internal_static_base_v1_RelationshipWriteRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_RelationshipWriteRequest_descriptor,
        new java.lang.String[] { "TenantId", "Metadata", "Tuples", });
    internal_static_base_v1_RelationshipWriteRequestMetadata_descriptor =
      getDescriptor().getMessageTypes().get(36);
    internal_static_base_v1_RelationshipWriteRequestMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_RelationshipWriteRequestMetadata_descriptor,
        new java.lang.String[] { "SchemaVersion", });
    internal_static_base_v1_RelationshipWriteResponse_descriptor =
      getDescriptor().getMessageTypes().get(37);
    internal_static_base_v1_RelationshipWriteResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_RelationshipWriteResponse_descriptor,
        new java.lang.String[] { "SnapToken", });
    internal_static_base_v1_RelationshipReadRequest_descriptor =
      getDescriptor().getMessageTypes().get(38);
    internal_static_base_v1_RelationshipReadRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_RelationshipReadRequest_descriptor,
        new java.lang.String[] { "TenantId", "Metadata", "Filter", "PageSize", "ContinuousToken", });
    internal_static_base_v1_RelationshipReadRequestMetadata_descriptor =
      getDescriptor().getMessageTypes().get(39);
    internal_static_base_v1_RelationshipReadRequestMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_RelationshipReadRequestMetadata_descriptor,
        new java.lang.String[] { "SnapToken", });
    internal_static_base_v1_RelationshipReadResponse_descriptor =
      getDescriptor().getMessageTypes().get(40);
    internal_static_base_v1_RelationshipReadResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_RelationshipReadResponse_descriptor,
        new java.lang.String[] { "Tuples", "ContinuousToken", });
    internal_static_base_v1_AttributeReadRequest_descriptor =
      getDescriptor().getMessageTypes().get(41);
    internal_static_base_v1_AttributeReadRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_AttributeReadRequest_descriptor,
        new java.lang.String[] { "TenantId", "Metadata", "Filter", "PageSize", "ContinuousToken", });
    internal_static_base_v1_AttributeReadRequestMetadata_descriptor =
      getDescriptor().getMessageTypes().get(42);
    internal_static_base_v1_AttributeReadRequestMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_AttributeReadRequestMetadata_descriptor,
        new java.lang.String[] { "SnapToken", });
    internal_static_base_v1_AttributeReadResponse_descriptor =
      getDescriptor().getMessageTypes().get(43);
    internal_static_base_v1_AttributeReadResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_AttributeReadResponse_descriptor,
        new java.lang.String[] { "Attributes", "ContinuousToken", });
    internal_static_base_v1_DataDeleteRequest_descriptor =
      getDescriptor().getMessageTypes().get(44);
    internal_static_base_v1_DataDeleteRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_DataDeleteRequest_descriptor,
        new java.lang.String[] { "TenantId", "TupleFilter", "AttributeFilter", });
    internal_static_base_v1_DataDeleteResponse_descriptor =
      getDescriptor().getMessageTypes().get(45);
    internal_static_base_v1_DataDeleteResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_DataDeleteResponse_descriptor,
        new java.lang.String[] { "SnapToken", });
    internal_static_base_v1_RelationshipDeleteRequest_descriptor =
      getDescriptor().getMessageTypes().get(46);
    internal_static_base_v1_RelationshipDeleteRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_RelationshipDeleteRequest_descriptor,
        new java.lang.String[] { "TenantId", "Filter", });
    internal_static_base_v1_RelationshipDeleteResponse_descriptor =
      getDescriptor().getMessageTypes().get(47);
    internal_static_base_v1_RelationshipDeleteResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_RelationshipDeleteResponse_descriptor,
        new java.lang.String[] { "SnapToken", });
    internal_static_base_v1_BundleRunRequest_descriptor =
      getDescriptor().getMessageTypes().get(48);
    internal_static_base_v1_BundleRunRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_BundleRunRequest_descriptor,
        new java.lang.String[] { "TenantId", "Name", "Arguments", });
    internal_static_base_v1_BundleRunRequest_ArgumentsEntry_descriptor =
      internal_static_base_v1_BundleRunRequest_descriptor.getNestedTypes().get(0);
    internal_static_base_v1_BundleRunRequest_ArgumentsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_BundleRunRequest_ArgumentsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_base_v1_BundleRunResponse_descriptor =
      getDescriptor().getMessageTypes().get(49);
    internal_static_base_v1_BundleRunResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_BundleRunResponse_descriptor,
        new java.lang.String[] { "SnapToken", });
    internal_static_base_v1_BundleWriteRequest_descriptor =
      getDescriptor().getMessageTypes().get(50);
    internal_static_base_v1_BundleWriteRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_BundleWriteRequest_descriptor,
        new java.lang.String[] { "TenantId", "Bundles", });
    internal_static_base_v1_BundleWriteResponse_descriptor =
      getDescriptor().getMessageTypes().get(51);
    internal_static_base_v1_BundleWriteResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_BundleWriteResponse_descriptor,
        new java.lang.String[] { "Names", });
    internal_static_base_v1_BundleReadRequest_descriptor =
      getDescriptor().getMessageTypes().get(52);
    internal_static_base_v1_BundleReadRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_BundleReadRequest_descriptor,
        new java.lang.String[] { "TenantId", "Name", });
    internal_static_base_v1_BundleReadResponse_descriptor =
      getDescriptor().getMessageTypes().get(53);
    internal_static_base_v1_BundleReadResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_BundleReadResponse_descriptor,
        new java.lang.String[] { "Bundle", });
    internal_static_base_v1_BundleDeleteRequest_descriptor =
      getDescriptor().getMessageTypes().get(54);
    internal_static_base_v1_BundleDeleteRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_BundleDeleteRequest_descriptor,
        new java.lang.String[] { "TenantId", "Name", });
    internal_static_base_v1_BundleDeleteResponse_descriptor =
      getDescriptor().getMessageTypes().get(55);
    internal_static_base_v1_BundleDeleteResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_BundleDeleteResponse_descriptor,
        new java.lang.String[] { "Name", });
    internal_static_base_v1_TenantCreateRequest_descriptor =
      getDescriptor().getMessageTypes().get(56);
    internal_static_base_v1_TenantCreateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_TenantCreateRequest_descriptor,
        new java.lang.String[] { "Id", "Name", });
    internal_static_base_v1_TenantCreateResponse_descriptor =
      getDescriptor().getMessageTypes().get(57);
    internal_static_base_v1_TenantCreateResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_TenantCreateResponse_descriptor,
        new java.lang.String[] { "Tenant", });
    internal_static_base_v1_TenantDeleteRequest_descriptor =
      getDescriptor().getMessageTypes().get(58);
    internal_static_base_v1_TenantDeleteRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_TenantDeleteRequest_descriptor,
        new java.lang.String[] { "Id", });
    internal_static_base_v1_TenantDeleteResponse_descriptor =
      getDescriptor().getMessageTypes().get(59);
    internal_static_base_v1_TenantDeleteResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_TenantDeleteResponse_descriptor,
        new java.lang.String[] { "Tenant", });
    internal_static_base_v1_TenantListRequest_descriptor =
      getDescriptor().getMessageTypes().get(60);
    internal_static_base_v1_TenantListRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_TenantListRequest_descriptor,
        new java.lang.String[] { "PageSize", "ContinuousToken", });
    internal_static_base_v1_TenantListResponse_descriptor =
      getDescriptor().getMessageTypes().get(61);
    internal_static_base_v1_TenantListResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_TenantListResponse_descriptor,
        new java.lang.String[] { "Tenants", "ContinuousToken", });
    descriptor.resolveAllFeaturesImmutable();
    org.permify.grpc.BaseProto.getDescriptor();
    com.validate.ValidateProto.getDescriptor();
    com.google.api.AnnotationsProto.getDescriptor();
    com.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    registry.add(com.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.openapiv2Field);
    registry.add(com.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.openapiv2Operation);
    registry.add(com.validate.ValidateProto.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
