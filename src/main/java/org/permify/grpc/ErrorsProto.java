// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base/v1/errors.proto
// Protobuf Java Version: 4.27.2

package org.permify.grpc;

public final class ErrorsProto {
  private ErrorsProto() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      ErrorsProto.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_base_v1_ErrorResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_base_v1_ErrorResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024base/v1/errors.proto\022\007base.v1\"Q\n\rError" +
      "Response\022&\n\004code\030\001 \001(\0162\022.base.v1.ErrorCo" +
      "deR\004code\022\030\n\007message\030\002 \001(\tR\007message*\340\025\n\tE" +
      "rrorCode\022\032\n\026ERROR_CODE_UNSPECIFIED\020\000\022$\n\037" +
      "ERROR_CODE_MISSING_BEARER_TOKEN\020\351\007\022\037\n\032ER" +
      "ROR_CODE_UNAUTHENTICATED\020\352\007\022!\n\034ERROR_COD" +
      "E_MISSING_TENANT_ID\020\353\007\022 \n\033ERROR_CODE_INV" +
      "ALID_AUDIENCE\020\354\007\022\036\n\031ERROR_CODE_INVALID_C" +
      "LAIMS\020\355\007\022\036\n\031ERROR_CODE_INVALID_ISSUER\020\356\007" +
      "\022$\n\037ERROR_CODE_INVALID_BEARER_TOKEN\020\357\007\022\032" +
      "\n\025ERROR_CODE_VALIDATION\020\320\017\022$\n\037ERROR_CODE" +
      "_UNDEFINED_CHILD_TYPE\020\322\017\022$\n\037ERROR_CODE_U" +
      "NDEFINED_CHILD_KIND\020\323\017\022,\n\'ERROR_CODE_UND" +
      "EFINED_RELATION_REFERENCE\020\326\017\022+\n&ERROR_CO" +
      "DE_NOT_SUPPORTED_RELATION_WALK\020\327\017\0222\n-ERR" +
      "OR_CODE_ENTITY_AND_SUBJECT_CANNOT_BE_EQU" +
      "AL\020\330\017\022 \n\033ERROR_CODE_DEPTH_NOT_ENOUGH\020\331\017\022" +
      "A\n<ERROR_CODE_RELATION_REFERENCE_NOT_FOU" +
      "ND_IN_ENTITY_REFERENCES\020\332\017\022A\n<ERROR_CODE" +
      "_RELATION_REFERENCE_MUST_HAVE_ONE_ENTITY" +
      "_REFERENCE\020\333\017\022+\n&ERROR_CODE_DUPLICATED_E" +
      "NTITY_REFERENCE\020\334\017\022-\n(ERROR_CODE_DUPLICA" +
      "TED_RELATION_REFERENCE\020\335\017\022/\n*ERROR_CODE_" +
      "DUPLICATED_PERMISSION_REFERENCE\020\336\017\022\034\n\027ER" +
      "ROR_CODE_SCHEMA_PARSE\020\337\017\022\036\n\031ERROR_CODE_S" +
      "CHEMA_COMPILE\020\340\017\022.\n)ERROR_CODE_SUBJECT_R" +
      "ELATION_MUST_BE_EMPTY\020\341\017\0220\n+ERROR_CODE_S" +
      "UBJECT_RELATION_CANNOT_BE_EMPTY\020\342\017\0227\n2ER" +
      "ROR_CODE_SCHEMA_MUST_HAVE_USER_ENTITY_DE" +
      "FINITION\020\343\017\022!\n\034ERROR_CODE_UNIQUE_CONSTRA" +
      "INT\020\344\017\022(\n#ERROR_CODE_INVALID_CONTINUOUS_" +
      "TOKEN\020\345\017\022\033\n\026ERROR_CODE_INVALID_KEY\020\346\017\022$\n" +
      "\037ERROR_CODE_ENTITY_TYPE_REQUIRED\020\347\017\0224\n/E" +
      "RROR_CODE_NO_ENTITY_REFERENCES_FOUND_IN_" +
      "SCHEMA\020\350\017\022 \n\033ERROR_CODE_INVALID_ARGUMENT" +
      "\020\351\017\022&\n!ERROR_CODE_INVALID_RULE_REFERENCE" +
      "\020\352\017\022\"\n\035ERROR_CODE_NOT_SUPPORTED_WALK\020\353\017\022" +
      " \n\033ERROR_CODE_MISSING_ARGUMENT\020\354\017\022\035\n\030ERR" +
      "OR_CODE_ALREADY_EXIST\020\355\017\022+\n&ERROR_CODE_M" +
      "AX_DATA_PER_WRITE_EXCEEDED\020\356\017\022\031\n\024ERROR_C" +
      "ODE_NOT_FOUND\020\240\037\022%\n ERROR_CODE_ENTITY_TY" +
      "PE_NOT_FOUND\020\241\037\022$\n\037ERROR_CODE_PERMISSION" +
      "_NOT_FOUND\020\242\037\022 \n\033ERROR_CODE_SCHEMA_NOT_F" +
      "OUND\020\243\037\022&\n!ERROR_CODE_SUBJECT_TYPE_NOT_F" +
      "OUND\020\244\037\022+\n&ERROR_CODE_ENTITY_DEFINITION_" +
      "NOT_FOUND\020\245\037\022/\n*ERROR_CODE_PERMISSION_DE" +
      "FINITION_NOT_FOUND\020\246\037\022-\n(ERROR_CODE_RELA" +
      "TION_DEFINITION_NOT_FOUND\020\247\037\022 \n\033ERROR_CO" +
      "DE_RECORD_NOT_FOUND\020\250\037\022 \n\033ERROR_CODE_TEN" +
      "ANT_NOT_FOUND\020\251\037\022.\n)ERROR_CODE_ATTRIBUTE" +
      "_DEFINITION_NOT_FOUND\020\252\037\022\'\n\"ERROR_CODE_A" +
      "TTRIBUTE_TYPE_MISMATCH\020\253\037\022 \n\033ERROR_CODE_" +
      "BUNDLE_NOT_FOUND\020\254\037\022)\n$ERROR_CODE_RULE_D" +
      "EFINITION_NOT_FOUND\020\255\037\022*\n%ERROR_CODE_ENT" +
      "ITY_STATEMENT_NOT_FOUND\020\256\037\022#\n\036ERROR_CODE" +
      "_REFERENCE_NOT_FOUND\020\257\037\022\030\n\023ERROR_CODE_IN" +
      "TERNAL\020\210\'\022\031\n\024ERROR_CODE_CANCELLED\020\211\'\022\033\n\026" +
      "ERROR_CODE_SQL_BUILDER\020\212\'\022\037\n\032ERROR_CODE_" +
      "CIRCUIT_BREAKER\020\213\'\022\031\n\024ERROR_CODE_EXECUTI" +
      "ON\020\215\'\022\024\n\017ERROR_CODE_SCAN\020\216\'\022\031\n\024ERROR_COD" +
      "E_MIGRATION\020\217\'\022!\n\034ERROR_CODE_TYPE_CONVER" +
      "SATION\020\220\'\022!\n\034ERROR_CODE_ERROR_MAX_RETRIE" +
      "S\020\221\'\022\030\n\023ERROR_CODE_ROLLBACK\020\222\'\0229\n4ERROR_" +
      "CODE_EXCLUSION_REQUIRES_MORE_THAN_ONE_FU" +
      "NCTION\020\223\'\022\037\n\032ERROR_CODE_NOT_IMPLEMENTED\020" +
      "\224\'\022\031\n\024ERROR_CODE_DATASTORE\020\225\'\022&\n!ERROR_C" +
      "ODE_UNKNOWN_STATEMENT_TYPE\020\226\'\022&\n!ERROR_C" +
      "ODE_UNKNOWN_REFERENCE_TYPE\020\227\'\0222\n-ERROR_C" +
      "ODE_CANNOT_CONVERT_TO_ENTITY_STATEMENT\020\230" +
      "\'\0224\n/ERROR_CODE_CANNOT_CONVERT_TO_RELATI" +
      "ON_STATEMENT\020\231\'\0225\n0ERROR_CODE_CANNOT_CON" +
      "VERT_TO_ATTRIBUTE_STATEMENT\020\232\'\022\035\n\030ERROR_" +
      "CODE_SERIALIZATION\020\233\'B\216\001\n\020org.permify.gr" +
      "pcB\013ErrorsProtoP\001Z0github.com/Permify/pe" +
      "rmify/pkg/pb/base/v1;basev1\242\002\003BXX\252\002\007Base" +
      ".V1\312\002\007Base\\V1\342\002\023Base\\V1\\GPBMetadata\352\002\010Ba" +
      "se::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_base_v1_ErrorResponse_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_base_v1_ErrorResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_base_v1_ErrorResponse_descriptor,
        new java.lang.String[] { "Code", "Message", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
