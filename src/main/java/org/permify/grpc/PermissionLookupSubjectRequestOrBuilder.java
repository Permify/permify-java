// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base/v1/service.proto
// Protobuf Java Version: 4.27.2

package org.permify.grpc;

public interface PermissionLookupSubjectRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:base.v1.PermissionLookupSubjectRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Identifier of the tenant, required, and must match the pattern "[a-zA-Z0-9-,]+", max 64 bytes.
   * </pre>
   *
   * <code>string tenant_id = 1 [json_name = "tenant_id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The tenantId.
   */
  java.lang.String getTenantId();
  /**
   * <pre>
   * Identifier of the tenant, required, and must match the pattern "[a-zA-Z0-9-,]+", max 64 bytes.
   * </pre>
   *
   * <code>string tenant_id = 1 [json_name = "tenant_id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The bytes for tenantId.
   */
  com.google.protobuf.ByteString
      getTenantIdBytes();

  /**
   * <pre>
   * Metadata associated with this request, required.
   * </pre>
   *
   * <code>.base.v1.PermissionLookupSubjectRequestMetadata metadata = 2 [json_name = "metadata", (.validate.rules) = { ... }</code>
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();
  /**
   * <pre>
   * Metadata associated with this request, required.
   * </pre>
   *
   * <code>.base.v1.PermissionLookupSubjectRequestMetadata metadata = 2 [json_name = "metadata", (.validate.rules) = { ... }</code>
   * @return The metadata.
   */
  org.permify.grpc.PermissionLookupSubjectRequestMetadata getMetadata();
  /**
   * <pre>
   * Metadata associated with this request, required.
   * </pre>
   *
   * <code>.base.v1.PermissionLookupSubjectRequestMetadata metadata = 2 [json_name = "metadata", (.validate.rules) = { ... }</code>
   */
  org.permify.grpc.PermissionLookupSubjectRequestMetadataOrBuilder getMetadataOrBuilder();

  /**
   * <pre>
   * Entity for which to check the permission, required.
   * </pre>
   *
   * <code>.base.v1.Entity entity = 3 [json_name = "entity", (.validate.rules) = { ... }</code>
   * @return Whether the entity field is set.
   */
  boolean hasEntity();
  /**
   * <pre>
   * Entity for which to check the permission, required.
   * </pre>
   *
   * <code>.base.v1.Entity entity = 3 [json_name = "entity", (.validate.rules) = { ... }</code>
   * @return The entity.
   */
  org.permify.grpc.Entity getEntity();
  /**
   * <pre>
   * Entity for which to check the permission, required.
   * </pre>
   *
   * <code>.base.v1.Entity entity = 3 [json_name = "entity", (.validate.rules) = { ... }</code>
   */
  org.permify.grpc.EntityOrBuilder getEntityOrBuilder();

  /**
   * <pre>
   * Permission to be checked, can be a permission or relation. Required, and must match the pattern "^([a-zA-Z][a-zA-Z0-9_]{1,62}[a-zA-Z0-9])$", max 64 bytes.
   * </pre>
   *
   * <code>string permission = 4 [json_name = "permission", (.validate.rules) = { ... }</code>
   * @return The permission.
   */
  java.lang.String getPermission();
  /**
   * <pre>
   * Permission to be checked, can be a permission or relation. Required, and must match the pattern "^([a-zA-Z][a-zA-Z0-9_]{1,62}[a-zA-Z0-9])$", max 64 bytes.
   * </pre>
   *
   * <code>string permission = 4 [json_name = "permission", (.validate.rules) = { ... }</code>
   * @return The bytes for permission.
   */
  com.google.protobuf.ByteString
      getPermissionBytes();

  /**
   * <pre>
   * Reference to the subject to lookup.
   * </pre>
   *
   * <code>.base.v1.RelationReference subject_reference = 5 [json_name = "subject_reference"];</code>
   * @return Whether the subjectReference field is set.
   */
  boolean hasSubjectReference();
  /**
   * <pre>
   * Reference to the subject to lookup.
   * </pre>
   *
   * <code>.base.v1.RelationReference subject_reference = 5 [json_name = "subject_reference"];</code>
   * @return The subjectReference.
   */
  org.permify.grpc.RelationReference getSubjectReference();
  /**
   * <pre>
   * Reference to the subject to lookup.
   * </pre>
   *
   * <code>.base.v1.RelationReference subject_reference = 5 [json_name = "subject_reference"];</code>
   */
  org.permify.grpc.RelationReferenceOrBuilder getSubjectReferenceOrBuilder();

  /**
   * <pre>
   * Context associated with this request.
   * </pre>
   *
   * <code>.base.v1.Context context = 6 [json_name = "context"];</code>
   * @return Whether the context field is set.
   */
  boolean hasContext();
  /**
   * <pre>
   * Context associated with this request.
   * </pre>
   *
   * <code>.base.v1.Context context = 6 [json_name = "context"];</code>
   * @return The context.
   */
  org.permify.grpc.Context getContext();
  /**
   * <pre>
   * Context associated with this request.
   * </pre>
   *
   * <code>.base.v1.Context context = 6 [json_name = "context"];</code>
   */
  org.permify.grpc.ContextOrBuilder getContextOrBuilder();
}
