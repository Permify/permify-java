// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base/v1/base.proto
// Protobuf Java Version: 4.27.2

package org.permify.grpc;

/**
 * <pre>
 * Call represents a call to a rule. It includes the name of the rule and the arguments passed to it.
 * </pre>
 *
 * Protobuf type {@code base.v1.Call}
 */
public final class Call extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:base.v1.Call)
    CallOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      Call.class.getName());
  }
  // Use Call.newBuilder() to construct.
  private Call(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Call() {
    ruleName_ = "";
    arguments_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.permify.grpc.BaseProto.internal_static_base_v1_Call_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.permify.grpc.BaseProto.internal_static_base_v1_Call_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.permify.grpc.Call.class, org.permify.grpc.Call.Builder.class);
  }

  public static final int RULE_NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object ruleName_ = "";
  /**
   * <pre>
   * Name of the rule
   * </pre>
   *
   * <code>string rule_name = 1 [json_name = "ruleName"];</code>
   * @return The ruleName.
   */
  @java.lang.Override
  public java.lang.String getRuleName() {
    java.lang.Object ref = ruleName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      ruleName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of the rule
   * </pre>
   *
   * <code>string rule_name = 1 [json_name = "ruleName"];</code>
   * @return The bytes for ruleName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRuleNameBytes() {
    java.lang.Object ref = ruleName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      ruleName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ARGUMENTS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<org.permify.grpc.Argument> arguments_;
  /**
   * <pre>
   * Arguments passed to the rule
   * </pre>
   *
   * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
   */
  @java.lang.Override
  public java.util.List<org.permify.grpc.Argument> getArgumentsList() {
    return arguments_;
  }
  /**
   * <pre>
   * Arguments passed to the rule
   * </pre>
   *
   * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.permify.grpc.ArgumentOrBuilder> 
      getArgumentsOrBuilderList() {
    return arguments_;
  }
  /**
   * <pre>
   * Arguments passed to the rule
   * </pre>
   *
   * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
   */
  @java.lang.Override
  public int getArgumentsCount() {
    return arguments_.size();
  }
  /**
   * <pre>
   * Arguments passed to the rule
   * </pre>
   *
   * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
   */
  @java.lang.Override
  public org.permify.grpc.Argument getArguments(int index) {
    return arguments_.get(index);
  }
  /**
   * <pre>
   * Arguments passed to the rule
   * </pre>
   *
   * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
   */
  @java.lang.Override
  public org.permify.grpc.ArgumentOrBuilder getArgumentsOrBuilder(
      int index) {
    return arguments_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(ruleName_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, ruleName_);
    }
    for (int i = 0; i < arguments_.size(); i++) {
      output.writeMessage(2, arguments_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(ruleName_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, ruleName_);
    }
    for (int i = 0; i < arguments_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, arguments_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.permify.grpc.Call)) {
      return super.equals(obj);
    }
    org.permify.grpc.Call other = (org.permify.grpc.Call) obj;

    if (!getRuleName()
        .equals(other.getRuleName())) return false;
    if (!getArgumentsList()
        .equals(other.getArgumentsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + RULE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getRuleName().hashCode();
    if (getArgumentsCount() > 0) {
      hash = (37 * hash) + ARGUMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getArgumentsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.permify.grpc.Call parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.permify.grpc.Call parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.permify.grpc.Call parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.permify.grpc.Call parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.permify.grpc.Call parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.permify.grpc.Call parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.permify.grpc.Call parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.permify.grpc.Call parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.permify.grpc.Call parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.permify.grpc.Call parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.permify.grpc.Call parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.permify.grpc.Call parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.permify.grpc.Call prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Call represents a call to a rule. It includes the name of the rule and the arguments passed to it.
   * </pre>
   *
   * Protobuf type {@code base.v1.Call}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:base.v1.Call)
      org.permify.grpc.CallOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.permify.grpc.BaseProto.internal_static_base_v1_Call_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.permify.grpc.BaseProto.internal_static_base_v1_Call_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.permify.grpc.Call.class, org.permify.grpc.Call.Builder.class);
    }

    // Construct using org.permify.grpc.Call.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      ruleName_ = "";
      if (argumentsBuilder_ == null) {
        arguments_ = java.util.Collections.emptyList();
      } else {
        arguments_ = null;
        argumentsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.permify.grpc.BaseProto.internal_static_base_v1_Call_descriptor;
    }

    @java.lang.Override
    public org.permify.grpc.Call getDefaultInstanceForType() {
      return org.permify.grpc.Call.getDefaultInstance();
    }

    @java.lang.Override
    public org.permify.grpc.Call build() {
      org.permify.grpc.Call result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.permify.grpc.Call buildPartial() {
      org.permify.grpc.Call result = new org.permify.grpc.Call(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(org.permify.grpc.Call result) {
      if (argumentsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          arguments_ = java.util.Collections.unmodifiableList(arguments_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.arguments_ = arguments_;
      } else {
        result.arguments_ = argumentsBuilder_.build();
      }
    }

    private void buildPartial0(org.permify.grpc.Call result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.ruleName_ = ruleName_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.permify.grpc.Call) {
        return mergeFrom((org.permify.grpc.Call)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.permify.grpc.Call other) {
      if (other == org.permify.grpc.Call.getDefaultInstance()) return this;
      if (!other.getRuleName().isEmpty()) {
        ruleName_ = other.ruleName_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (argumentsBuilder_ == null) {
        if (!other.arguments_.isEmpty()) {
          if (arguments_.isEmpty()) {
            arguments_ = other.arguments_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureArgumentsIsMutable();
            arguments_.addAll(other.arguments_);
          }
          onChanged();
        }
      } else {
        if (!other.arguments_.isEmpty()) {
          if (argumentsBuilder_.isEmpty()) {
            argumentsBuilder_.dispose();
            argumentsBuilder_ = null;
            arguments_ = other.arguments_;
            bitField0_ = (bitField0_ & ~0x00000002);
            argumentsBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getArgumentsFieldBuilder() : null;
          } else {
            argumentsBuilder_.addAllMessages(other.arguments_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              ruleName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              org.permify.grpc.Argument m =
                  input.readMessage(
                      org.permify.grpc.Argument.parser(),
                      extensionRegistry);
              if (argumentsBuilder_ == null) {
                ensureArgumentsIsMutable();
                arguments_.add(m);
              } else {
                argumentsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object ruleName_ = "";
    /**
     * <pre>
     * Name of the rule
     * </pre>
     *
     * <code>string rule_name = 1 [json_name = "ruleName"];</code>
     * @return The ruleName.
     */
    public java.lang.String getRuleName() {
      java.lang.Object ref = ruleName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ruleName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of the rule
     * </pre>
     *
     * <code>string rule_name = 1 [json_name = "ruleName"];</code>
     * @return The bytes for ruleName.
     */
    public com.google.protobuf.ByteString
        getRuleNameBytes() {
      java.lang.Object ref = ruleName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ruleName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of the rule
     * </pre>
     *
     * <code>string rule_name = 1 [json_name = "ruleName"];</code>
     * @param value The ruleName to set.
     * @return This builder for chaining.
     */
    public Builder setRuleName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ruleName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the rule
     * </pre>
     *
     * <code>string rule_name = 1 [json_name = "ruleName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRuleName() {
      ruleName_ = getDefaultInstance().getRuleName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the rule
     * </pre>
     *
     * <code>string rule_name = 1 [json_name = "ruleName"];</code>
     * @param value The bytes for ruleName to set.
     * @return This builder for chaining.
     */
    public Builder setRuleNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ruleName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<org.permify.grpc.Argument> arguments_ =
      java.util.Collections.emptyList();
    private void ensureArgumentsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        arguments_ = new java.util.ArrayList<org.permify.grpc.Argument>(arguments_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        org.permify.grpc.Argument, org.permify.grpc.Argument.Builder, org.permify.grpc.ArgumentOrBuilder> argumentsBuilder_;

    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public java.util.List<org.permify.grpc.Argument> getArgumentsList() {
      if (argumentsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(arguments_);
      } else {
        return argumentsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public int getArgumentsCount() {
      if (argumentsBuilder_ == null) {
        return arguments_.size();
      } else {
        return argumentsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public org.permify.grpc.Argument getArguments(int index) {
      if (argumentsBuilder_ == null) {
        return arguments_.get(index);
      } else {
        return argumentsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public Builder setArguments(
        int index, org.permify.grpc.Argument value) {
      if (argumentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArgumentsIsMutable();
        arguments_.set(index, value);
        onChanged();
      } else {
        argumentsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public Builder setArguments(
        int index, org.permify.grpc.Argument.Builder builderForValue) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.set(index, builderForValue.build());
        onChanged();
      } else {
        argumentsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public Builder addArguments(org.permify.grpc.Argument value) {
      if (argumentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArgumentsIsMutable();
        arguments_.add(value);
        onChanged();
      } else {
        argumentsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public Builder addArguments(
        int index, org.permify.grpc.Argument value) {
      if (argumentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArgumentsIsMutable();
        arguments_.add(index, value);
        onChanged();
      } else {
        argumentsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public Builder addArguments(
        org.permify.grpc.Argument.Builder builderForValue) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.add(builderForValue.build());
        onChanged();
      } else {
        argumentsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public Builder addArguments(
        int index, org.permify.grpc.Argument.Builder builderForValue) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.add(index, builderForValue.build());
        onChanged();
      } else {
        argumentsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public Builder addAllArguments(
        java.lang.Iterable<? extends org.permify.grpc.Argument> values) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, arguments_);
        onChanged();
      } else {
        argumentsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public Builder clearArguments() {
      if (argumentsBuilder_ == null) {
        arguments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        argumentsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public Builder removeArguments(int index) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.remove(index);
        onChanged();
      } else {
        argumentsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public org.permify.grpc.Argument.Builder getArgumentsBuilder(
        int index) {
      return getArgumentsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public org.permify.grpc.ArgumentOrBuilder getArgumentsOrBuilder(
        int index) {
      if (argumentsBuilder_ == null) {
        return arguments_.get(index);  } else {
        return argumentsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public java.util.List<? extends org.permify.grpc.ArgumentOrBuilder> 
         getArgumentsOrBuilderList() {
      if (argumentsBuilder_ != null) {
        return argumentsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(arguments_);
      }
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public org.permify.grpc.Argument.Builder addArgumentsBuilder() {
      return getArgumentsFieldBuilder().addBuilder(
          org.permify.grpc.Argument.getDefaultInstance());
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public org.permify.grpc.Argument.Builder addArgumentsBuilder(
        int index) {
      return getArgumentsFieldBuilder().addBuilder(
          index, org.permify.grpc.Argument.getDefaultInstance());
    }
    /**
     * <pre>
     * Arguments passed to the rule
     * </pre>
     *
     * <code>repeated .base.v1.Argument arguments = 2 [json_name = "arguments"];</code>
     */
    public java.util.List<org.permify.grpc.Argument.Builder> 
         getArgumentsBuilderList() {
      return getArgumentsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        org.permify.grpc.Argument, org.permify.grpc.Argument.Builder, org.permify.grpc.ArgumentOrBuilder> 
        getArgumentsFieldBuilder() {
      if (argumentsBuilder_ == null) {
        argumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            org.permify.grpc.Argument, org.permify.grpc.Argument.Builder, org.permify.grpc.ArgumentOrBuilder>(
                arguments_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        arguments_ = null;
      }
      return argumentsBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:base.v1.Call)
  }

  // @@protoc_insertion_point(class_scope:base.v1.Call)
  private static final org.permify.grpc.Call DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.permify.grpc.Call();
  }

  public static org.permify.grpc.Call getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Call>
      PARSER = new com.google.protobuf.AbstractParser<Call>() {
    @java.lang.Override
    public Call parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Call> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Call> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.permify.grpc.Call getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

