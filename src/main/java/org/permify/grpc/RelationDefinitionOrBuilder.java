// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base/v1/base.proto
// Protobuf Java Version: 4.27.2

package org.permify.grpc;

public interface RelationDefinitionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:base.v1.RelationDefinition)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The name of the relation, which follows a specific string pattern and has a maximum byte size.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The name of the relation, which follows a specific string pattern and has a maximum byte size.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * A list of references to other relations.
   * </pre>
   *
   * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
   */
  java.util.List<org.permify.grpc.RelationReference> 
      getRelationReferencesList();
  /**
   * <pre>
   * A list of references to other relations.
   * </pre>
   *
   * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
   */
  org.permify.grpc.RelationReference getRelationReferences(int index);
  /**
   * <pre>
   * A list of references to other relations.
   * </pre>
   *
   * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
   */
  int getRelationReferencesCount();
  /**
   * <pre>
   * A list of references to other relations.
   * </pre>
   *
   * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
   */
  java.util.List<? extends org.permify.grpc.RelationReferenceOrBuilder> 
      getRelationReferencesOrBuilderList();
  /**
   * <pre>
   * A list of references to other relations.
   * </pre>
   *
   * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
   */
  org.permify.grpc.RelationReferenceOrBuilder getRelationReferencesOrBuilder(
      int index);
}
