// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base/v1/base.proto
// Protobuf Java Version: 4.27.2

package org.permify.grpc;

/**
 * <pre>
 * The RelationDefinition message provides detailed information about a specific relation.
 * </pre>
 *
 * Protobuf type {@code base.v1.RelationDefinition}
 */
public final class RelationDefinition extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:base.v1.RelationDefinition)
    RelationDefinitionOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      RelationDefinition.class.getName());
  }
  // Use RelationDefinition.newBuilder() to construct.
  private RelationDefinition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private RelationDefinition() {
    name_ = "";
    relationReferences_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.permify.grpc.BaseProto.internal_static_base_v1_RelationDefinition_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.permify.grpc.BaseProto.internal_static_base_v1_RelationDefinition_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.permify.grpc.RelationDefinition.class, org.permify.grpc.RelationDefinition.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * The name of the relation, which follows a specific string pattern and has a maximum byte size.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the relation, which follows a specific string pattern and has a maximum byte size.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RELATION_REFERENCES_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<org.permify.grpc.RelationReference> relationReferences_;
  /**
   * <pre>
   * A list of references to other relations.
   * </pre>
   *
   * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
   */
  @java.lang.Override
  public java.util.List<org.permify.grpc.RelationReference> getRelationReferencesList() {
    return relationReferences_;
  }
  /**
   * <pre>
   * A list of references to other relations.
   * </pre>
   *
   * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.permify.grpc.RelationReferenceOrBuilder> 
      getRelationReferencesOrBuilderList() {
    return relationReferences_;
  }
  /**
   * <pre>
   * A list of references to other relations.
   * </pre>
   *
   * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
   */
  @java.lang.Override
  public int getRelationReferencesCount() {
    return relationReferences_.size();
  }
  /**
   * <pre>
   * A list of references to other relations.
   * </pre>
   *
   * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
   */
  @java.lang.Override
  public org.permify.grpc.RelationReference getRelationReferences(int index) {
    return relationReferences_.get(index);
  }
  /**
   * <pre>
   * A list of references to other relations.
   * </pre>
   *
   * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
   */
  @java.lang.Override
  public org.permify.grpc.RelationReferenceOrBuilder getRelationReferencesOrBuilder(
      int index) {
    return relationReferences_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
    }
    for (int i = 0; i < relationReferences_.size(); i++) {
      output.writeMessage(2, relationReferences_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
    }
    for (int i = 0; i < relationReferences_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, relationReferences_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.permify.grpc.RelationDefinition)) {
      return super.equals(obj);
    }
    org.permify.grpc.RelationDefinition other = (org.permify.grpc.RelationDefinition) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getRelationReferencesList()
        .equals(other.getRelationReferencesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (getRelationReferencesCount() > 0) {
      hash = (37 * hash) + RELATION_REFERENCES_FIELD_NUMBER;
      hash = (53 * hash) + getRelationReferencesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.permify.grpc.RelationDefinition parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.permify.grpc.RelationDefinition parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.permify.grpc.RelationDefinition parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.permify.grpc.RelationDefinition parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.permify.grpc.RelationDefinition parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.permify.grpc.RelationDefinition parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.permify.grpc.RelationDefinition parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.permify.grpc.RelationDefinition parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.permify.grpc.RelationDefinition parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.permify.grpc.RelationDefinition parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.permify.grpc.RelationDefinition parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.permify.grpc.RelationDefinition parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.permify.grpc.RelationDefinition prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The RelationDefinition message provides detailed information about a specific relation.
   * </pre>
   *
   * Protobuf type {@code base.v1.RelationDefinition}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:base.v1.RelationDefinition)
      org.permify.grpc.RelationDefinitionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.permify.grpc.BaseProto.internal_static_base_v1_RelationDefinition_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.permify.grpc.BaseProto.internal_static_base_v1_RelationDefinition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.permify.grpc.RelationDefinition.class, org.permify.grpc.RelationDefinition.Builder.class);
    }

    // Construct using org.permify.grpc.RelationDefinition.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      if (relationReferencesBuilder_ == null) {
        relationReferences_ = java.util.Collections.emptyList();
      } else {
        relationReferences_ = null;
        relationReferencesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.permify.grpc.BaseProto.internal_static_base_v1_RelationDefinition_descriptor;
    }

    @java.lang.Override
    public org.permify.grpc.RelationDefinition getDefaultInstanceForType() {
      return org.permify.grpc.RelationDefinition.getDefaultInstance();
    }

    @java.lang.Override
    public org.permify.grpc.RelationDefinition build() {
      org.permify.grpc.RelationDefinition result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.permify.grpc.RelationDefinition buildPartial() {
      org.permify.grpc.RelationDefinition result = new org.permify.grpc.RelationDefinition(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(org.permify.grpc.RelationDefinition result) {
      if (relationReferencesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          relationReferences_ = java.util.Collections.unmodifiableList(relationReferences_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.relationReferences_ = relationReferences_;
      } else {
        result.relationReferences_ = relationReferencesBuilder_.build();
      }
    }

    private void buildPartial0(org.permify.grpc.RelationDefinition result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.permify.grpc.RelationDefinition) {
        return mergeFrom((org.permify.grpc.RelationDefinition)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.permify.grpc.RelationDefinition other) {
      if (other == org.permify.grpc.RelationDefinition.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (relationReferencesBuilder_ == null) {
        if (!other.relationReferences_.isEmpty()) {
          if (relationReferences_.isEmpty()) {
            relationReferences_ = other.relationReferences_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRelationReferencesIsMutable();
            relationReferences_.addAll(other.relationReferences_);
          }
          onChanged();
        }
      } else {
        if (!other.relationReferences_.isEmpty()) {
          if (relationReferencesBuilder_.isEmpty()) {
            relationReferencesBuilder_.dispose();
            relationReferencesBuilder_ = null;
            relationReferences_ = other.relationReferences_;
            bitField0_ = (bitField0_ & ~0x00000002);
            relationReferencesBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getRelationReferencesFieldBuilder() : null;
          } else {
            relationReferencesBuilder_.addAllMessages(other.relationReferences_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              org.permify.grpc.RelationReference m =
                  input.readMessage(
                      org.permify.grpc.RelationReference.parser(),
                      extensionRegistry);
              if (relationReferencesBuilder_ == null) {
                ensureRelationReferencesIsMutable();
                relationReferences_.add(m);
              } else {
                relationReferencesBuilder_.addMessage(m);
              }
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The name of the relation, which follows a specific string pattern and has a maximum byte size.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the relation, which follows a specific string pattern and has a maximum byte size.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the relation, which follows a specific string pattern and has a maximum byte size.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the relation, which follows a specific string pattern and has a maximum byte size.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the relation, which follows a specific string pattern and has a maximum byte size.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<org.permify.grpc.RelationReference> relationReferences_ =
      java.util.Collections.emptyList();
    private void ensureRelationReferencesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        relationReferences_ = new java.util.ArrayList<org.permify.grpc.RelationReference>(relationReferences_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        org.permify.grpc.RelationReference, org.permify.grpc.RelationReference.Builder, org.permify.grpc.RelationReferenceOrBuilder> relationReferencesBuilder_;

    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public java.util.List<org.permify.grpc.RelationReference> getRelationReferencesList() {
      if (relationReferencesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(relationReferences_);
      } else {
        return relationReferencesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public int getRelationReferencesCount() {
      if (relationReferencesBuilder_ == null) {
        return relationReferences_.size();
      } else {
        return relationReferencesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public org.permify.grpc.RelationReference getRelationReferences(int index) {
      if (relationReferencesBuilder_ == null) {
        return relationReferences_.get(index);
      } else {
        return relationReferencesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public Builder setRelationReferences(
        int index, org.permify.grpc.RelationReference value) {
      if (relationReferencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelationReferencesIsMutable();
        relationReferences_.set(index, value);
        onChanged();
      } else {
        relationReferencesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public Builder setRelationReferences(
        int index, org.permify.grpc.RelationReference.Builder builderForValue) {
      if (relationReferencesBuilder_ == null) {
        ensureRelationReferencesIsMutable();
        relationReferences_.set(index, builderForValue.build());
        onChanged();
      } else {
        relationReferencesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public Builder addRelationReferences(org.permify.grpc.RelationReference value) {
      if (relationReferencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelationReferencesIsMutable();
        relationReferences_.add(value);
        onChanged();
      } else {
        relationReferencesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public Builder addRelationReferences(
        int index, org.permify.grpc.RelationReference value) {
      if (relationReferencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelationReferencesIsMutable();
        relationReferences_.add(index, value);
        onChanged();
      } else {
        relationReferencesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public Builder addRelationReferences(
        org.permify.grpc.RelationReference.Builder builderForValue) {
      if (relationReferencesBuilder_ == null) {
        ensureRelationReferencesIsMutable();
        relationReferences_.add(builderForValue.build());
        onChanged();
      } else {
        relationReferencesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public Builder addRelationReferences(
        int index, org.permify.grpc.RelationReference.Builder builderForValue) {
      if (relationReferencesBuilder_ == null) {
        ensureRelationReferencesIsMutable();
        relationReferences_.add(index, builderForValue.build());
        onChanged();
      } else {
        relationReferencesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public Builder addAllRelationReferences(
        java.lang.Iterable<? extends org.permify.grpc.RelationReference> values) {
      if (relationReferencesBuilder_ == null) {
        ensureRelationReferencesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, relationReferences_);
        onChanged();
      } else {
        relationReferencesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public Builder clearRelationReferences() {
      if (relationReferencesBuilder_ == null) {
        relationReferences_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        relationReferencesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public Builder removeRelationReferences(int index) {
      if (relationReferencesBuilder_ == null) {
        ensureRelationReferencesIsMutable();
        relationReferences_.remove(index);
        onChanged();
      } else {
        relationReferencesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public org.permify.grpc.RelationReference.Builder getRelationReferencesBuilder(
        int index) {
      return getRelationReferencesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public org.permify.grpc.RelationReferenceOrBuilder getRelationReferencesOrBuilder(
        int index) {
      if (relationReferencesBuilder_ == null) {
        return relationReferences_.get(index);  } else {
        return relationReferencesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public java.util.List<? extends org.permify.grpc.RelationReferenceOrBuilder> 
         getRelationReferencesOrBuilderList() {
      if (relationReferencesBuilder_ != null) {
        return relationReferencesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(relationReferences_);
      }
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public org.permify.grpc.RelationReference.Builder addRelationReferencesBuilder() {
      return getRelationReferencesFieldBuilder().addBuilder(
          org.permify.grpc.RelationReference.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public org.permify.grpc.RelationReference.Builder addRelationReferencesBuilder(
        int index) {
      return getRelationReferencesFieldBuilder().addBuilder(
          index, org.permify.grpc.RelationReference.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of references to other relations.
     * </pre>
     *
     * <code>repeated .base.v1.RelationReference relation_references = 2 [json_name = "relationReferences"];</code>
     */
    public java.util.List<org.permify.grpc.RelationReference.Builder> 
         getRelationReferencesBuilderList() {
      return getRelationReferencesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        org.permify.grpc.RelationReference, org.permify.grpc.RelationReference.Builder, org.permify.grpc.RelationReferenceOrBuilder> 
        getRelationReferencesFieldBuilder() {
      if (relationReferencesBuilder_ == null) {
        relationReferencesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            org.permify.grpc.RelationReference, org.permify.grpc.RelationReference.Builder, org.permify.grpc.RelationReferenceOrBuilder>(
                relationReferences_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        relationReferences_ = null;
      }
      return relationReferencesBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:base.v1.RelationDefinition)
  }

  // @@protoc_insertion_point(class_scope:base.v1.RelationDefinition)
  private static final org.permify.grpc.RelationDefinition DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.permify.grpc.RelationDefinition();
  }

  public static org.permify.grpc.RelationDefinition getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RelationDefinition>
      PARSER = new com.google.protobuf.AbstractParser<RelationDefinition>() {
    @java.lang.Override
    public RelationDefinition parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RelationDefinition> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RelationDefinition> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.permify.grpc.RelationDefinition getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

