// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base/v1/service.proto
// Protobuf Java Version: 4.27.2

package org.permify.grpc;

public interface RelationshipWriteRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:base.v1.RelationshipWriteRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Unique identifier for the tenant with specific constraints.
   * </pre>
   *
   * <code>string tenant_id = 1 [json_name = "tenant_id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The tenantId.
   */
  java.lang.String getTenantId();
  /**
   * <pre>
   * Unique identifier for the tenant with specific constraints.
   * </pre>
   *
   * <code>string tenant_id = 1 [json_name = "tenant_id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The bytes for tenantId.
   */
  com.google.protobuf.ByteString
      getTenantIdBytes();

  /**
   * <pre>
   * Metadata for the request. It's required.
   * </pre>
   *
   * <code>.base.v1.RelationshipWriteRequestMetadata metadata = 2 [json_name = "metadata", (.validate.rules) = { ... }</code>
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();
  /**
   * <pre>
   * Metadata for the request. It's required.
   * </pre>
   *
   * <code>.base.v1.RelationshipWriteRequestMetadata metadata = 2 [json_name = "metadata", (.validate.rules) = { ... }</code>
   * @return The metadata.
   */
  org.permify.grpc.RelationshipWriteRequestMetadata getMetadata();
  /**
   * <pre>
   * Metadata for the request. It's required.
   * </pre>
   *
   * <code>.base.v1.RelationshipWriteRequestMetadata metadata = 2 [json_name = "metadata", (.validate.rules) = { ... }</code>
   */
  org.permify.grpc.RelationshipWriteRequestMetadataOrBuilder getMetadataOrBuilder();

  /**
   * <pre>
   * List of tuples for the request. Must have between 1 and 100 items.
   * </pre>
   *
   * <code>repeated .base.v1.Tuple tuples = 3 [json_name = "tuples", (.validate.rules) = { ... }</code>
   */
  java.util.List<org.permify.grpc.Tuple> 
      getTuplesList();
  /**
   * <pre>
   * List of tuples for the request. Must have between 1 and 100 items.
   * </pre>
   *
   * <code>repeated .base.v1.Tuple tuples = 3 [json_name = "tuples", (.validate.rules) = { ... }</code>
   */
  org.permify.grpc.Tuple getTuples(int index);
  /**
   * <pre>
   * List of tuples for the request. Must have between 1 and 100 items.
   * </pre>
   *
   * <code>repeated .base.v1.Tuple tuples = 3 [json_name = "tuples", (.validate.rules) = { ... }</code>
   */
  int getTuplesCount();
  /**
   * <pre>
   * List of tuples for the request. Must have between 1 and 100 items.
   * </pre>
   *
   * <code>repeated .base.v1.Tuple tuples = 3 [json_name = "tuples", (.validate.rules) = { ... }</code>
   */
  java.util.List<? extends org.permify.grpc.TupleOrBuilder> 
      getTuplesOrBuilderList();
  /**
   * <pre>
   * List of tuples for the request. Must have between 1 and 100 items.
   * </pre>
   *
   * <code>repeated .base.v1.Tuple tuples = 3 [json_name = "tuples", (.validate.rules) = { ... }</code>
   */
  org.permify.grpc.TupleOrBuilder getTuplesOrBuilder(
      int index);
}
