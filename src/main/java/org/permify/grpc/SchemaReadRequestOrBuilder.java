// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base/v1/service.proto
// Protobuf Java Version: 4.27.2

package org.permify.grpc;

public interface SchemaReadRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:base.v1.SchemaReadRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * tenant_id is a string that identifies the tenant. It must match the pattern "[a-zA-Z0-9-,]+",
   * be a maximum of 64 bytes, and must not be empty.
   * </pre>
   *
   * <code>string tenant_id = 1 [json_name = "tenant_id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The tenantId.
   */
  java.lang.String getTenantId();
  /**
   * <pre>
   * tenant_id is a string that identifies the tenant. It must match the pattern "[a-zA-Z0-9-,]+",
   * be a maximum of 64 bytes, and must not be empty.
   * </pre>
   *
   * <code>string tenant_id = 1 [json_name = "tenant_id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { ... }</code>
   * @return The bytes for tenantId.
   */
  com.google.protobuf.ByteString
      getTenantIdBytes();

  /**
   * <pre>
   * metadata is the additional information needed for the Read request.
   * </pre>
   *
   * <code>.base.v1.SchemaReadRequestMetadata metadata = 2 [json_name = "metadata", (.validate.rules) = { ... }</code>
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();
  /**
   * <pre>
   * metadata is the additional information needed for the Read request.
   * </pre>
   *
   * <code>.base.v1.SchemaReadRequestMetadata metadata = 2 [json_name = "metadata", (.validate.rules) = { ... }</code>
   * @return The metadata.
   */
  org.permify.grpc.SchemaReadRequestMetadata getMetadata();
  /**
   * <pre>
   * metadata is the additional information needed for the Read request.
   * </pre>
   *
   * <code>.base.v1.SchemaReadRequestMetadata metadata = 2 [json_name = "metadata", (.validate.rules) = { ... }</code>
   */
  org.permify.grpc.SchemaReadRequestMetadataOrBuilder getMetadataOrBuilder();
}
